{"version":3,"sources":["/tools/packaging/catalog/catalog.js"],"names":[],"mappings":"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","file":"tools/packaging/catalog/catalog.js.map","sourcesContent":["var _ = require('underscore');\nvar remoteCatalog = require('./catalog-remote.js');\nvar Console = require('../../console/console.js').Console;\nvar buildmessage = require('../../utils/buildmessage.js');\n\nvar catalog = exports;\n\ncatalog.refreshFailed = undefined;\ncatalog.triedToRefreshRecently = false;\n\ncatalog.Refresh = {};\n\n// Refresh strategy: once at program start\ncatalog.Refresh.OnceAtStart = function (options) {\n  var self = this;\n  self.options = _.extend({}, options);\n};\n\ncatalog.Refresh.OnceAtStart.prototype.beforeCommand = function () {\n  var self = this;\n  if (!catalog.refreshOrWarn(self.options)) {\n    if (self.options.ignoreErrors) {\n      Console.debug(\"Failed to update package catalog, but will continue.\");\n    } else {\n      Console.printError(catalog.refreshError);\n      Console.error(\"This command requires an up-to-date package catalog.  Exiting.\");\n      // Avoid circular dependency.\n      throw new (require('../../cli/main.js').ExitWithCode)(1);\n    }\n  }\n};\n\n// Refresh strategy: never (we don't use the package catalog)\ncatalog.Refresh.Never = function (options) {\n  var self = this;\n  self.options = _.extend({}, options);\n};\n\n// Refreshes the catalog. Returns true on success.\n// On network error, warns and returns false.\n// Throws other errors (ie, programming errors in the tool).\n//\n// THIS IS A HIGH-LEVEL UI COMMAND. DO NOT CALL IT FROM LOW-LEVEL CODE (ie, call\n// it only from main.js or command implementations).\ncatalog.refreshOrWarn = function (options) {\n  catalog.triedToRefreshRecently = true;\n  try {\n    catalog.official.refresh(options);\n    catalog.refreshFailed = false;\n    return true;\n  } catch (err) {\n    // Example errors:\n\n    // Offline, with name-based host:\n    //   Network error: ws://packages.meteor.com/websocket: getaddrinfo ENOTFOUND\n\n    // Offline, with IP-based host:\n    //   Network error: ws://8.8.8.8/websocket: connect ENETUNREACH\n\n    // Online, bad port:\n    //    Network error: wss://packages.meteor.com:8888/websocket: connect ECONNREFUSED\n\n    // Online, socket hangup:\n    //   Network error: wss://packages.meteor.com:80/websocket: socket hang up\n\n    if (err.errorType !== 'DDP.ConnectionError')\n      throw err;\n\n    // XXX is throwing correct for SQLite errors too? probably.\n\n    Console.warn(\"Unable to update package catalog (are you offline?)\");\n    Console.warn();\n    Console.warn(\n      \"If you are using Meteor behind a proxy, set HTTP_PROXY and HTTPS_PROXY environment variables or see this page for more details: \",\n      Console.url(\"https://github.com/meteor/meteor/wiki/Using-Meteor-behind-a-proxy\"));\n\n    // XXX: Make this Console.debug(err)\n    if (Console.isDebugEnabled()) {\n      Console.printError(err);\n    }\n\n    Console.warn();\n\n    catalog.refreshFailed = true;\n    catalog.refreshError = err;\n    return false;\n  }\n};\n\n// Runs 'attempt'; if it fails in a way that can be fixed by refreshing the\n// official catalog, does that and tries again.\ncatalog.runAndRetryWithRefreshIfHelpful = function (attempt) {\n  buildmessage.assertInJob();\n\n  var canRetry = ! (catalog.triedToRefreshRecently ||\n                    catalog.official.offline);\n\n  // Run `attempt` in a nested buildmessage context.\n  var messages = buildmessage.capture(function () {\n    attempt(canRetry);\n  });\n\n  // Did it work? Great.\n  if (! messages.hasMessages()) {\n    return;\n  }\n\n  // Is refreshing unlikely to be useful, either because the error wasn't\n  // related to that, or because we tried to refresh recently, or because we're\n  // not allowed to refresh? Fail, merging the result of these errors into the\n  // current job.\n  if (! (messages.hasMessageWithTag('refreshCouldHelp') && canRetry)) {\n    buildmessage.mergeMessagesIntoCurrentJob(messages);\n    return;\n  }\n\n  // Refresh!\n  // XXX This is a little hacky, as it shares a bunch of code with\n  // catalog.refreshOrWarn, which is a higher-level function that's allowed to\n  // log.\n  catalog.triedToRefreshRecently = true;\n  try {\n    catalog.official.refresh();\n    catalog.refreshFailed = false;\n  } catch (err) {\n    if (err.errorType !== 'DDP.ConnectionError')\n      throw err;\n    // First place the previous errors in the capture.\n    buildmessage.mergeMessagesIntoCurrentJob(messages);\n    // Then put an error representing this DDP error.\n    buildmessage.enterJob(\n      \"refreshing package catalog to resolve previous errors\",\n      function () {\n        buildmessage.error(err.message);\n      }\n    );\n    return;\n  }\n\n  // Try again, this time directly in the current buildmessage job.\n  attempt(false); // canRetry = false\n};\n\n// As a work-around for [] !== [], we use a function to check whether values are acceptable\nvar ACCEPT_NON_EMPTY = function (result) {\n  // null, undefined\n  if (result === null || result === undefined) {\n    return false;\n  }\n  // []\n  if (result.length === 0) {\n    return false;\n  }\n  return true;\n};\n\n// The LayeredCatalog provides a way to query multiple catalogs in a uniform way\n// A LayeredCatalog contains:\n//  - a local catalog referencing the packages of the project\n//  - a reference to the official catalog\nvar LayeredCatalog = function (localCatalog, otherCatalog) {\n  var self = this;\n\n  self.localCatalog = localCatalog;\n  self.otherCatalog = otherCatalog;\n};\n\n_.extend(LayeredCatalog.prototype, {\n  toString: function () {\n    var self = this;\n    return \"LayeredCatalog []\";\n  },\n\n  getLatestVersion: function (...args) {\n    var self = this;\n    return self._returnFirst(\"getLatestVersion\", args, ACCEPT_NON_EMPTY);\n  },\n\n  getAllPackageNames: function () {\n    var self = this;\n    return _.union(self.localCatalog.getAllPackageNames(), self.otherCatalog.getAllPackageNames());\n  },\n\n  _returnFirst: function(f, args, validityOracle) {\n    var self = this;\n    var result = self.localCatalog[f](...args);\n    if (validityOracle(result)) {\n      return result;\n    }\n    return self.otherCatalog[f](...args);\n  },\n\n  getPackage: function (...args) {\n    return this._returnFirst(\"getPackage\", args, ACCEPT_NON_EMPTY);\n  },\n\n  getSortedVersions: function (...args) {\n    return this._returnFirst(\"getSortedVersions\", args, ACCEPT_NON_EMPTY);\n  },\n\n  getSortedVersionRecords: function (...args) {\n    return this._returnFirst(\n      \"getSortedVersionRecords\", args, ACCEPT_NON_EMPTY);\n  },\n\n  getVersion: function (name, version) {\n    var self = this;\n    var result = self.localCatalog.getVersion(name, version);\n    if (!result) {\n      if (/\\+/.test(version)) {\n        return null;\n      }\n      result = self.otherCatalog.getVersion(name, version);\n    }\n    return result;\n  },\n\n  // As getVersion, but returns info on the latest version of the\n  // package, or null if the package doesn't exist or has no versions.\n  // It does not include prereleases (with dashes in the version);\n  getLatestMainlineVersion: function (name) {\n    var self = this;\n\n    var versions = self.getSortedVersions(name);\n    versions.reverse();\n    var latest = _.find(versions, function (version) {\n      return !/-/.test(version);\n    });\n    if (!latest)\n      return null;\n    return self.getVersion(name, latest);\n  }\n});\n\nexports.DEFAULT_TRACK = remoteCatalog.DEFAULT_TRACK;\nexports.official = remoteCatalog.official;\n\n// This is the catalog that's used to actually drive the constraint solver: it\n// contains local packages, and since local packages always beat server\n// packages, it doesn't contain any information about the server version of\n// local packages.\nexports.LayeredCatalog = LayeredCatalog;\n"]}