{"version":3,"sources":["/tools/packaging/catalog/catalog-remote.js"],"names":[],"mappings":"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","file":"tools/packaging/catalog/catalog-remote.js.map","sourcesContent":["var Future = require('fibers/future');\nvar _ = require('underscore');\nvar sqlite3 = require('sqlite3');\n\nvar files = require('../../fs/files.js');\nvar utils = require('../../utils/utils.js');\nvar buildmessage = require('../../utils/buildmessage.js');\nvar config = require('../../meteor-services/config.js');\nvar archinfo = require('../../utils/archinfo.js');\nvar Console = require('../../console/console.js').Console;\n\nvar tropohouse = require('../tropohouse.js');\nvar packageClient = require('../package-client.js');\nvar VersionParser = require('../package-version-parser.js');\n\n\n// XXX: Rationalize these flags.  Maybe use the logger?\nvar DEBUG_SQL = !!process.env.METEOR_DEBUG_SQL;\n\nvar SYNCTOKEN_ID = \"1\";\n\nvar METADATA_LAST_SYNC = \"lastsync\";\n\nvar BUSY_RETRY_ATTEMPTS = 10;\nvar BUSY_RETRY_INTERVAL = 1000;\n\nvar Mutex = function () {\n  var self = this;\n\n  self._locked = false;\n\n  self._waiters = [];\n};\n\n_.extend(Mutex.prototype, {\n  lock: function () {\n    var self = this;\n\n    while (true) {\n      if (!self._locked) {\n        self._locked = true;\n        return;\n      }\n\n      var fut = new Future();\n      self._waiters.push(fut);\n      fut.wait();\n    }\n  },\n\n  unlock: function () {\n    var self = this;\n\n    if (!self._locked) {\n      throw new Error(\"unlock called on unlocked mutex\");\n    }\n\n    self._locked = false;\n    var waiter = self._waiters.shift();\n    if (waiter) {\n      waiter['return']();\n    }\n  }\n});\n\nvar Txn = function (db) {\n  var self = this;\n  self.db = db;\n  self.closed = false;\n  self.committed = false;\n  self.started = false;\n};\n\n_.extend(Txn.prototype, {\n  // Runs a SQL query and returns the rows\n  query: function (sql, params) {\n    var self = this;\n    return self.db._query(sql, params);\n  },\n\n  // Runs a SQL statement, returning no rows\n  execute: function (sql, params) {\n    var self = this;\n    return self.db._execute(sql, params);\n  },\n\n  // Start a transaction\n  begin: function (mode) {\n    var self = this;\n\n    // XXX: Use DEFERRED mode?\n    mode = mode || \"IMMEDIATE\";\n\n    if (self.started) {\n      throw new Error(\"Transaction already started\");\n    }\n\n    self.db._execute(\"BEGIN \" + mode + \" TRANSACTION\");\n    self.started = true;\n  },\n\n  // Releases resources from the transaction; Rollback if commit not already called.\n  close: function () {\n    var self = this;\n\n    if (self.closed) {\n      return;\n    }\n\n    if (!self.started) {\n      return;\n    }\n\n    self.db._execute(\"ROLLBACK TRANSACTION\");\n    self.committed = false;\n    self.closed = true;\n  },\n\n  // Commits the transaction.  close() will then be a no-op\n  commit: function () {\n    var self = this;\n\n    self.db._execute(\"END TRANSACTION\");\n    self.committed = true;\n    self.closed = true;\n  }\n});\n\nvar Db = function (dbFile, options) {\n  var self = this;\n\n  self._dbFile = dbFile;\n\n  self._autoPrepare = true;\n  self._prepared = {};\n\n  self._transactionMutex = new Mutex();\n\n  self._db = self._retry(function () {\n    return self.open(dbFile);\n  });\n\n  // WAL mode copes much better with (multi-process) concurrency\n  self._retry(function () {\n    self._execute('PRAGMA journal_mode=WAL');\n  });\n};\n\n_.extend(Db.prototype, {\n\n  // TODO: Move to utils?\n  _retry: function (f, options) {\n    options = _.extend({ maxAttempts: 3, delay: 500}, options || {});\n\n    for (var attempt = 1; attempt <= options.maxAttempts; attempt++) {\n      try {\n        return f();\n      } catch (err) {\n        if (attempt < options.maxAttempts) {\n          Console.warn(\"Retrying after error\", err);\n        } else {\n          throw err;\n        }\n      }\n\n      if (options.delay) {\n        utils.sleepMs(options.delay);\n      }\n    }\n  },\n\n  // Runs functions serially, in a mutex\n  _serialize: function (f) {\n    var self = this;\n\n    try {\n      self._transactionMutex.lock();\n      return f();\n    } finally {\n      self._transactionMutex.unlock();\n    }\n  },\n\n  // Do not call any other methods on this object after calling this one.\n  // This yields.\n  closePermanently: function () {\n    var self = this;\n    self._closePreparedStatements();\n    var db = self._db;\n    self._db = null;\n    var future = new Future;\n    db.close(future.resolver());\n    future.wait();\n  },\n\n  // Runs the function inside a transaction block\n  runInTransaction: function (action) {\n    var self = this;\n\n    var runOnce = function () {\n      var future = new Future();\n\n      var txn = new Txn(self);\n\n      var t1 = Date.now();\n\n      var rollback = true;\n      var result = null;\n      var resultError = null;\n\n      txn.begin();\n      try {\n        result = action(txn);\n        txn.commit();\n      } catch (err) {\n        resultError = err;\n      } finally {\n        try {\n          txn.close();\n        } catch (e) {\n          // We don't have a lot of options here...\n          Console.warn(\"Error closing transaction\", e);\n        }\n      }\n\n      //self._closePreparedStatements();\n\n      if (DEBUG_SQL) {\n        var t2 = Date.now();\n        // XXX: Hack around not having loggers\n        Console.info(\"Transaction took: \", (t2 - t1));\n      }\n\n      if (resultError) {\n        future['throw'](resultError);\n      } else {\n        future['return'](result);\n      }\n      return future.wait();\n    };\n\n    for (var attempt = 0; ; attempt++) {\n      try {\n        return self._serialize(runOnce);\n      } catch (err) {\n        var retry = false;\n        // Grr... doesn't expose error code; must string-match\n        if (err.message\n            && (   err.message == \"SQLITE_BUSY: database is locked\"\n                || err.message == \"SQLITE_BUSY: cannot commit transaction - SQL statements in progress\")) {\n          if (attempt < BUSY_RETRY_ATTEMPTS) {\n            retry = true;\n          }\n        }\n        if (!retry) {\n          throw err;\n        }\n      }\n\n      // Wait on average BUSY_RETRY_INTERVAL, but randomize to avoid thundering herd\n      var t = (Math.random() + 0.5) * BUSY_RETRY_INTERVAL;\n      utils.sleepMs(t);\n    }\n  },\n\n  open: function (dbFile) {\n    var self = this;\n\n    if ( !files.exists(files.pathDirname(dbFile)) ) {\n      Console.debug(\"Creating database directory\", dbFile);\n\n      var folder = files.pathDirname(dbFile);\n      if ( !files.mkdir_p(folder) )\n        throw new Error(\"Could not create folder at \" + folder);\n    }\n\n    Console.debug(\"Opening db file\", dbFile);\n    return new sqlite3.Database(files.convertToOSPath(dbFile));\n  },\n\n  // Runs a query synchronously, returning all rows\n  // Hidden to enforce transaction usage\n  _query: function (sql, params) {\n    var self = this;\n\n    var prepared = null;\n    var prepare = self._autoPrepare && !_.isEmpty(params);\n    if (prepare) {\n      prepared = self._prepareWithCache(sql);\n    }\n\n    if (DEBUG_SQL) {\n      var t1 = Date.now();\n    }\n\n    var future = new Future();\n\n    //Console.debug(\"Executing SQL \", sql, params);\n\n    var callback = function (err, rows) {\n      if (err) {\n        future['throw'](err);\n      } else {\n        future['return'](rows);\n      }\n    };\n\n    if (prepared) {\n      prepared.all(params, callback);\n    } else {\n      self._db.all(sql, params, callback);\n    }\n\n    var ret = future.wait();\n\n    if (DEBUG_SQL) {\n      var t2 = Date.now();\n      if ((t2 - t1) > 10) {\n        // XXX: Hack around not having log levels\n        Console.info(\"SQL statement \", sql, \" took \", (t2 - t1));\n      }\n    }\n\n    return ret;\n  },\n\n  // Runs a query synchronously, returning no rows\n  // Hidden to enforce transaction usage\n  _execute: function (sql, params) {\n    var self = this;\n\n    var prepared = null;\n    // We don't prepare non-parametrized statements, because (a) there's not\n    // that much of a win from doing so, since we don't tend to run them in bulk\n    // and (b) doing so can trigger\n    // https://github.com/mapbox/node-sqlite3/pull/355 .  (We can avoid that bug\n    // by being careful to pass in an empty array or no argument for params to\n    // prepared.run instead of undefined, but we can also just avoid the issue\n    // entirely.)\n    var prepare = self._autoPrepare && !_.isEmpty(params);\n    if (prepare) {\n      prepared = self._prepareWithCache(sql);\n    }\n\n    if (DEBUG_SQL) {\n      var t1 = Date.now();\n    }\n\n    var future = new Future();\n\n    //Console.debug(\"Executing SQL \", sql, params);\n\n    var callback = function (err) {\n      if (err) {\n        future['throw'](err);\n      } else {\n        // Yes, lastID & changes are on this(!)\n        future['return']({ lastID: this.lastID, changes: this.changes });\n      }\n    };\n\n    if (prepared) {\n      prepared.run(params, callback);\n    } else {\n      self._db.run(sql, params, callback);\n    }\n\n    var ret = future.wait();\n\n    if (DEBUG_SQL) {\n      var t2 = Date.now();\n      if ((t2 - t1) > 10) {\n        Console.info(\"SQL statement \", sql, \" took \", (t2 - t1));\n      }\n    }\n\n    return ret;\n  },\n\n  // Prepares the statement, caching the result\n  _prepareWithCache: function (sql) {\n    var self = this;\n\n    var prepared = self._prepared[sql];\n    if (!prepared) {\n      //Console.debug(\"Preparing statement: \", sql);\n      var future = new Future();\n      prepared = self._db.prepare(sql, function (err) {\n        if (err) {\n          future['throw'](err);\n        } else {\n          future['return']();\n        }\n      });\n      future.wait();\n      self._prepared[sql] = prepared;\n    }\n    return prepared;\n  },\n\n\n  // Close any cached prepared statements\n  _closePreparedStatements: function () {\n    var self = this;\n\n    var prepared = self._prepared;\n    self._prepared = {};\n\n    _.each(prepared, function (statement) {\n      var future = new Future();\n      statement.finalize(function (err) {\n        // We return, not throw it, because we don't want to throw\n        future['return'](err);\n      });\n      var err = future.wait();\n      if (err) {\n        Console.warn(\"Error finalizing statement \", err);\n      }\n    });\n  }\n\n});\n\n\nvar Table = function (name, jsonFields, options) {\n  var self = this;\n  options = options || {};\n\n  self.name = name;\n  self.jsonFields = jsonFields;\n  self.noContentColumn = options.noContentColumn;\n\n  self._buildStatements();\n};\n\n_.extend(Table.prototype, {\n  _buildStatements: function () {\n    var self = this;\n\n    var queryParams = self._generateQuestionMarks(\n      self.jsonFields.length + (self.noContentColumn ? 0 : 1));\n    self._selectQuery = \"SELECT * FROM \" + self.name + \" WHERE _id=?\";\n    self._insertQuery = \"INSERT INTO \" + self.name + \" VALUES \" + queryParams;\n    self._deleteQuery = \"DELETE FROM \" + self.name + \" WHERE _id=?\";\n  },\n\n  // Generate a string of the form (?, ?) where the n is the number of question\n  // mark.\n  _generateQuestionMarks: function (n) {\n    return \"(\" + _.times(n, function () { return \"?\" }).join(\",\") + \")\";\n  },\n\n  find: function (txn, id) {\n    var self = this;\n    var rows = txn.query(self._selectQuery, [ id ]);\n    if (rows.length !== 0) {\n      if (rows.length !== 1) {\n        throw new Error(\"Corrupt database (PK violation)\");\n      }\n      return rows[0];\n    }\n    return undefined;\n  },\n\n  upsert: function (txn, objects) {\n    var self = this;\n\n    // XXX: Use sqlite upsert\n    // XXX: Speculative insert\n    // XXX: Fix transaction logic so we always roll back\n    _.each(objects, function (o) {\n      var id = o._id;\n      var rows = txn.query(self._selectQuery, [ id ]);\n      if (rows.length !== 0) {\n        var deleteResults = txn.execute(self._deleteQuery, [ id ]);\n        if (deleteResults.changes !== 1) {\n          throw new Error(\"Unable to delete row: \" + id);\n        }\n      }\n      var row = [];\n      _.each(self.jsonFields, function (jsonField) {\n        row.push(o[jsonField]);\n      });\n      if (! self.noContentColumn) {\n        row.push(JSON.stringify(o));\n      }\n      txn.execute(self._insertQuery, row);\n    });\n  },\n\n  createTable: function (txn) {\n    var self = this;\n\n    var sql = 'CREATE TABLE IF NOT EXISTS ' + self.name + '(';\n    for (var i = 0; i < self.jsonFields.length; i++) {\n      var jsonField = self.jsonFields[i];\n      var sqlColumn = jsonField;\n      if (i != 0) sql += \", \";\n      sql += sqlColumn + \" STRING\";\n      if (sqlColumn === '_id') {\n        sql += \" PRIMARY KEY\";\n      }\n    }\n    if (! self.noContentColumn) {\n      sql += \", content STRING\";\n    }\n    sql += \")\";\n    txn.execute(sql);\n\n    //sql = \"CREATE INDEX IF NOT EXISTS idx_\" + self.name + \"_id ON \" + self.name + \"(_id)\";\n    //txn.execute(sql);\n  }\n});\n\n\n// A RemoteCatalog is a local cache of the content of troposphere.\n// A default instance of this catalog is registered by the layered catalog and is available\n// under the variable \"official\" from the catalog.js\n//\n// The remote catalog is backed by a db to make things easier on the memory and for faster queries\nvar RemoteCatalog = function () {\n  var self = this;\n\n  // Set this to true if we are not going to connect to the remote package\n  // server, and will only use the cached data for our package information\n  // This means that the catalog might be out of date on the latest developments.\n  self.offline = null;\n\n  self.db = null;\n};\n\n_.extend(RemoteCatalog.prototype, {\n  toString: function () {\n    var self = this;\n    return \"RemoteCatalog\";\n  },\n\n  // Used for special cases that want to ensure that all connections to the DB\n  // are closed (eg to ensure that all writes have been flushed from the '-wal'\n  // file to the main DB file). Most methods on this class will stop working\n  // after you call this method. Note that this yields.\n  closePermanently: function () {\n    var self = this;\n    self.db.closePermanently();\n    self.db = null;\n  },\n\n  getVersion: function (name, version) {\n    var result = this._contentQuery(\n      \"SELECT content FROM versions WHERE packageName=? AND version=?\",\n      [name, version]);\n    if(!result || result.length === 0) {\n      return null;\n    }\n    return result[0];\n  },\n\n  // As getVersion, but returns info on the latest version of the\n  // package, or null if the package doesn't exist or has no versions.\n  getLatestVersion: function (name) {\n    var self = this;\n\n    var versions = self.getSortedVersions(name);\n    return self.getVersion(name, _.last(versions));\n  },\n\n  getSortedVersions: function (name) {\n    var self = this;\n    var match = this._columnsQuery(\n      \"SELECT version FROM versions WHERE packageName=?\", name);\n    if (match === null)\n      return [];\n    return _.pluck(match, 'version').sort(VersionParser.compare);\n  },\n\n  // Just getVersion mapped over getSortedVersions, but only makes one round\n  // trip to sqlite.\n  getSortedVersionRecords: function (name) {\n    var self = this;\n    var versionRecords = this._contentQuery(\n      \"SELECT content FROM versions WHERE packageName=?\", [name]);\n    if (! versionRecords)\n      return [];\n    versionRecords.sort(function (a, b) {\n      return VersionParser.compare(a.version, b.version);\n    });\n    return versionRecords;\n  },\n\n  getLatestMainlineVersion: function (name) {\n    var self = this;\n    var versions = self.getSortedVersions(name);\n    versions.reverse();\n    var latest = _.find(versions, function (version) {\n      return !/-/.test(version);\n    });\n    if (!latest)\n      return null;\n    return self.getVersion(name, latest);\n  },\n\n  getPackage: function (name, options) {\n    var result = this._contentQuery(\n      \"SELECT content FROM packages WHERE name=?\", name);\n    if (!result || result.length === 0)\n      return null;\n    if (result.length !== 1) {\n      throw new Error(\"Found multiple packages matching name: \" + name);\n    }\n    return result[0];\n  },\n\n  getAllBuilds: function (name, version) {\n    var result = this._contentQuery(\n      \"SELECT content FROM builds WHERE builds.versionId = \" +\n        \"(SELECT _id FROM versions WHERE versions.packageName=? AND \" +\n        \"versions.version=?)\",\n      [name, version]);\n    if (!result || result.length === 0)\n      return null;\n    return result;\n  },\n\n  // If this package has any builds at this version, return an array of builds\n  // which cover all of the required arches, or null if it is impossible to\n  // cover them all (or if the version does not exist).\n  // Note that this method is specific to RemoteCatalog.\n  getBuildsForArches: function (name, version, arches) {\n    var self = this;\n\n    var solution = null;\n    var allBuilds = self.getAllBuilds(name, version) || [];\n\n    utils.generateSubsetsOfIncreasingSize(allBuilds, function (buildSubset) {\n      // This build subset works if for all the arches we need, at least one\n      // build in the subset satisfies it. It is guaranteed to be minimal,\n      // because we look at subsets in increasing order of size.\n      var satisfied = _.all(arches, function (neededArch) {\n        return _.any(buildSubset, function (build) {\n          var buildArches = build.buildArchitectures.split('+');\n          return !!archinfo.mostSpecificMatch(neededArch, buildArches);\n        });\n      });\n      if (satisfied) {\n        solution = buildSubset;\n        return true;  // stop the iteration\n      }\n    });\n    return solution;  // might be null!\n  },\n\n  // Returns general (non-version-specific) information about a\n  // release track, or null if there is no such release track.\n  getReleaseTrack: function (name) {\n    var self = this;\n    var result = self._contentQuery(\n      \"SELECT content FROM releaseTracks WHERE name=?\", name);\n    if (!result || result.length === 0)\n      return null;\n    return result[0];\n  },\n\n  getReleaseVersion: function (track, version) {\n    var self = this;\n    var result = self._contentQuery(\n      \"SELECT content FROM releaseVersions WHERE track=? AND version=?\",\n      [track, version]);\n    if (!result || result.length === 0)\n      return null;\n    return result[0];\n  },\n\n  // Used by make-bootstrap-tarballs. Only should be used on catalogs that are\n  // specially constructed for bootstrap tarballs.\n  forceRecommendRelease: function (track, version) {\n    var self = this;\n    var releaseVersionData = self.getReleaseVersion(track, version);\n    if (!releaseVersionData) {\n      throw Error(\"Can't force-recommend unknown release \" + track + \"@\"\n                  + version);\n    }\n    releaseVersionData.recommended = true;\n    self._insertReleaseVersions([releaseVersionData]);\n  },\n\n  getAllReleaseTracks: function () {\n    return _.pluck(this._columnsQuery(\"SELECT name FROM releaseTracks\"),\n                   'name');\n  },\n\n  getAllPackageNames: function () {\n    return _.pluck(this._columnsQuery(\"SELECT name FROM packages\"), 'name');\n  },\n\n  initialize: function (options) {\n    var self = this;\n\n    options = options || {};\n    // We should to figure out if we are intending to connect to the package server.\n    self.offline = options.offline ? options.offline : false;\n\n    var dbFile = options.packageStorage || config.getPackageStorage();\n    self.db = new Db(dbFile);\n\n    self.tableVersions = new Table('versions', ['packageName', 'version', '_id']);\n    self.tableBuilds = new Table('builds', ['versionId', '_id']);\n    self.tableReleaseTracks = new Table('releaseTracks', ['name', '_id']);\n    self.tableReleaseVersions = new Table('releaseVersions', ['track', 'version', '_id']);\n    self.tablePackages = new Table('packages', ['name', '_id']);\n    self.tableSyncToken = new Table('syncToken', ['_id']);\n    self.tableMetadata = new Table('metadata', ['_id']);\n    self.tableBannersShown = new Table(\n      'bannersShown', ['_id', 'lastShown'], { noContentColumn: true });\n\n    self.allTables = [\n      self.tableVersions,\n      self.tableBuilds,\n      self.tableReleaseTracks,\n      self.tableReleaseVersions,\n      self.tablePackages,\n      self.tableSyncToken,\n      self.tableMetadata,\n      self.tableBannersShown\n    ];\n    return self.db.runInTransaction(function(txn) {\n      _.each(self.allTables, function (table) {\n        table.createTable(txn);\n      });\n\n      // Extra indexes for the most expensive queries\n      // These are non-unique indexes\n      // XXX We used to have a versionsNamesIdx here on versions(packageName);\n      //     we no longer create it but we don't waste time dropping it either.\n      txn.execute(\"CREATE INDEX IF NOT EXISTS versionsIdx ON \" +\n                  \"versions(packageName, version)\");\n      txn.execute(\"CREATE INDEX IF NOT EXISTS buildsVersionsIdx ON \" +\n                  \"builds(versionId)\");\n      txn.execute(\"CREATE INDEX IF NOT EXISTS packagesIdx ON \" +\n                  \"packages(name)\");\n      txn.execute(\"CREATE INDEX IF NOT EXISTS releaseTracksIdx ON \" +\n                  \"releaseTracks(name)\");\n      txn.execute(\"CREATE INDEX IF NOT EXISTS releaseVersionsIdx ON \" +\n                  \"releaseVersions(track, version)\");\n    });\n  },\n\n  // This function empties the DB. This is called from the package-client.\n  reset: function () {\n    var self = this;\n    return self.db.runInTransaction(function (txn) {\n      _.each(self.allTables, function (table) {\n        txn.execute(\"DELETE FROM \" + table.name);\n      });\n    });\n  },\n\n  refresh: function (options) {\n    var self = this;\n    options = options || {};\n\n    Console.debug(\"In remote catalog refresh\");\n\n    if (process.env.METEOR_TEST_FAIL_RELEASE_DOWNLOAD === 'offline') {\n      var e = new Error;\n      e.errorType = 'DDP.ConnectionError';\n      throw e;\n    }\n\n    if (self.offline)\n      return false;\n\n    if (options.maxAge) {\n      var lastSync = self.getMetadata(METADATA_LAST_SYNC);\n      Console.debug(\"lastSync = \", lastSync);\n      if (lastSync && lastSync.timestamp) {\n        if ((Date.now() - lastSync.timestamp) < options.maxAge) {\n          Console.debug(\"Package catalog is sufficiently up-to-date; not updating\\n\");\n          return false;\n        }\n      }\n    }\n\n    var updateResult = {};\n    // XXX This buildmessage.enterJob only exists for showing progress.\n    buildmessage.enterJob({ title: 'updating package catalog' }, function () {\n      updateResult = packageClient.updateServerPackageData(self);\n    });\n\n    if (updateResult.resetData) {\n      tropohouse.default.wipeAllPackages();\n    }\n\n    return true;\n  },\n\n  // Given a release track, returns all recommended versions for this track,\n  // sorted by their orderKey. Returns the empty array if the release track does\n  // not exist or does not have any recommended versions.\n  getSortedRecommendedReleaseVersions: function (track, laterThanOrderKey) {\n    var self = this;\n    var versions =\n          self.getSortedRecommendedReleaseRecords(track, laterThanOrderKey);\n    return _.pluck(versions, \"version\");\n  },\n\n  // Given a release track, returns all recommended version *records* for this\n  // track, sorted by their orderKey. Returns the empty array if the release\n  // track does not exist or does not have any recommended versions.\n  getSortedRecommendedReleaseRecords: function (track, laterThanOrderKey) {\n    var self = this;\n    // XXX releaseVersions content objects are kinda big; if we put\n    // 'recommended' and 'orderKey' in their own columns this could be faster\n    var result = self._contentQuery(\n      \"SELECT content FROM releaseVersions WHERE track=?\", track);\n\n    var recommended = _.filter(result, function (v) {\n      if (!v.recommended)\n        return false;\n      return !laterThanOrderKey || v.orderKey > laterThanOrderKey;\n    });\n\n    var recSort = _.sortBy(recommended, function (rec) {\n      return rec.orderKey;\n    });\n    recSort.reverse();\n    return recSort;\n  },\n\n  // Given a release track, returns all version records for this track.\n  getReleaseVersionRecords: function (track) {\n    var self = this;\n    var result = self._contentQuery(\n      \"SELECT content FROM releaseVersions WHERE track=?\", track);\n    return result;\n  },\n\n  // For a given track, returns the total number of release versions on that\n  // track.\n  getNumReleaseVersions: function (track) {\n    var self = this;\n    var result = self._columnsQuery(\n      \"SELECT count(*) FROM releaseVersions WHERE track=?\", track);\n    return result[0][\"count(*)\"];\n  },\n\n  // Returns the default release version on the DEFAULT_TRACK, or for a\n  // given release track.\n  getDefaultReleaseVersion: function (track) {\n    var self = this;\n    var versionRecord = self.getDefaultReleaseVersionRecord(track);\n    if (! versionRecord)\n      throw new Error(\"Can't get default release version for track \" + track);\n    return _.pick(versionRecord, [\"track\", \"version\" ]);\n  },\n\n  // Returns the default release version record for the DEFAULT_TRACK, or for a\n  // given release track.\n  getDefaultReleaseVersionRecord: function (track) {\n    var self = this;\n\n    if (!track)\n      track = exports.DEFAULT_TRACK;\n\n    var versions = self.getSortedRecommendedReleaseRecords(track);\n    if (!versions.length)\n      return null;\n    return  versions[0];\n  },\n\n  getBuildWithPreciseBuildArchitectures: function (versionRecord, buildArchitectures) {\n    var self = this;\n    var matchingBuilds = this._contentQuery(\n      \"SELECT content FROM builds WHERE versionId=?\", versionRecord._id);\n    return _.findWhere(matchingBuilds, { buildArchitectures: buildArchitectures });\n  },\n\n  // Executes a query, returning an array of each content column parsed as JSON\n  _contentQuery: function (query, params) {\n    var self = this;\n    var rows = self._columnsQuery(query, params);\n    return _.map(rows, function(entity) {\n      return JSON.parse(entity.content);\n    });\n  },\n\n  // Executes a query, returning an array of maps from column name to data.\n  // No JSON parsing is performed.\n  _columnsQuery: function (query, params) {\n    var self = this;\n    var rows = self.db.runInTransaction(function (txn) {\n      return txn.query(query, params);\n    });\n    return rows;\n  },\n\n  _insertReleaseVersions: function(releaseVersions) {\n    var self = this;\n    return self.db.runInTransaction(function (txn) {\n      self.tableReleaseVersions.upsert(txn, releaseVersions);\n    });\n  },\n\n  //Given data from troposphere, add it into the local store\n  insertData: function(serverData, syncComplete) {\n    var self = this;\n    return self.db.runInTransaction(function (txn) {\n      self.tablePackages.upsert(txn, serverData.collections.packages);\n      self.tableBuilds.upsert(txn, serverData.collections.builds);\n      self.tableVersions.upsert(txn, serverData.collections.versions);\n      self.tableReleaseTracks.upsert(txn, serverData.collections.releaseTracks);\n      self.tableReleaseVersions.upsert(txn, serverData.collections.releaseVersions);\n\n      var syncToken = serverData.syncToken;\n      Console.debug(\"Adding syncToken: \", JSON.stringify(syncToken));\n      syncToken._id = SYNCTOKEN_ID; //Add fake _id so it fits the pattern\n      self.tableSyncToken.upsert(txn, [syncToken]);\n\n      if (syncComplete) {\n        var lastSync = {timestamp: Date.now()};\n        self._setMetadata(txn, METADATA_LAST_SYNC, lastSync);\n      }\n    });\n  },\n\n  getSyncToken: function() {\n    var self = this;\n    var result = self._contentQuery(\"SELECT content FROM syncToken WHERE _id=?\",\n                                    [ SYNCTOKEN_ID ]);\n    if (!result || result.length === 0) {\n      Console.debug(\"No sync token found\");\n      return null;\n    }\n    if (result.length !== 1) {\n      throw new Error(\"Unexpected number of sync tokens found\");\n    }\n    delete result[0]._id;\n    Console.debug(\"Returning sync token: \" + JSON.stringify(result[0]));\n    return result[0];\n  },\n\n  getMetadata: function(key) {\n    var self = this;\n    var row = self.db.runInTransaction(function (txn) {\n      return self.tableMetadata.find(txn, key);\n    });\n    if (row) {\n      return JSON.parse(row['content']);\n    }\n    return undefined;\n  },\n\n  setMetadata: function(key, value) {\n    var self = this;\n    self.db.runInTransaction(function (txn) {\n      self._setMetadata(txn, key, value);\n    });\n  },\n\n  _setMetadata: function(txn, key, value) {\n    var self = this;\n    value._id = key;\n    self.tableMetadata.upsert(txn, [value]);\n  },\n\n  shouldShowBanner: function (releaseName, bannerDate) {\n    var self = this;\n    var row = self.db.runInTransaction(function (txn) {\n      return self.tableBannersShown.find(txn, releaseName);\n    });\n    // We've never printed a banner for this release.\n    if (! row)\n      return true;\n    try {\n      var lastShown = new Date(JSON.parse(row.lastShown));\n      return lastShown < bannerDate;\n    } catch (e) {\n      // Probably an error in JSON.parse or something. Just show the banner.\n      return true;\n    }\n  },\n\n  setBannerShownDate: function (releaseName, bannerShownDate) {\n    var self = this;\n    self.db.runInTransaction(function (txn) {\n      self.tableBannersShown.upsert(txn, [{\n        _id: releaseName,\n        // XXX For now, there's no way to tell this file to make a non-string\n        // column in a sqlite table, but this should probably change to a\n        // 'timestamp with time zone' or whatever.\n        lastShown: JSON.stringify(bannerShownDate)\n      }]);\n    });\n  }\n});\n\nexports.RemoteCatalog = RemoteCatalog;\n\n// We put this constant here because we don't have any better place that would otherwise cause a cycle\nexports.DEFAULT_TRACK = 'METEOR';\n\n// The catalog as provided by troposhere (aka atomospherejs.com)\nexports.official = new RemoteCatalog();\n"]}