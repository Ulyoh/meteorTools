{"version":3,"sources":["/tools/packaging/catalog/catalog-utils.js"],"names":[],"mappings":"AAAA,OAAO,CAAC,gBAAgB,GAAG,UAAU,WAAW,EAAE;AAChD,MAAI,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACnC,MAAI,KAAK,EAAE,OAAO,CAAC;AACnB,MAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACtB,QAAI,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACtC,SAAK,GAAG,OAAO,CAAC,aAAa,CAAC;AAC9B,WAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;GACpB,MAAM;AACL,SAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;;AAGjB,WAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACpC;AACD,SAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;CACzB,CAAC;;;AAGF,OAAO,CAAC,cAAc,GAAG,UAAU,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;AAC1D,MAAI,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACtC,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,MAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;;AAE/C,MAAI,KAAK,KAAK,OAAO,CAAC,aAAa,EAAE;AACnC,WAAO,MAAM,GAAG,OAAO,CAAC;GACzB,MAAM;AACL,WAAO,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC;GAC9B;CACF,CAAC;;;;AAIF,OAAO,CAAC,sBAAsB,GAAG,YAAY;AAC3C,MAAI,OAAO,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC,OAAO,CAAC;AAC1D,MAAI,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACtC,MAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE;AACrD,WAAO,CAAC,IAAI,CAAC,4CAA4C,GACvD,+CAA+C,CAAC,CAAC;GACpD;CACF,CAAC","file":"tools/packaging/catalog/catalog-utils.js.map","sourcesContent":["exports.splitReleaseName = function (releaseName) {\n  var parts = releaseName.split('@');\n  var track, version;\n  if (parts.length === 1) {\n    var catalog = require('./catalog.js');\n    track = catalog.DEFAULT_TRACK;\n    version = parts[0];\n  } else {\n    track = parts[0];\n    // Do we forbid '@' sign in release versions? I sure hope so, but let's\n    // be careful.\n    version = parts.slice(1).join(\"@\");\n  }\n  return [track, version];\n};\n\n// Options: noPrefix: do not display 'Meteor ' in front of the version number.\nexports.displayRelease = function (track, version, options) {\n  var catalog = require('./catalog.js');\n  options = options || {};\n  var prefix = options.noPrefix ? \"\" : \"Meteor \";\n\n  if (track === catalog.DEFAULT_TRACK) {\n    return prefix + version;\n  } else {\n    return track + '@' + version;\n  }\n};\n\n// If we have failed to update the catalog, informs the user and advises them to\n// go online for up to date inforation.\nexports.explainIfRefreshFailed = function () {\n  var Console = require('../../console/console.js').Console;\n  var catalog = require('./catalog.js');\n  if (catalog.official.offline || catalog.refreshFailed) {\n    Console.info(\"Your package catalog may be out of date.\\n\" +\n      \"Please connect to the internet and try again.\");\n  }\n};\n"]}