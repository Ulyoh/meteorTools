{"version":3,"sources":["/tools/packaging/package-map.js"],"names":[],"mappings":"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","file":"tools/packaging/package-map.js.map","sourcesContent":["var _ = require('underscore');\nvar packageVersionParser = require('./package-version-parser.js');\nvar utils = require('../utils/utils.js');\nimport { isIsobuildFeaturePackage } from '../isobuild/compiler.js';\n\n// PackageMap: Represents the choices of package versions being used for a\n// project. It knows all the packages that are used (direct and indirect\n// dependencies), their versions, whether they are local or versioned packages,\n// and the PackageSource object for any local packages.  Prefer using this\n// function over arbitrary JSON representations when possible.  (A related class\n// is projectContextModule.PackageMapFile which specifically represents the\n// .meteor/packages file on disk.)\n//\n// It has a corresponding JSON format (used, eg, inside buildinfo files).\n//\n// If you specify the localCatalog option to the constructor, any package in\n// that localCatalog will be considered to be local, and all others will be\n// considered to be prebuilt versioned packages from troposphere.  If you do not\n// specify the localCatalog option, all packages will be considered to prebuilt\n// versioned packages.\nexports.PackageMap = function (versions, options) {\n  var self = this;\n  options = options || {};\n  self._map = {};\n  self._localCatalog = options.localCatalog || null;\n\n  _.each(versions, function (version, packageName) {\n    // If the constraint solver told us that we needed an isobuild feature,\n    // that's fine, but it's not a real package.\n    if (isIsobuildFeaturePackage(packageName)) {\n      return;\n    }\n\n    var packageSource = self._localCatalog &&\n          self._localCatalog.getPackageSource(packageName);\n    if (packageSource) {\n      self._map[packageName] =\n        { kind: 'local', version: version, packageSource: packageSource };\n    } else {\n      self._map[packageName] =\n        { kind: 'versioned', version: version, packageSource: null };\n    }\n  });\n};\n\n_.extend(exports.PackageMap.prototype, {\n  eachPackage: function (iterator) {\n    var self = this;\n    _.each(self._map, function (info, packageName) {\n      // For reasons that are super unclear, if this `_.clone` is inlined into\n      // the `iterator` call, the value produced can mysteriously turn into\n      // undefined on the way into `iterator`. Presumably some sort of memory\n      // corruption, maybe Fiber-related?  Trying to minimize has been an\n      // exercise in nondeterminism. But this does seem to be a sure-fire way to\n      // fix it, for now. Who knows why, and who knows when it will recur again.\n      var infoClone = _.clone(info);\n      iterator(packageName, infoClone);\n    });\n  },\n  getInfo: function (packageName) {\n    var self = this;\n    if (_.has(self._map, packageName))\n      return self._map[packageName];\n    return null;\n  },\n  makeSubsetMap: function (packageNames) {\n    var self = this;\n    var subsetVersions = {};\n    _.each(packageNames, function (packageName) {\n      var info = self.getInfo(packageName);\n      if (!info)\n        throw Error(\"not a subset: \" + packageName);\n      subsetVersions[packageName] = info.version;\n    });\n    return new exports.PackageMap(subsetVersions, {\n      localCatalog: self._localCatalog\n    });\n  },\n\n  toJSON: function () {\n    var self = this;\n    var ret = {};\n    _.each(self._map, function (info, packageName) {\n      if (info.kind === 'local') {\n        ret[packageName] = {\n          kind: 'local',\n          sourceRoot: info.packageSource.sourceRoot\n        };\n      } else {\n        ret[packageName] = {\n          kind: 'versioned',\n          version: info.version\n        };\n      }\n    });\n    return ret;\n  },\n  // Returns a map from package name to version. In most cases, this is a far\n  // worse representation than PackageMap... avoid using it!\n  toVersionMap: function () {\n    var self = this;\n    var ret = {};\n    _.each(self._map, function (info, packageName) {\n      ret[packageName] = info.version;\n    });\n    return ret;\n  },\n\n  // Given some JSON as returned from toJSON, returns true if every package in\n  // the JSON has the same mapping as in this map.\n  isSupersetOfJSON: function (mapJSON) {\n    var self = this;\n    return _.all(mapJSON, function (jsonInfo, packageName) {\n      var thisInfo = self.getInfo(packageName);\n      if (! thisInfo)\n        return false;\n      if (jsonInfo.kind !== thisInfo.kind)\n        return false;\n      if (thisInfo.kind === 'local') {\n        return thisInfo.packageSource.sourceRoot === jsonInfo.sourceRoot;\n      } else {\n        return thisInfo.version === jsonInfo.version;\n      }\n    });\n  }\n});\n\n// Static method: returns a PackageMap that represents a (catalog)\n// ReleaseVersion entry (including its tool).  Note that this function assumes\n// that all packages will be prebuilt versioned, not local. This is mostly used\n// to create PackageMaps to pass to tropohouse.downloadPackagesMissingFromMap;\n// it should not be used as part of a ProjectContext because it does not allow\n// you to override release packages with local packages.\nexports.PackageMap.fromReleaseVersion = function (releaseVersion) {\n  var toolPackageVersion = releaseVersion.tool &&\n        utils.parsePackageAndVersion(releaseVersion.tool);\n  if (!toolPackageVersion)\n    throw new Error(\"bad tool in release: \" + releaseVersion.tool);\n  var toolPackage = toolPackageVersion.package;\n  var toolVersion = toolPackageVersion.version;\n\n  var versionMap = _.clone(releaseVersion.packages || {});\n  versionMap[toolPackage] = toolVersion;\n\n  // As described in this function's description, all packages in this map are\n  // versioned, so we do not specify a localCatalog.\n  return new exports.PackageMap(versionMap);\n};\n\n\n\n// PackageMapDelta: represents the change in a PackageMap between two constraint\n// solver runs.\nexports.PackageMapDelta = function (options) {\n  var self = this;\n  self._changedPackages = {};\n\n  options.packageMap.eachPackage(function (packageName, info) {\n    var oldVersion = _.has(options.cachedVersions, packageName)\n          ? options.cachedVersions[packageName] : null;\n    self._storeAddOrChange(\n      packageName, info, oldVersion, options.anticipatedPrereleases,\n      options.neededToUseUnanticipatedPrereleases);\n  });\n\n  _.each(options.cachedVersions, function (oldVersion, packageName) {\n    if (! options.packageMap.getInfo(packageName)) {\n      self._storeRemove(packageName, oldVersion);\n    }\n  });\n};\n\n_.extend(exports.PackageMapDelta.prototype, {\n  _storeAddOrChange: function (packageName, newInfo, oldVersion,\n                               anticipatedPrereleases,\n                               neededToUseUnanticipatedPrereleases) {\n    var self = this;\n\n    // Store nothing if nothing has changed.\n    if (newInfo.version === oldVersion)\n      return;\n\n    var backwardsIncompatible =\n          oldVersion !== null &&\n          (packageVersionParser.majorVersion(newInfo.version) !==\n           packageVersionParser.majorVersion(oldVersion));\n\n    var isPrerelease = /-/.test(newInfo.version);\n    var isAnticipatedPrerelease = _.has(anticipatedPrereleases, packageName) &&\n          _.has(anticipatedPrereleases[packageName], newInfo.version);\n    self._changedPackages[packageName] = {\n      oldVersion: oldVersion,\n      newVersion: newInfo.version,\n      isBackwardsIncompatible: backwardsIncompatible,\n      isUnanticipatedPrerelease: (neededToUseUnanticipatedPrereleases &&\n                                  isPrerelease && !isAnticipatedPrerelease)\n    };\n  },\n\n  _storeRemove: function (packageName, oldVersion) {\n    var self = this;\n    self._changedPackages[packageName] = {\n      oldVersion: oldVersion,\n      newVersion: null\n    };\n  },\n\n  eachChangedPackage: function (iterator) {\n    var self = this;\n    _.each(self._changedPackages, function (info, packageName) {\n      iterator(packageName, _.clone(info));\n    });\n  },\n\n  hasChanges: function () {\n    var self = this;\n    return ! _.isEmpty(self._changedPackages);\n  },\n\n  displayOnConsole: function (options) {\n    var self = this;\n    options = _.extend({\n      title: \"Changes to your project's package version selections:\"\n    }, options);\n\n    // Print nothing at all if nothing changed.\n    if (! self.hasChanges())\n      return;\n\n    var displayItems = [];\n    var anyBackwardsIncompatible = false;\n    var anyUnanticipatedPrerelease = false;\n    self.eachChangedPackage(function (packageName, info) {\n      if (info.newVersion === null) {\n        displayItems.push({\n          name: packageName,\n          description: \"removed from your project\"\n        });\n        return;\n      }\n\n      var name = packageName;\n      if (info.isBackwardsIncompatible) {\n        name += '*';\n        anyBackwardsIncompatible = true;\n      }\n      if (info.isUnanticipatedPrerelease) {\n        name += '+';\n        anyUnanticipatedPrerelease = true;\n      }\n\n      var description;\n      if (info.oldVersion === null) {\n        description = \"added, version \" + info.newVersion;\n      } else if (packageVersionParser.lessThan(info.oldVersion,\n                                               info.newVersion)) {\n        description =\n          \"upgraded from \" + info.oldVersion + \" to \" + info.newVersion;\n      } else {\n        description =\n          \"downgraded from \" + info.oldVersion + \" to \" + info.newVersion;\n      }\n      displayItems.push({ name: name, description: description });\n    });\n\n    var Console = require('../console/console.js').Console;\n\n    Console.info();\n    Console.info(options.title);\n    Console.info();\n    utils.printPackageList(displayItems);\n    if (anyBackwardsIncompatible) {\n      Console.info(\"\\n\" +\n\"* These packages have been updated to new versions that are not backwards\\n\" +\n\"  compatible.\");\n    }\n    if (anyUnanticipatedPrerelease) {\n      Console.info(\"\\n\" +\n\"+ In order to resolve constraints, we had to use experimental versions of these\\n\" +\n\"  packages.\");\n    }\n  }\n});\n"]}