{"version":3,"sources":["/tools/tool-testing/test-utils.js"],"names":[],"mappings":"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","file":"tools/tool-testing/test-utils.js.map","sourcesContent":["var isopackets = require('../tool-env/isopackets.js');\nvar config = require('../meteor-services/config.js');\nvar utils = require('../utils/utils.js');\nvar auth = require('../meteor-services/auth.js');\nvar selftest = require('./selftest.js');\nvar httpHelpers = require('../utils/http-helpers.js');\nvar _ = require('underscore');\n\nvar randomString = function (charsCount) {\n  var chars = 'abcdefghijklmnopqrstuvwxyz';\n  var str = '';\n  for (var i = 0; i < charsCount; i++) {\n    str = str + chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return str;\n};\n\nexports.accountsCommandTimeoutSecs = 15 * utils.timeoutScaleFactor;\n\nexports.randomString = randomString;\n\nvar randomAppName = function () {\n  return 'selftest-app-' + randomString(10);\n};\n\nexports.randomAppName = randomAppName;\n\nexports.randomUserEmail = function () {\n  return 'selftest-user-' + randomString(15) + '@guerrillamail.com';\n};\n\n// Creates an app and deploys it. Assumes the sandbox is already logged\n// in. Returns the name of the deployed app. Options:\n//  - settingsFile: a path to a settings file to deploy with\n//  - appName: app name to use; will be generated randomly if not\n//    provided\n//  - templateApp: the name of the template app to use. defaults to 'empty'\nexports.createAndDeployApp = function (sandbox, options) {\n  options = options || {};\n  var name = options.appName || randomAppName();\n  sandbox.createApp(name, options.templateApp || 'empty');\n  sandbox.cd(name);\n\n  name = config.getFullAppName(name);\n  \n  var runArgs = ['deploy', name];\n  if (options.settingsFile) {\n    runArgs.push('--settings');\n    runArgs.push(options.settingsFile);\n  }\n  var run = sandbox.run.apply(sandbox, runArgs);\n  run.waitSecs(90);\n  run.match('Now serving at http://' + name);\n  run.waitSecs(10);\n  run.expectExit(0);\n  return name;\n};\n\nexports.cleanUpApp = function (sandbox, name) {\n  if (name.indexOf(\".\") === -1) {\n    name = name + \".\" + config.getDeployHostname();\n  }\n\n  var run = sandbox.run('deploy', '-D', name);\n  run.waitSecs(180);\n  run.match('Deleted');\n  run.expectExit(0);\n  return name;\n};\n\nexports.login = function (s, username, password) {\n  var run = s.run('login');\n  run.waitSecs(15);\n  run.matchErr('Username:');\n  run.write(username + '\\n');\n  run.matchErr('Password:');\n  run.write(password + '\\n');\n  run.waitSecs(15);\n  run.matchErr('Logged in as ' + username + \".\");\n  run.expectExit(0);\n};\n\nexports.logout = function (s) {\n  var run = s.run('logout');\n  run.waitSecs(15);\n  run.matchErr('Logged out');\n  run.expectExit(0);\n};\n\nexports.getUserId = function (s) {\n  var data = JSON.parse(s.readSessionFile());\n  return data.sessions[config.getUniverse()].userId;\n};\n\nvar registrationUrlRegexp =\n      /https:\\/\\/www\\.meteor\\.com\\/setPassword\\?([a-zA-Z0-9\\+\\/]+)/;\nexports.registrationUrlRegexp = registrationUrlRegexp;\n\n// In the sandbox `s`, create and deploy a new app with an unregistered\n// email address. Returns the registration token from the printed URL in\n// the deploy message.\nexports.deployWithNewEmail = function (s, email, appName) {\n  s.createApp('deployapp', 'empty');\n  s.cd('deployapp');\n\n  if (appName.indexOf(\".\") === -1) {\n    appName = appName + \".\" + config.getDeployHostname();\n  }\n\n  var run = s.run('deploy', appName);\n  run.waitSecs(exports.accountsCommandTimeoutSecs);\n  run.matchErr('Email:');\n  run.write(email + '\\n');\n  run.waitSecs(90);\n  // Check that we got a prompt to set a password on meteor.com.\n  run.matchErr('set a password');\n  var urlMatch = run.matchErr(registrationUrlRegexp);\n  if (! urlMatch || ! urlMatch.length || ! urlMatch[1]) {\n    throw new Error(\"Missing registration token\");\n  }\n  var token = urlMatch[1];\n\n  run.expectExit(0);\n\n  return token;\n};\n\nvar getLoadedPackages = function () {\n  return isopackets.load('ddp');\n};\n\nvar ddpConnect = function (url) {\n  var DDP = getLoadedPackages()['ddp-client'].DDP;\n  return DDP.connect(url);\n};\n\nexports.ddpConnect = ddpConnect;\n\n// Given a registration token created by doing a deferred registration\n// with `email`, makes a DDP connection to the accounts server and\n// finishes the registration process.\nexports.registerWithToken = function (token, username, password, email) {\n  // XXX It might make more sense to hard-code the DDP url to\n  // https://www.meteor.com, since that's who the sandboxes are talking\n  // to.\n  var accountsConn = ddpConnect(config.getAuthDDPUrl());\n  var registrationTokenInfo = accountsConn.call('registrationTokenInfo',\n                                                token);\n  var registrationCode = registrationTokenInfo.code;\n  accountsConn.call('register', {\n    username: username,\n    password: password,\n    emails: [email],\n    token: token,\n    code: registrationCode\n  });\n  accountsConn.close();\n};\n\nexports.randomOrgName = function () {\n  return \"selftestorg\" + exports.randomString(10);\n};\n\n// Logs in as the specified user and creates a randomly named\n// organization. Returns the organization name. Calls selftest.fail if\n// the organization can't be created.\nexports.createOrganization = function (username, password) {\n  var orgName = exports.randomOrgName();\n  auth.withAccountsConnection(function (conn) {\n    try {\n      conn.call(\"login\", {\n        meteorAccountsLoginInfo: { username: username, password: password },\n        clientInfo: {}\n      });\n    } catch (err) {\n      selftest.fail(\"Failed to log in to Meteor developer accounts\\n\" +\n                    \"with test user: \" + err);\n    }\n\n    try {\n      conn.call(\"createOrganization\", orgName);\n    } catch (err) {\n      selftest.fail(\"Failed to create organization: \" + err);\n    }\n  })();\n\n  return orgName;\n};\n\nexports.getMeteorRuntimeConfigFromHTML = function (html) {\n  var m = html.match(/__meteor_runtime_config__ = JSON.parse\\(decodeURIComponent\\(\"([^\"]+?)\"\\)\\)/);\n  if (! m) {\n    selftest.fail(\"Can't find __meteor_runtime_config__\");\n  }\n  return JSON.parse(decodeURIComponent(m[1]));\n};\n\n\n// Poll the given app looking for the correct settings. Throws an error\n// if the settings aren't found after a timeout.\nexports.checkForSettings = selftest.markStack(function (appName, settings, timeoutSecs) {\n  var timeoutDate = new Date(new Date().valueOf() + timeoutSecs * 1000);\n  while (true) {\n    if (new Date() >= timeoutDate) {\n      selftest.fail('Expected settings not found on app ' + appName);\n    }\n\n    var result = httpHelpers.request('http://' + appName);\n\n    // XXX This is brittle; the test will break if we start formatting the\n    // __meteor_runtime_config__ JS differently. Ideally we'd do something\n    // like point a phantom at the deployed app and actually evaluate\n    // Meteor.settings.\n    try {\n      var mrc = exports.getMeteorRuntimeConfigFromHTML(result.body);\n    } catch (e) {\n      // ignore\n      continue;\n    }\n\n    if (_.isEqual(mrc.PUBLIC_SETTINGS, settings['public'])) {\n      return;\n    }\n  }\n});\n"]}