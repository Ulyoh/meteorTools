{"version":3,"sources":["/tools/isobuild/isopack.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACxC,IAAI,QAAQ,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC/C,IAAI,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAC9B,IAAI,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACpC,IAAI,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;AACvD,IAAI,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACtC,IAAI,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACtC,IAAI,KAAK,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACtC,IAAI,KAAK,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACtC,IAAI,UAAU,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AACtD,IAAI,cAAc,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAC;AAC5D,IAAI,KAAK,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACzC,IAAI,iBAAiB,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACrD,IAAI,OAAO,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC,OAAO,CAAC;AACvD,IAAI,OAAO,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC,OAAO,CAAC;;AAExD,IAAI,aAAa,GAAG,UAAU,CAAC,EAAE;AAC/B,MAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EACjB,MAAM,IAAI,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;CACrC,CAAC;;;;;;;;;;;;;;;;AAgBF,IAAI,WAAW,GAAG,CAAC,CAAC;AACpB,IAAI,QAAQ,GAAG,UAAU,OAAO,EAAE,OAAO,EAAE;AACzC,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,MAAI,CAAC,GAAG,GAAG,OAAO,CAAC;;AAEnB,MAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AACzB,MAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;;AAEzB,MAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AACzB,MAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;;;;;;;AAOrC,MAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;;;;;;;AAOzD,MAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAC9D,WAAW,EAAG,AAAC,CAAC;;;;;AAKnB,MAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2B/C,MAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;;;;;AAKnC,MAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;CAChD,CAAC;;;;;;;;;;;;;;;;;;;AAmBF,IAAI,OAAO,GAAG,YAAY;AACxB,MAAI,IAAI,GAAG,IAAI,CAAC;;;AAGhB,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,MAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,MAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,MAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,MAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,MAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;;AAGtB,MAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;;;;;AAMpB,MAAI,CAAC,OAAO,GAAG,EAAE,CAAC;;AAElB,MAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;;;AAG9B,MAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;;;;;;;;;;;;;;;AAe3B,MAAI,CAAC,cAAc,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;;;;;;AAM3C,MAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;;;;;;AAMjC,MAAI,CAAC,gBAAgB,GAAG;AACtB,YAAQ,EAAE,IAAI;AACd,UAAM,EAAE,IAAI;AACZ,YAAQ,EAAE,IAAI;GACf,CAAC;;;;;AAKF,MAAI,CAAC,WAAW,GAAG,KAAK,CAAC;;;;AAIzB,MAAI,CAAC,WAAW,GAAG,EAAE,CAAC;;;;AAItB,MAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;;;;;AAKrC,MAAI,CAAC,cAAc,GAAG,IAAI,CAAC;;;;;AAK3B,MAAI,CAAC,eAAe,GAAG,IAAI,CAAC;CAC7B,CAAC;;AAEF,OAAO,CAAC,YAAY,GAAG,CAAC,iBAAiB,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;;;;;;;;;;;AAWrE,OAAO,CAAC,qBAAqB,GAAG,UAAU,IAAI,EAAE,UAAU,EAAE;AAC1D,MAAI,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;AAElC,MAAI,UAAU,KAAK,iBAAiB,EAAE;AACpC,iBAAa,CAAC,MAAM,GAAG,aAAa,CAAC,SAAS,CAAC;AAC/C,WAAO,aAAa,CAAC,SAAS,CAAC;AAC/B,WAAO,aAAa,CAAC;GACtB;AACD,MAAI,UAAU,KAAK,WAAW,EAAE;;AAE9B,WAAO,aAAa,CAAC;GACtB;CACF,CAAC;AACF,OAAO,CAAC,sBAAsB,GAAG,UAAU,IAAI,EAAE,UAAU,EAAE;AAC3D,MAAI,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAClC,MAAI,UAAU,KAAK,WAAW,EAAE;AAC9B,iBAAa,CAAC,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC;AAC/C,iBAAa,CAAC,MAAM,GAAG,iBAAiB,CAAC;AACzC,WAAO,aAAa,CAAC,MAAM,CAAC;AAC5B,WAAO,aAAa,CAAC;GACtB;AACD,MAAI,UAAU,KAAK,WAAW,EAAE;;;AAG9B,UAAM,KAAK,CAAC,sDAAsD,CAAC,CAAC;GACrE;CACF,CAAC;AACF,OAAO,CAAC,oBAAoB,GAAG,OAAO,CACpC,8BAA8B,EAAE,UAAU,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE;AACtE,MAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AAC1D,MAAI,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;AACtD,MAAI,IAAI,GAAG,OAAO,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;AAEpC,MAAI,OAAO,KAAK,CAAC,CAAC,EAChB,MAAM,IAAI,KAAK,CAAC,6CAA6C,GAAG,UAAU,CAAC,CAAC;AAC9E,MAAI,KAAK,KAAK,CAAC,CAAC,EACd,MAAM,IAAI,KAAK,CAAC,2CAA2C,GAAG,QAAQ,CAAC,CAAC;;AAE1E,SAAO,OAAO,KAAK,KAAK,EAAE;AACxB,QAAI,IAAI,GAAG,CAAC,EAAE;AACZ,UAAI,GAAG,OAAO,CAAC,qBAAqB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;KACxD,MAAM;AACL,UAAI,GAAG,OAAO,CAAC,sBAAsB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;KACzD;;AAED,WAAO,IAAI,IAAI,CAAC;AAChB,cAAU,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;GAC5C;;AAED,SAAO,IAAI,CAAC;CACb,CAAC,CAAC;;;;AAIH,OAAO,CAAC,yBAAyB,GAC/B,OAAO,CAAC,mCAAmC,EAAE,UAAU,gBAAgB,EAAE;AACzE,MAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,MAAI,eAAe,GAAG,IAAI,CAAC;;;AAG3B,MAAI,eAAe,GAAG,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACvE,MAAI,kBAAkB,GAAG,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;;AAE7E,MAAI,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE;AACjC,QAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;;AAE9D,QAAI,WAAW,CAAC,WAAW,CAAC,EAAE;AAC5B,cAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,CAAC;AACpC,qBAAe,GAAG,WAAW,CAAC;KAC/B,MAAM,IAAI,WAAW,CAAC,WAAW,CAAC,EAAE;AACnC,cAAQ,GAAG,OAAO,CAAC,oBAAoB,CACrC,WAAW,CAAC,WAAW,CAAC,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;AACtD,qBAAe,GAAG,WAAW,CAAC;KAC/B,MAAM;;AAEL,YAAM,IAAI,KAAK,CAAC,wFAAwF,GACtG,oEAAoE,CAAC,CAAC;KACzE;GACF,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;;;AAG3C,QAAI,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;AACpC,cAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC;;AAE1D,cAAQ,GAAG,OAAO,CAAC,oBAAoB,CAAC,QAAQ,EAC9C,iBAAiB,EAAE,WAAW,CAAC,CAAC;AAClC,qBAAe,GAAG,iBAAiB,CAAC;KACrC;;AAED,QAAI,QAAQ,CAAC,MAAM,KAAK,iBAAiB,EAAE;;;AAGzC,UAAI,QAAQ,CAAC,MAAM,KAAK,iBAAiB,EAAE;AACzC,cAAM,IAAI,OAAO,CAAC,qBAAqB,EAAE,CAAC;OAC3C;;AAED,YAAM,IAAI,KAAK,CAAC,8BAA8B,GAC9B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;KAClD;GACF;;AAED,SAAO,EAAC,QAAQ,EAAR,QAAQ,EAAE,eAAe,EAAf,eAAe,EAAC,CAAC;CACpC,CAAC,CAAC;;AAEH,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE;;;AAG1B,WAAS,EAAE,UAAU,IAAI,EAAE;AACzB,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC;GAClB;;;;AAID,iBAAe,EAAE,UAAU,OAAO,EAAE;AAClC,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AACzB,QAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACjC,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAC/B,QAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAC7B,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAC/B,QAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,CAAC;AACvD,QAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;AAC7C,QAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AACvC,QAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AACvC,QAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;AACnC,QAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACjC,QAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,IAAI,IAAI,CAAC;AACrD,QAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,gBAAgB,CAAC;GAClD;;;;;;AAMD,aAAW,EAAE,UAAU,OAAO,EAAE;AAC9B,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;GAClD;;AAED,6BAA2B,EAAE,UAAU,wBAAwB,EAAE;AAC/D,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;GAC1D;;AAED,+BAA6B,EAAE,OAAO,CACpC,uCAAuC,EAAE,UAAU,UAAU,EAAE;AAC/D,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,WAAW,GAAG,EAAE,CAAC;AACrB,QAAI,cAAc,GAAG,KAAK,CAAC;AAC3B,QAAI,0BAA0B,GAAG,UAAU,QAAQ,EAAE;AACnD,OAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAU,IAAI,EAAE,QAAQ,EAAE;AAC/C,sBAAc,GAAG,IAAI,CAAC;AACtB,YAAI,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;AAE5D,YAAI,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,OAAO,EACpD,OAAO;AACT,mBAAW,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;OAClC,CAAC,CAAC;KACJ,CAAC;AACF,8BAA0B,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAChD,KAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE;AAClC,gCAA0B,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;KACxC,CAAC,CAAC;;;;;AAKH,QAAI,CAAE,cAAc,EAClB,OAAO,IAAI,CAAC;AACd,WAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;GAC5B,CAAC;;;AAGF,eAAa,EAAE,OAAO,CAAC,uBAAuB,EAAE,YAAY;AAC1D,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,OAAO,GAAG,EAAE,CAAC;AACjB,KAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;AACzC,aAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;KAC/B,CAAC,CAAC;AACH,KAAC,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,UAAU,IAAI,EAAE;AAChD,aAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;KACtB,CAAC,CAAC;AACH,KAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,MAAM,EAAE,IAAI,EAAE;AAC3C,OAAC,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE;AACnC,eAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;OACtB,CAAC,CAAC;KACJ,CAAC,CAAC;AACH,QAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;;;;;;;AAOpC,QAAI,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE;AAAE,aAAO,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAAE,CAAC,EAAE;AAC5D,YAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KAClC;AACD,WAAO,MAAM,CAAC;GACf,CAAC;;;;AAIF,oBAAkB,EAAE,YAAY;AAC9B,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,WAAO,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACvC;;;;AAID,kBAAgB,EAAE,YAAY;AAC5B,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,WAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,UAAU,IAAI,EAAE;AACjD,aAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAC5B,CAAC,CAAC;GACJ;;AAED,aAAW,EAAE,YAAY;AACvB,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,WAAO,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;GAC/D;;AAED,oBAAkB,EAAE,YAAY;AAC9B,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;AACnD,QAAI,CAAC,WAAW,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;AACrD,WAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;GAClC;;;;;AAKD,mBAAiB,EAAE,OAAO,CAAC,2BAA2B,EAAE,UACtD,IAAI,EAA6B;qEAAJ,EAAE;;QAAxB,kBAAkB,QAAlB,kBAAkB;;AACzB,QAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,QAAI,UAAU,GAAG,QAAQ,CAAC,iBAAiB,CACzC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;AACzC,QAAI,CAAE,UAAU,IAAI,kBAAkB,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;;;;;;;AAO7D,gBAAU,GACR,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;KAChF;AACD,QAAI,CAAE,UAAU,EAAE;AAChB,kBAAY,CAAC,KAAK,CAChB,CAAC,IAAI,CAAC,IAAI,IAAI,UAAU,CAAA,GACtB,wCAAwC,GAAG,IAAI,GAAG,GAAG,EACvD,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;;AAEvB,aAAO,IAAI,CAAC;KACb;AACD,WAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;GAC1D,CAAC;;AAEF,0BAAwB,EAAE,YAAY;AACpC,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,IAAI,CAAC,mBAAmB,EAC1B,OAAO;AACT,UAAM,KAAK,CAAC,8BAA8B,CAAC,CAAC;GAC7C;;;;AAID,0BAAwB,EAAE,OAAO,CAAC,kCAAkC,EAAE,YAAY;AAChF,QAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,gBAAY,CAAC,WAAW,EAAE,CAAC;;AAE3B,QAAI,IAAI,CAAC,mBAAmB,EAC1B,OAAO;;AAET,QAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,kBAAkB,CACvE,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;AACjE,QAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,iBAAiB,CAAC,kBAAkB,CACrE,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;AACrE,QAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,kBAAkB,CACvE,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;;AAE/C,KAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,aAAa,EAAE,IAAI,EAAE;AAClD,UAAI,IAAI,GAAG,QAAQ,CAAC,iBAAiB,CACnC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;AAC1C,UAAI,CAAE,IAAI,EAAE;AACV,oBAAY,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,GAAG,8BAA8B,GACnD,cAAc,CAAC,CAAC;;;AAGnC,eAAO;OACR;;AAED,UAAI,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;AACjC,kBAAY,CAAC,QAAQ,CAAC;AACpB,aAAK,EAAE,kBAAkB,GAAG,IAAI,GAC9B,kBAAkB,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG;;;;;OAKvC,EAAE,YAAY;;AAEb,YAAI,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;AACnC,cAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;OACjC,CAAC,CAAC;KACJ,CAAC,CAAC;;;;;;;;AAQH,KAAC,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,UAAC,kBAAkB,EAAK;AACpD,OAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,UAAC,eAAe,EAAK;AAClE,uBAAe,CAAC,iBAAiB,EAAE,CAAC;OACrC,CAAC,CAAC;KACJ,CAAC,CAAC;;AAEH,QAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;GACjC,CAAC;;AAEF,gBAAc,EAAE,YAAY;AAC1B,QAAI,OAAO,GAAG,IAAI,CAAC;;;;;;;AAOnB,QAAI,MAAM,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BX,2BAAqB,EAAE,UAAU,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE;AAC5D,YAAI,CAAC,OAAO,EAAE;AACZ,iBAAO,GAAG,OAAO,CAAC;AAClB,iBAAO,GAAG,EAAE,CAAC;SACd;;;;;;;;;AASD,YAAI,CAAC,OAAO,EAAE;AACZ,iBAAO,GAAG,YAAY,EAAE,CAAC;SAC1B;;AAED,eAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,gBAAgB,CAAC;AACjD,mBAAS,EAAT,SAAS;AACT,iBAAO,EAAP,OAAO;AACP,4BAAkB,EAAE,OAAO,CAAC,WAAW,EAAE;AACzC,oBAAU,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU;AAChC,sBAAY,EAAE,OAAO,CAAC,YAAY;SACnC,CAAC,CAAC;OACJ;;AAED,8BAAwB,EAAE,UACxB,KAAiD,EACjD,OAAO,EACP,KAAgD,EAAE;YAFjD,UAAU,GAAX,KAAiD,CAAhD,UAAU;YAAE,SAAS,GAAtB,KAAiD,CAApC,SAAS;YAAE,YAAY,GAApC,KAAiD,CAAzB,YAAY;YAAE,UAAU,GAAhD,KAAiD,CAAX,UAAU;YAE/C,kBAAkB,GAAnB,KAAgD,CAA/C,kBAAkB;YAAE,UAAU,GAA/B,KAAgD,CAA3B,UAAU;YAAE,cAAc,GAA/C,KAAgD,CAAf,cAAc;;AAC/C,YAAI,CAAC,OAAO,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;;;AAG3C,sBAAY,CAAC,KAAK,CAChB,kCAAiC,cAAc,iEACJ,UAAU,CAAG,CAAC,CAAC;AAC5D,iBAAO;SACR;;AAED,YAAM,aAAa,GAAI,UAAU,IACV,UAAU,YAAY,KAAK,IAC3B,UAAU,CAAC,MAAM,GAAG,CAAC,AAAC,CAAC;AAC9C,YAAM,YAAY,GAAI,SAAS,IACT,SAAS,YAAY,KAAK,IAC1B,SAAS,CAAC,MAAM,GAAG,CAAC,AAAC,CAAC;AAC5C,YAAI,EAAG,aAAa,IAAI,YAAY,CAAA,AAAC,EAAE;AACrC,sBAAY,CAAC,KAAK,CAAC,SAAS,GAAG,UAAU,GAAG,kBAAkB,GAC3C,4CAA4C,EAC5C,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;;AAEvC,iBAAO;SACR;;;;AAID,YAAI,UAAU,IAAI,UAAU,CAAC,IAAI,CAAC,UAAA,CAAC;iBAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC;SAAA,CAAC,EAAE;AACvD,sBAAY,CAAC,KAAK,aACN,UAAU,mCAAgC,CAAC;;AAEvD,iBAAO;SACR;AACD,YAAI,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC,UAAA,CAAC;iBAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC;SAAA,CAAC,EAAE;AACrD,sBAAY,CAAC,KAAK,aACN,UAAU,kCAA+B,CAAC;;AAEtD,iBAAO;SACR;;AAED,YAAI,OAAO,OAAO,KAAK,UAAU,EAAE;AACjC,sBAAY,CAAC,KAAK,CAAC,UAAU,GAAG,aAAa,GACxB,4BAA4B,EAC9B,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;;AAEvC,iBAAO;SACR;;AAED,YAAM,EAAE,GAAG,IAAI,iBAAiB,CAAC,eAAe,CAAC;AAC/C,iBAAO,EAAE,OAAO;AAChB,oBAAU,EAAE,UAAU;AACtB,mBAAS,EAAE,SAAS;AACpB,sBAAY,EAAE,YAAY;AAC1B,oBAAU,EAAE,UAAU;AACtB,yBAAe,EAAE,OAAO;AACxB,oBAAU,EAAE,UAAU;SACvB,CAAC,CAAC;;AAEH,0BAAkB,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;OAC3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDD,sBAAgB,EAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC5C,cAAM,CAAC,wBAAwB,CAAC,OAAO,IAAI,EAAE,EAAE,OAAO,EAAE;AACtD,4BAAkB,EAAE,OAAO,CAAC,gBAAgB,CAAC,QAAQ;AACrD,oBAAU,EAAE,kBAAkB;AAC9B,wBAAc,EAAE,0BAA0B;SAC3C,CAAC,CAAC;OACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CD,oBAAc,EAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC1C,cAAM,CAAC,wBAAwB,CAAC,OAAO,IAAI,EAAE,EAAE,OAAO,EAAE;AACtD,4BAAkB,EAAE,OAAO,CAAC,gBAAgB,CAAC,MAAM;AACnD,oBAAU,EAAE,gBAAgB;AAC5B,wBAAc,EAAE,wBAAwB;SACzC,CAAC,CAAC;OACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CD,sBAAgB,EAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC5C,YAAI,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,GAAG,EAAE;AAC/D,iBAAO,CAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;SACzC,CAAC,CAAC;;AAEH,YAAI,gBAAgB,KAAK,SAAS,EAAE;AAClC,sBAAY,CAAC,KAAK,CAAC,gBAAgB,GAAG,oEAAoE,CAAC,CAAC;AAC5G,iBAAO;SACR;;AAED,YAAI,OAAO,CAAC,SAAS,EAAE;AACrB,sBAAY,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;AAC1E,iBAAO;SACR;;AAED,cAAM,CAAC,wBAAwB,CAAC,OAAO,IAAI,EAAE,EAAE,OAAO,EAAE;AACtD,4BAAkB,EAAE,OAAO,CAAC,gBAAgB,CAAC,QAAQ;AACrD,oBAAU,EAAE,kBAAkB;AAC9B,wBAAc,EAAE,0BAA0B;SAC3C,CAAC,CAAC;OACJ;;AAED,WAAK,EAAE,YAAY;AACjB,eAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;OACrB;;AAED,qBAAe,EAAE,KAAK,CAAC,eAAe;AACtC,2BAAqB,EAAE,KAAK,CAAC,qBAAqB;AAClD,UAAI,EAAE;AACJ,YAAI,EAAE,KAAK,CAAC,QAAQ;AACpB,iBAAS,EAAE,KAAK,CAAC,aAAa;AAC9B,gBAAQ,EAAE,KAAK,CAAC,YAAY;AAC5B,eAAO,EAAE,KAAK,CAAC,WAAW;AAC1B,eAAO,EAAE,KAAK,CAAC,WAAW;AAC1B,gBAAQ,EAAE,KAAK,CAAC,YAAY;AAC5B,eAAO,EAAE,KAAK,CAAC,WAAW;AAC1B,WAAG,EAAE,KAAK,CAAC,OAAO;OACnB;AACD,QAAE,EAAE,KAAK,CAAC,SAAS;KACpB,CAAC;AACF,WAAO,MAAM,CAAC;GACf;;;;;;;AAOD,cAAY,EAAE,OAAO,CACnB,sBAAsB,EAAE,UAAU,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE;AACtD,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,WAAO,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AACjC,WAAO,CAAC,YAAY,GAAG,IAAI,CAAC;;AAE5B,QAAI,OAAO,CAAC,cAAc,EAAE;AAC1B,UAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;KAC9C;;AAED,WAAO,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;GACxD,CAAC;;AAEF,wBAAsB,EAAE,UAAU,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE;AACpD,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,WAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;;;;;AAMxB,OAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;;6CAEC,OAAO,CAAC,yBAAyB,CAAC,GAAG,CAAC;;QAAlD,QAAQ,sCAAlB,QAAQ;;AACb,QAAI,CAAE,QAAQ,EAAE;AACd,YAAM,IAAI,KAAK,CAAC,0CAA0C,GAAG,GAAG,CAAC,CAAC;KACnE;;;AAGD,QAAI,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,IAAI,KAAK,QAAQ,CAAC,IAAI,EAAE;AACrD,YAAM,IAAI,KAAK,CAAC,UAAU,GAAG,IAAI,GAAG,sBAAsB,GAC1C,QAAQ,CAAC,IAAI,CAAC,CAAC;KAChC;;;;;;;AAOD,QAAI,iBAAiB,GAAG,EAAE,CAAC;AAC3B,QAAI,OAAO,CAAC,oBAAoB,EAAE;AAChC,UAAI,CAAE,OAAO,CAAC,YAAY,EACxB,MAAM,KAAK,CAAC,qCAAqC,CAAC,CAAC;;;;;;AAMrD,OAAC,CAAC,IAAI,CACJ,OAAO,CAAC,oBAAoB,CAAC,oBAAoB,EACjD,UAAU,YAAY,EAAE,WAAW,EAAE;AACnC,yBAAiB,CAAC,WAAW,CAAC,GAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;OACzC,CAAC,CAAC;;;;;AAKL,UAAI,CAAC,cAAc,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAC3C,OAAO,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;KACpD;;;;AAID,QAAI,OAAO,CAAC,YAAY,EAAE;AACxB,UAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,UAAI,CAAC,QAAQ,GAAG;AACd,eAAO,EAAE,QAAQ,CAAC,OAAO;OAC1B,CAAC;AACF,UAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;AAChC,UAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;AAC9B,UAAI,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;AACtC,UAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;KACrC;AACD,KAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,UAAU,EAAE;AAC7C,mBAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;;AAE/B,UAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEvE,UAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE;AACzC,YAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;OACpC;;AAED,UAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE;AACtD,YAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;OACrD;KACF,CAAC,CAAC;AACH,QAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,KAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,YAAY,EAAE;;;AAG9C,mBAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;;;AAGjC,UAAI,mBAAmB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;AACnE,eAAO,QAAQ,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,CAAC;OAC5C,CAAC,CAAC;AACH,UAAI,mBAAmB,EACrB,OAAO;;AAET,UAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAC3B,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;AAE1D,UAAI,gBAAgB,GAClB,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;;AAE5D,UAAI,YAAY,CAAC,MAAM,KAAK,0BAA0B,IAClD,YAAY,CAAC,MAAM,KAAK,oBAAoB,EAAE;AAChD,cAAM,IAAI,KAAK,CAAC,uCAAuC,GACvC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;OACtD;;;;;;AAMD,UAAI,kBAAkB,GAChB,YAAY,CAAC,MAAM,KAAK,0BAA0B,CAAC;;AAEzD,UAAI,eAAe,GAAG,IAAI,CAAC;AAC3B,UAAI,YAAY,CAAC,YAAY,EAAE;AAC7B,qBAAa,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;AACzC,uBAAe,GACb,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,YAAY,CAAC,YAAY,CAAC,CAAC;OAC/D;;AAED,UAAI,SAAS,GAAG,EAAE,CAAC;;AAEnB,OAAC,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;AACjD,qBAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC7B,YAAI,IAAI,GAAG,KAAK,CAAC,6BAA6B,CAC5C,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,QAAQ,CAAC,IAAI,CAAC,EAC/C,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;;AAEpC,YAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE;AAC/B,cAAI,CAAE,kBAAkB,EAAE;AACxB,kBAAM,KAAK,CAAC,iCAAiC,GACjC,YAAY,CAAC,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC,CAAC;WACjD;;;;;;;;AAQD,cAAI,eAAe,GAAG;AACpB,gBAAI,EAAE,QAAQ;AACd,qBAAS,EAAE,IAAI;AACf,gBAAI,EAAE,IAAI;AACV,gBAAI,EAAE,QAAQ,CAAC,SAAS;;;AAGxB,gBAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;;;;AAItB,sCAA0B,EAAE,IAAI;AAChC,yBAAa,EAAE;AACb,8BAAgB,EAAE,YAAY,CAAC,gBAAgB,IAAI,EAAE;aACtD;WACF,CAAC;AACF,cAAI,QAAQ,CAAC,SAAS,EAAE;AACtB,yBAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAClC,2BAAe,CAAC,aAAa,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,CACtD,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,QAAQ,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,CAAC;WACjE;AACD,mBAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACjC,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE;AACrC,mBAAS,CAAC,IAAI,CAAC;AACb,gBAAI,EAAE,QAAQ;AACd,qBAAS,EAAE,QAAQ,CAAC,SAAS;AAC7B,sCAA0B,EACxB,CAAC,CAAE,QAAQ,CAAC,0BAA0B;AACxC,gBAAI,EAAE,IAAI;AACV,gBAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,gBAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,uBAAW,EAAE,QAAQ,CAAC,WAAW;WAClC,CAAC,CAAC;SACJ,MAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,EACtC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACpC,mBAAS,CAAC,IAAI,CAAC;AACb,gBAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,gBAAI,EAAE,IAAI;AACV,qBAAS,EAAE,QAAQ,CAAC,SAAS,IAAI,SAAS;AAC1C,gBAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,SAAS;WACjC,CAAC,CAAC;SACJ,MACC,MAAM,IAAI,KAAK,CAAC,gCAAgC,GAChC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;OAClD,CAAC,CAAC;;AAEH,UAAI,eAAe,CAAC;AACpB,UAAI,kBAAkB,EAAE;;;AAGtB,uBAAe,GAAG,EAAE,CAAC;AACrB,SAAC,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,UAAU,EAAE,EAAE;AAClD,cAAI,EAAE,UAAO,EAAE;AACb,2BAAe,CAAC,IAAI,CAAC;AACnB,kBAAI,EAAE,EAAE,CAAC,IAAI;AACb,sBAAQ,EAAE,EAAE,UAAO,KAAK,OAAO;aAChC,CAAC,CAAC;WACJ;SACF,CAAC,CAAC;OACJ,MAAM;AACL,uBAAe,GAAG,YAAY,CAAC,eAAe,IAAI,EAAE,CAAC;OACtD;;AAED,kBAAY,CAAC,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AACtD,YAAI,CAAC,GAAG,CAAC,IAAI,IAAI,QAAQ,CAAC,wBAAwB,CAAC,GAAG,WAAQ,CAAC,IAC3D,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,WAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;AACrD,cAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,WAAQ,CAAC,CAAC;SACzC;OACF,CAAC,CAAC;;AAEH,UAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,EAAE;;;AAGrC,YAAI,EAAE,YAAY,CAAC,IAAI,IAAI,MAAM;AACjC,YAAI,EAAE,YAAY,CAAC,IAAI;AACvB,YAAI,EAAE,YAAY,CAAC,IAAI;AACvB,eAAO,EAAE,YAAY,CAAC,OAAO;AAC7B,gBAAQ,EAAE,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC;AAC9C,uBAAe,EAAE,eAAe;AAChC,uBAAe,EAAE,eAAe;AAChC,iBAAS,EAAE,SAAS;OACrB,CAAC,CAAC,CAAC;KACL,CAAC,CAAC;;AAEH,QAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,mBAAmB,IAAI,IAAI,CAAC;;AAEhE,KAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAU,QAAQ,EAAE;AACzC,cAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;;AAEvB,UAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjC,CAAC,CAAC;;AAEH,WAAO,IAAI,CAAC;GACb;;AAED,oBAAkB,EAAE,YAAY;AAC9B,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,WAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;AAC/C,aAAO,QAAQ,CAAC,IAAI,KAAK,aAAa,CAAC;KACxC,CAAC,CAAC;GACJ;;AAED,sBAAoB,EAAA,YAAG;AACrB,aAAS,6BAA6B,CAAC,QAAQ,EAAE;;;AAG/C,UAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC9B,eAAO,IAAI,CAAC;OACb;;;;AAID,UAAI,QAAQ,CAAC,SAAS,KAAK,KAAK,EAAE;AAChC,eAAO,IAAI,CAAC;OACb;;;;AAID,UAAI,QAAQ,CAAC,SAAS,KAAK,IAAI,IAAI,QAAQ,CAAC,0BAA0B,EAAE;AACtE,eAAO,IAAI,CAAC;OACb;;;;;AAKD,aAAO,KAAK,CAAC;KACd;;AAED,WAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CACzB,UAAA,QAAQ;aAAI,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,6BAA6B,CAAC;KAAA,CACpE,CAAC;GACH;;;;;;;;;;;;;;;;;;;AAmBD,YAAU,EAAE,OAAO,CAAC,oBAAoB,EAAE,UAAU,SAAS,EAAE,OAAO,EAAE;AACtE,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,UAAU,GAAG,SAAS,CAAC;AAC3B,WAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;AAExB,QAAI,OAAO,GAAG,IAAI,OAAO,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;AACtD,QAAI;UACE,QAAQ;UAuBR,oBAAoB;UAgCpB,cAAc;UAkBd,aAAa;UA2KX,SAAS;UAoBX,cAAc;UAgJd,WAAW;;;AAxZX,gBAAQ,GAAG;AACb,cAAI,EAAE,IAAI,CAAC,IAAI;AACf,iBAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;AAC9B,iBAAO,EAAE,IAAI,CAAC,OAAO;AACrB,gBAAM,EAAE,IAAI,CAAC,MAAM;AACnB,gBAAM,EAAE,EAAE;AACV,iBAAO,EAAE,EAAE;SACZ;;AAED,YAAI,IAAI,CAAC,SAAS,EAAE;AAClB,kBAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;SAC3B;AACD,YAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,kBAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;SAC1B;AACD,YAAI,CAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE;AACzC,kBAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;SACzD;;AAED,YAAM,iBAAiB,GACrB,OAAO,CAAC,uCAAuC,IAC1C,IAAI,CAAC,oBAAoB,EAAE,AAAC,CAAC;;AAEhC,4BAAoB,GAAG,IAAI;;AAC/B,YAAI,OAAO,CAAC,uBAAuB,EAAE;AACnC,8BAAoB,GAAG;AACrB,mBAAO,EAAE,QAAQ,CAAC,QAAQ;AAC1B,gCAAoB,EAAE,EAAE;;;;;AAKxB,8BAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;AAChD,oCAAwB,EAAE,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE;AAChE,kCAAsB,EAAE,IAAI,CAAC,kBAAkB,EAAE;WAClD,CAAC;SACH;;;AAGD,eAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAEnC,eAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;;;AAGhC,eAAO,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;;AAE1C,eAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACxB,eAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;;;AAQpB,sBAAc,GAAG,EAAE;;;;;;;;;;;AAWvB,eAAO,CAAC,KAAK,CAAC,YAAY,EAAE;AAC1B,cAAI,EAAE,IAAI,MAAM,CACb,6DAA6D,GAC7D,6BAA6B,EAC9B,MAAM,CAAC;SACV,CAAC,CAAC;;AAEC,qBAAa,GAAG,EAAE;;;AAGtB,SAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;;AAEzC,cAAI,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC;AACrC,cAAI,WAAW,GACb,OAAO,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AAClE,cAAI,gBAAgB,GAClB,OAAO,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,OAAO,CAAC,CAAC;AACvD,kBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;AACnB,gBAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,gBAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,gBAAI,EAAE,gBAAgB;WACvB,CAAC,CAAC;;AAEH,cAAI,2BAA2B,GAAG,EAAE,CAAC;;;;AAIrC,cAAI,oBAAoB,EAAE;AACxB,gCAAoB,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,GACzD,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;WAC9B;;;AAGD,cAAI,eAAe,GAAG,SAAS,CAAC;AAChC,cAAI,qBAAqB,GAAG,KAAK,CAAC;AAClC,cAAI,QAAQ,CAAC,eAAe,EAAE;AAC5B,gBAAI,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC,eAAe,CAAC,EAAE;;AAEnD,6BAAe,GAAG,cAAc,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;aAC5D,MAAM;;;AAGL,6BAAe,GAAG,cAAc,CAAC,QAAQ,CAAC,eAAe,CAAC,GACxD,OAAO,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;AAClE,mCAAqB,GAAG,IAAI,CAAC;aAC9B;WACF;;;AAGD,cAAI,YAAY,GAAG;AACjB,kBAAM,EAAE,oBAAoB;AAC5B,2BAAe,EAAE,QAAQ,CAAC,eAAe;AACzC,gBAAI,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE;AACtC,qBAAO;AACL,yBAAS,EAAE,CAAC,WAAQ;;;AAGpB,0BAAU,EAAE,CAAC,CAAC,UAAU,IAAI,SAAS;AACrC,yBAAS,EAAE,CAAC,CAAC,SAAS,IAAI,SAAS;AACnC,oBAAI,EAAE,CAAC,CAAC,IAAI,IAAI,SAAS;eAC1B,CAAC;aACH,CAAC;AACF,mBAAO,EAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,SAAS,GAAG,QAAQ,CAAC,OAAO,AAAC;AACrE,wBAAY,EAAE,eAAe;AAC7B,qBAAS,EAAE,EAAE;WACd,CAAC;;;AAGF,cAAI,MAAM,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;AACpC,cAAI,MAAM,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;AAClC,WAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;AAC7C,gBAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE;AAC/C,kBAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;AAChC,sBAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;AACrD,sBAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;eACzB;AACD,kBAAI,EAAG,QAAQ,CAAC,IAAI,YAAY,MAAM,CAAA,AAAC,EACrC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACpD,0BAAY,CAAC,SAAS,CAAC,IAAI,CAAC;AAC1B,oBAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,oBAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,IAAI,CAAC;AAChD,sBAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM;AAC5B,sBAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;eAC9B,CAAC,CAAC;AACH,oBAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC1C,oBAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;aAC/C;WACF,CAAC,CAAC;AACH,WAAC,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,KAAK,EAAE,IAAI,EAAE;AACpC,gBAAI,KAAK,CAAC,MAAM,EAAE;AAChB,qBAAO,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,EAAE;AAC/C,oBAAI,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;eAChD,CAAC,CAAC;aACJ;WACF,CAAC,CAAC;;;AAGH,WAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;AAC7C,gBAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,EAC7C,OAAO;;;;;AAKT,gBAAI,iBAAiB,IACjB,QAAQ,CAAC,IAAI,KAAK,QAAQ,IAC1B,QAAQ,CAAC,SAAS,IAAI,IAAI,EAAE;AAC9B,yCAA2B,CAAC,IAAI,CAAC;AAC/B,oBAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,oBAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,yBAAS,EAAE,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC;AACpD,oBAAI,EAAE,QAAQ,CAAC,WAAW,IAAI,QAAQ,CAAC,WAAW,CAAC,IAAI;AACvD,yBAAS,EAAE,QAAQ,CAAC,SAAS;;;;AAI7B,6BAAa,EAAE,QAAQ,CAAC,aAAa;eACtC,CAAC,CAAC;aACJ;;AAED,wBAAY,CAAC,SAAS,CAAC,IAAI,CAAC;AAC1B,kBAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,uBAAS,EAAE,QAAQ,CAAC,SAAS;AAC7B,kBAAI,EAAE,OAAO,CAAC,wBAAwB,CACpC,KAAK,CAAC,QAAQ,CAAC,WAAW,EACX,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,EACnD,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC;AAC1B,oBAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM;AAC5B,oBAAM,EAAE,CAAC;AACT,wCAA0B,EACxB,QAAQ,CAAC,0BAA0B,IAAI,SAAS;AAClD,uBAAS,EAAE,QAAQ,CAAC,SAAS,IAAI,SAAS;AAC1C,kBAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,SAAS;AAChC,kBAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,SAAS;AAChC,yBAAW,EAAE,QAAQ,CAAC,WAAW,IAAI,SAAS;aAC/C,CAAC,CAAC;WACJ,CAAC,CAAC;;;AAGH,cAAI,qBAAqB,EAAE;AACzB,mBAAO,CAAC,aAAa,CAAC;AACpB,kBAAI,EAAE,QAAQ,CAAC,eAAe;AAC9B,gBAAE,EAAE,eAAe;AACnB,yBAAW,EAAE,IAAI,CAAC,WAAW;AAC7B,qBAAO,EAAE,KAAK;aACf,CAAC,CAAC;WACJ;;;AAGD,iBAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;AAClD,uBAAa,CAAC,IAAI,CAAC;AACjB,oBAAQ,EAAE,QAAQ;AAClB,wBAAY,EAAE,YAAY;AAC1B,uCAA2B,EAAE,2BAA2B;WACzD,CAAC,CAAC;SACJ,CAAC,CAAC;;;AAGH,SAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,aAAa,EAAE,IAAI,EAAE;AAClD,WAAC,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,MAAM,EAAE;;;AAGtC,gBAAI,SAAS,GAAG,OAAO,CAAC,gBAAgB,CACtC,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,IAAI,EAC5D,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AACvB,gBAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;AACzD,gBAAI,WAAW,GAAG;AAChB,kBAAI,EAAE,IAAI;AACV,kBAAI,EAAE,MAAM,CAAC,IAAI;AACjB,kBAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW,CAAC,WAAW,CAAC;aACzD,CAAC;AACF,oBAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;WACpC,CAAC,CAAC;SACJ,CAAC,CAAC;;;;AAIH,YAAI,IAAI,CAAC,WAAW,EAAE;AAChB,mBAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;;AACxC,kBAAQ,CAAC,KAAK,GAAG,SAAS,CAAC;SAC5B;;;AAGD,SAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,QAAQ,EAAE;AAC3C,kBAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC7B,cAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;AAC/B,iBAAO,QAAQ,CAAC,OAAO,CAAC;AACxB,iBAAO,CAAC,aAAa,CAAC;AACpB,gBAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC;AAC5C,cAAE,EAAE,QAAQ,CAAC,IAAI;AACjB,mBAAO,EAAE,KAAK;WACf,CAAC,CAAC;AACH,cAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;AACnB,oBAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;WACrB;AACD,kBAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/B,CAAC,CAAC;;AAEC,sBAAc,GAAG,IAAI;;AACzB,YAAI,iBAAiB,EAAE;AACrB,wBAAc,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACnC,wBAAc,CAAC,MAAM,GAAG,EAAE,CAAC;;AAE3B,WAAC,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,YAAY,EAAE;AAC5C,gBAAI,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;AACrC,gBAAI,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;AAC7C,gBAAI,2BAA2B,GACzB,YAAY,CAAC,2BAA2B,CAAC;AAC/C,gBAAI,cAAc,GAAG,OAAO,CAAC,gBAAgB,CAC3C,QAAQ,CAAC,IAAI,GAAG,cAAc,CAAC,CAAC;AAClC,gBAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC;AAC1C,0BAAc,CAAC,MAAM,CAAC,IAAI,CAAC;AACzB,kBAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,kBAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,kBAAI,EAAE,cAAc;aACrB,CAAC,CAAC;;AAEH,wBAAY,CAAC,MAAM,GAAG,0BAA0B,CAAC;AACjD,gBAAI,YAAY,GAAG,EAAE,CAAC;AACtB,aAAC,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;AACjD,kBAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC9B,4BAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;eAC7B,MAAM,IAAI,QAAQ,CAAC,SAAS,KAAK,KAAK,EAAE;;;AAGvC,4BAAY,CAAC,IAAI,CAAC;AAChB,sBAAI,EAAE,KAAK;AACX,sBAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,wBAAM,EAAE,QAAQ,CAAC,MAAM;AACvB,wBAAM,EAAE,QAAQ,CAAC,MAAM;AACvB,2BAAS,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC;iBAC7C,CAAC,CAAC;eACJ,MAAM,IAAI,QAAQ,CAAC,SAAS,KAAK,IAAI,EAAE;;;eAGvC,MAAM;AACL,wBAAM,KAAK,CACT,sDAAsD,GAClD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACjC;aACF,CAAC,CAAC;;AAEH,gBAAI,WAAW,EAAE,WAAW,EAAE,gBAAgB,CAAC;AAC/C,gBAAI,2BAA2B,CAAC,MAAM,KAAK,CAAC,IACxC,2BAA2B,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE;;;;AAIhD,yBAAW,GAAG,2BAA2B,CAAC,CAAC,CAAC,CAAC;;;;AAI7C,yBAAW,GAAG,WAAW,CAAC,IAAI,CAAC;AAC/B,8BAAgB,GACd,2BAA2B,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,gBAAgB,CAAC;aACjE,MAAM;;;AAGL,8BAAgB,GAAG,EAAE,CAAC;AACtB,kBAAI,oBAAoB,GAAG,EAAE,CAAC;AAC9B,eAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,UAAU,MAAM,EAAE;AACjD,oBAAI,CAAC,CAAC,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,IAAI,CAAC,EAC1C,OAAO;AACT,gCAAgB,CAAC,IAAI,CAAC;AACpB,sBAAI,EAAE,MAAM,CAAC,IAAI;AACjB,4BAAQ,MAAM,CAAC,QAAQ,GAAE,OAAO,GAAG,IAAI;iBACxC,CAAC,CAAC;AACH,oCAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;eAC1C,CAAC,CAAC;;AAEH,kBAAI,2BAA2B,CAAC,MAAM,EAAE;;AAEtC,oBAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC3B,4BAAU,EAAE,2BAA2B;;;;AAIvC,mCAAiB,EACf,YAAY,GAAG,cAAc,CAAC,OAAO,CACnC,QAAQ,CAAC,GAAG,CAAC,IAAI,IACd,QAAQ,CAAC,IAAI,KAAK,MAAM,GAAG,EAAE,GAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,AAAC,GACvD,KAAK,CAAC,AAAC;AACb,sBAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI;iBACxB,CAAC,CAAC;AACH,oBAAI,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAC9B,wBAAM,KAAK,CAAC,oCAAoC,GACpC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iBACnC;AACD,2BAAW,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,2BAAW,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;;AAErD,iBAAC,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,UAAU,IAAI,EAAE;AAChD,sBAAI,CAAC,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,EACnC,OAAO;AACT,kCAAgB,CAAC,IAAI,CAAC;AACpB,wBAAI,EAAE,IAAI;mBACX,CAAC,CAAC;AACH,sCAAoB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;iBACnC,CAAC,CAAC;eACJ;aACF;;AAED,gBAAI,WAAW,IAAI,WAAW,EAAE;AAC9B,kBAAI,eAAe,GAAG;AACpB,oBAAI,EAAE,SAAS;AACf,oBAAI,EAAE,OAAO,CAAC,wBAAwB,CACpC,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW,CAAC,SAAS,CAAC,EAChD,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;AACxB,sBAAM,EAAE,WAAW,CAAC,MAAM;AAC1B,sBAAM,EAAE,CAAC;AACT,yBAAS,EAAE,WAAW,CAAC,SAAS,IAAI,SAAS;eAC9C,CAAC;AACF,kBAAI,WAAW,CAAC,SAAS,EAAE;;AAEzB,+BAAe,CAAC,SAAS,GAAG,OAAO,CAAC,wBAAwB,CAC1D,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW,CAAC,SAAS,GAAG,MAAM,CAAC,EACzD,EAAE,IAAI,EAAE,IAAI,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,CACpD,CAAC;eACH;AACD,0BAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACpC;;AAED,gBAAI,gBAAgB,CAAC,MAAM,EAAE;AAC3B,0BAAY,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;aAClD;;AAED,wBAAY,CAAC,SAAS,GAAG,YAAY,CAAC;AACtC,mBAAO,YAAY,CAAC,eAAe,CAAC;AACpC,mBAAO,CAAC,SAAS,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;WACjD,CAAC,CAAC;;;;;AAKH,iBAAO,CAAC,SAAS,CACf,iBAAiB,EACjB,OAAO,CAAC,oBAAoB;;;AAG1B,wBAAc,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC,CAAC;SACtD;;AAEG,mBAAW,GAAG,EAAE;;AACpB,mBAAW,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;AACpC,YAAI,iBAAiB,EAAE;AACrB,qBAAW,CAAC,WAAW,CAAC,GAAG,cAAc,CAAC;SAC3C;;;;;;;;;;;AAWD,eAAO,CAAC,SAAS,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;;AAE/C,YAAI,oBAAoB,EAAE;AACxB,iBAAO,CAAC,SAAS,CAAC,wBAAwB,EAAE,oBAAoB,CAAC,CAAC;SACnE;AACD,eAAO,CAAC,QAAQ,EAAE,CAAC;;KACpB,CAAC,OAAO,CAAC,EAAE;AACV,aAAO,CAAC,KAAK,EAAE,CAAC;AAChB,YAAM,CAAC,CAAC;KACT;GACF,CAAC;;AAEF,YAAU,EAAE,OAAO,CAAC,oBAAoB,EAAE,UAAU,OAAO,EAAE;AAC3D,QAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,QAAI,WAAW,GAAG,KAAK,CAAC,gBAAgB,CACtC,SAAS,EACT,IAAI,EACJ,aAAa,EACb,aAAa,EACb,MAAM;;AAEN,WAAO,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,EAC9C,QAAQ,EAAE,YAAY,EAAE,6BAA6B,EACrD,2DAA2D,EAC3D,qDAAqD,CAAC,CAAC;;;AAGzD,eAAW,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,EAAE;AAC3D,aAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,IACtC,CAAC,CAAC,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;KACrC,CAAC,CAAC;;;AAGH,QAAI,gBAAgB,GAAG,CACrB,qBAAqB;AACrB,mCAA+B;AAC/B,8BAA0B;AAC1B,mCAA+B;AAC/B,kCAA8B;AAC9B,oCAAgC,EAChC,yCAAyC,EACzC,4BAA4B,EAC5B,yBAAyB,EACzB,sCAAsC,EACtC,mCAAmC,EACnC,8BAA8B,EAC9B,8BAA8B,CAE/B,CAAC;;;;;;AAIF,QAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B,QAAI,mBAAmB,GAAG,EAAE,CAAC;AAC7B,eAAW,CAAC,OAAO,CAAC,UAAC,IAAI,EAAK;AAC5B,UAAI,eAAe,GACjB,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,UAAC,KAAK;eAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;OAAA,CAAC,CAAC;;AAEzD,UAAI,eAAe,EAAE;AACnB,wBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OAC7B,MAAM;AACL,2BAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OAChC;KACF,CAAC,CAAC;;;AAGH,QAAI,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;AACvC,WAAO,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;;;AAGlC,QAAI,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACpC,oBAAgB,CAAC,OAAO,CAAC,UAAC,IAAI,EAAK;AACjC,UAAI,QAAQ,GAAG,KAAK,CAAC,eAAe,CAClC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;;AAEpD,UAAI,iBAAiB,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;;;;;;AAM1D,UAAI,IAAI,KAAK,iCAAiC,IAC1C,IAAI,KAAK,8CAA8C,EAAE;AAC3D,yBAAiB,GAAG,iBAAiB,CAAC,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;OAC5E;;AAED,UAAI,YAAY,GAAG,KAAK,CAAC,iBAAiB,CACxC,OAAO,CAAC,+BAA+B,CAAC,CACzC,CAAC;;AAEF,OAAC,CAAC,MAAM,CAAC,YAAY,EAAE;AACrB,gBAAQ,EAAE,IAAI;AACd,sBAAc,EAAE,GAAG,GAAG,IAAI;AAC1B,qBAAa,EAAE,IAAI,GAAG,MAAM;AAC5B,iBAAS,EAAE,IAAI;OAChB,CAAC,CAAC;;AAEH,UAAI,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;;AAEhE,UAAI,mBAAmB,GAAG,uBAAuB,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;;AAEtF,aAAO,CAAC,KAAK,CAAC,IAAI,EAAE;AAClB,YAAI,EAAE,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,GAAG,mBAAmB,EAAE,MAAM,CAAC;OACvE,CAAC,CAAC;;AAEH,aAAO,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,EAAE;AAC3B,YAAI,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC;OACzD,CAAC,CAAC;KACJ,CAAC,CAAC;;AAEH,QAAI,MAAM,GAAG,KAAK,CAAC,gBAAgB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;AACzD,WAAO,CAAC,OAAO,CAAC,YAAY,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;AACjD,WAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,EAAC,IAAI,EAAE,IAAI,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,EAAC,CAAC,CAAC;;AAEtE,WAAO,CAAC,aAAa,CAAC;AACpB,UAAI,EAAE,KAAK,CAAC,kBAAkB,EAAE;AAChC,QAAE,EAAE,EAAE;AACN,mBAAa,EAAE,mBAAmB;AAClC,aAAO,EAAE,KAAK;KACf,CAAC,CAAC;;;;AAIH,QAAI,eAAe,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AACnD,mBAAe,CAAC,IAAI,CAAC,mBAAmB,EAAE,wBAAwB,CAAC,CAAC;AACpE,WAAO,CAAC,aAAa,CAAC;AACpB,UAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;AAC1C,QAAE,EAAE,YAAY;AAChB,YAAM,EAAE,eAAe;AACvB,aAAO,EAAE,KAAK;KACf,CAAC,CAAC;;;;AAIH,QAAI,qBAAqB,GAAG,UAAU,CAAC,yBAAyB,EAAE,CAAC;;AAEnE,QAAI,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY;;;;;AAK9C,OAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,QAAQ,EAAE,aAAa,EAAE;AAC/D,oBAAY,CAAC,QAAQ,CAAC;AACpB,eAAK,EAAE,YAAY,GAAG,aAAa,GAAG,wBAAwB;SAC/D,EAAE,YAAY;AACb,+BAAqB,CAAC,YAAY,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AAChE,cAAI,YAAY,CAAC,cAAc,EAAE,EAC/B,OAAO;;AAET,cAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC;AAC/B,gBAAI,EAAE,YAAY,GAAG,aAAa;AAClC,sBAAU,EAAE,qBAAqB,CAAC,UAAU;AAC5C,wBAAY,EAAE,qBAAqB,CAAC,YAAY;AAChD,eAAG,EAAE,QAAQ;WACd,CAAC,CAAC,KAAK,CAAC;AACT,cAAI,YAAY,CAAC,cAAc,EAAE,EAC/B,OAAO;;AAET,eAAK,CAAC,KAAK,CACT,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;SAC/D,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ,CAAC,CAAC;;;;AAIH,QAAI,QAAQ,CAAC,WAAW,EAAE,EAAE;AAC1B,aAAO,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;AAC9C,aAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC;AACzC,YAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;KACvC;;AAED,WAAO,CAAC;AACN,UAAI,EAAE,QAAQ;AACd,UAAI,EAAE,QAAQ,CAAC,IAAI,EAAE;AACrB,UAAI,EAAE,QAAQ;KACf,CAAC,CAAC;GACJ,CAAC;;AAEF,mBAAiB,EAAE,OAAO,CAAC,2BAA2B,EAAE,YAAY;AAClE,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;AAC3C,KAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;AACzC,cAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACnC,CAAC,CAAC;AACH,WAAO,QAAQ,CAAC;GACjB,CAAC;;AAEF,mBAAiB,EAAE,OAAO,CAAC,2BAA2B,EAAE,YAAY;AAClE,QAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;AAC3C,KAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;AACzC,UAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AAChC,gBAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;OACnC;KACF,CAAC,CAAC;AACH,WAAO,QAAQ,CAAC;GACjB,CAAC;;AAEF,mBAAiB,EAAE,OAAO,CAAC,2BAA2B,EAAE,YAAY;AAClE,QAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;AAC3C,KAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;AACzC,UAAI,CAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AAClC,gBAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;OACnC;KACF,CAAC,CAAC;AACH,WAAO,QAAQ,CAAC;GACjB,CAAC;;;;;;;;;AASF,wCAAsC,EAAE,OAAO,CAC7C,gDAAgD,EAAE,YAAY;AAC9D,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,QAAI,UAAU,GAAG,UAAU,GAAG,EAAE;AAC9B,UAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,SAAS,EAC3B,OAAO;;AAET,UAAI,QAAQ,CAAC,wBAAwB,CAAC,GAAG,WAAQ,CAAC,EAAE;AAClD,eAAO;OACR;AACD,cAAQ,CAAC,GAAG,WAAQ,CAAC,GAAG,IAAI,CAAC;KAC9B,CAAC;;AAEF,KAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;AACzC,OAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AAClC,OAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;KACtC,CAAC,CAAC;AACH,WAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GACzB,CAAC;;AAEF,gBAAc,EAAA,UAAC,kBAAkB,EAAE;AACjC,WAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;GACjE;;AAED,eAAa,EAAE,UAAU,aAAa,EAAE;AACtC,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,SAAS,CAAC;AACd,QAAI,IAAI,CAAC,IAAI,EAAE;AACb,eAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACrD,MAAM;AACL,eAAS,GAAG,GAAG,CAAC;KACjB;;AAED,WAAO,cAAc,CAAC,OAAO,CAC3B,KAAK,CAAC,QAAQ,CACZ,SAAS;;AAET,SAAK,CAAC,qBAAqB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;GACxD;;AAED,aAAW,EAAA,YAAG;AACZ,WAAO,IAAI,CAAC,IAAI,KAAK,IAAI,GAAG,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;GACnD;CACF,CAAC,CAAC;;AAEH,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;;AAE1B,OAAO,CAAC,qBAAqB,GAAG,YAAY;;;AAG1C,MAAI,CAAC,QAAQ,GAAG,YAAY;AAAE,WAAO,qBAAqB,CAAA;GAAE,CAAC;CAC9D,CAAC","file":"tools/isobuild/isopack.js.map","sourcesContent":["var compiler = require('./compiler.js');\nvar archinfo = require('../utils/archinfo.js');\nvar _ = require('underscore');\nvar linker = require('./linker.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar Builder = require('./builder.js');\nvar bundler = require('./bundler.js');\nvar watch = require('../fs/watch.js');\nvar files = require('../fs/files.js');\nvar isopackets = require('../tool-env/isopackets.js');\nvar colonConverter = require('../utils/colon-converter.js');\nvar utils = require('../utils/utils.js');\nvar buildPluginModule = require('./build-plugin.js');\nvar Console = require('../console/console.js').Console;\nvar Profile = require('../tool-env/profile.js').Profile;\n\nvar rejectBadPath = function (p) {\n  if (p.match(/\\.\\./))\n    throw new Error(\"bad path: \" + p);\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Unibuild\n///////////////////////////////////////////////////////////////////////////////\n\n// Options:\n// - kind [required] (main/plugin/app)\n// - arch [required]\n// - uses\n// - implies\n// - watchSet\n// - nodeModulesPath\n// - declaredExports\n// - resources\n\nvar nextBuildId = 1;\nvar Unibuild = function (isopack, options) {\n  var self = this;\n  options = options || {};\n  self.pkg = isopack;\n\n  self.kind = options.kind;\n  self.arch = options.arch;\n\n  self.uses = options.uses;\n  self.implies = options.implies || [];\n\n  // This WatchSet will end up having the watch items from the\n  // SourceArch (such as package.js or .meteor/packages), plus all of\n  // the actual source files for the unibuild (including items that we\n  // looked at to find the source files, such as directories we\n  // scanned).\n  self.watchSet = options.watchSet || new watch.WatchSet();\n\n  // Each Unibuild is given a unique id when it's loaded (it is\n  // not saved to disk). This is just a convenience to make it easier\n  // to keep track of Unibuilds in a map; it's used by bundler\n  // and compiler. We put some human readable info in here too to make\n  // debugging easier.\n  self.id = self.pkg.name + \".\" + self.kind + \"@\" + self.arch + \"#\" +\n    (nextBuildId ++);\n\n  // 'declaredExports' are the variables which are exported from this package.\n  // A list of objects with keys 'name' (required) and 'testOnly' (boolean,\n  // defaults to false).\n  self.declaredExports = options.declaredExports;\n\n  // All of the data provided for eventual inclusion in the bundle,\n  // other than JavaScript that still needs to be fed through the\n  // final link stage. A list of objects with these keys:\n  //\n  // type: \"source\", \"head\", \"body\", \"asset\". (resources produced by\n  // legacy source handlers can also be \"js\" or \"css\".\n  //\n  // data: The contents of this resource, as a Buffer. For example,\n  // for \"head\", the data to insert in <head>; for \"js\", the\n  // JavaScript source code (which may be subject to further\n  // processing such as minification); for \"asset\", the contents of a\n  // static resource such as an image.\n  //\n  // servePath: The (absolute) path at which the resource would prefer\n  // to be served. Interpretation varies by type. For example, always\n  // honored for \"asset\", ignored for \"head\" and \"body\", sometimes\n  // honored for CSS but ignored if we are concatenating.\n  //\n  // sourceMap: Allowed only for \"js\". If present, a string.\n  //\n  // fileOptions: for \"source\", the options passed to `api.addFiles`.\n  // plugin-specific.\n  //\n  // extension: for \"source\", the file extension that this matched\n  // against at build time. null if matched against a specific filename.\n  self.resources = options.resources;\n\n  // Absolute path to the node_modules directory to use at runtime to\n  // resolve Npm.require() calls in this unibuild. null if this unibuild\n  // does not have a node_modules.\n  self.nodeModulesPath = options.nodeModulesPath;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Isopack\n///////////////////////////////////////////////////////////////////////////////\n\n// Meteor has a packaging system called \"Isobuild\". Isobuild knows how to\n// compile the same JavaScript code-base to different architectures: browser,\n// node.js-like server environment (could be Rhino or other) or a webview in a\n// Cordova mobile app.\n//\n// Each package used by Isobuild forms an Isopack. Isopack is a package format\n// containing source code for each architecture it can be ran on.\n// Each separate part built for a separate architecture is called \"Unibuild\".\n//\n// There are multiple reasons why we can't call it just \"build\" and historically\n// the name \"Unibuild\" has been associated with parts of Isopacks. We also can't\n// call it \"Isobuild\" because this is the brand-name of the whole\n// build/packaging system.\nvar Isopack = function () {\n  var self = this;\n\n  // These have the same meaning as in PackageSource.\n  self.name = null;\n  self.metadata = {};\n  self.version = null;\n  self.isTest = false;\n  self.debugOnly = false;\n  self.prodOnly = false;\n\n  // Unibuilds, an array of class Unibuild.\n  self.unibuilds = [];\n\n  // Plugins in this package. Map from plugin name to {arch -> JsImage}.\n  // Plugins are package-supplied classes and functions that can change the\n  // build process: introduce a new source processor (compiler, minifier,\n  // linter)\n  self.plugins = {};\n\n  self.cordovaDependencies = {};\n\n  // isobuild:* pseudo-packages which this package depends on.\n  self.isobuildFeatures = [];\n\n  // -- Information for up-to-date checks --\n  // Data in this section is only set if the Isopack was directly created by\n  // compiler.compile or read from a package compiled by IsopackCache (with its\n  // isopack-buildinfo.json file). They are not set for Isopacks read from\n  // the tropohouse.\n\n  // XXX this is likely to change once we have build versions\n  //\n  // A WatchSet for the full transitive dependencies for all plugins in this\n  // package, as well as this package's package.js. If any of these dependencies\n  // change, our plugins need to be rebuilt... but also, any package that\n  // directly uses this package needs to be rebuilt in case the change to\n  // plugins affected compilation.\n  self.pluginWatchSet = new watch.WatchSet();\n\n  // -- Loaded plugin state --\n\n  // True if plugins have been initialized (if ensurePluginsInitialized has\n  // been called)\n  self._pluginsInitialized = false;\n\n  // The SourceProcessors registered by plugins defined by this package.  Each\n  // value is a SourceProcessorSet. sourceProcessors.compiler includes the\n  // legacy source handlers as well.\n  // Valid when self._pluginsInitialized is true.\n  self.sourceProcessors = {\n    compiler: null,\n    linter: null,\n    minifier: null\n  };\n\n  // See description in PackageSource. If this is set, then we include a copy of\n  // our own source, in addition to any other tools that were originally in the\n  // isopack.\n  self.includeTool = false;\n\n  // This is tools to copy from trees on disk. This is used by the\n  // isopack-merge code in tropohouse.\n  self.toolsOnDisk = [];\n\n  // A map of package dependencies that can provide a plugin for this isopack.\n  // In practice, it is every direct dependency and implied packages.\n  self.pluginProviderPackageMap = null;\n\n  // A directory on disk that plugins can use for caching. Should be created\n  // by the code that initializes the Isopack. If not provided, plugins don't\n  // get a disk cache.\n  self.pluginCacheDir = null;\n\n  // An in-memory only buildmessage.MessageSet object that is printed by the\n  // build tool when the app is linted. Is also printed when a package\n  // represented by Isopack is published.\n  self.lintingMessages = null;\n};\n\nIsopack.knownFormats = [\"unipackage-pre2\", \"isopack-1\", \"isopack-2\"];\n\n// These functions are designed to convert isopack metadata between\n// versions. They were designed to convert between unipackage-pre2 and\n// isopack-1. The differences between these formats are essentially syntactical,\n// not semantic, and occur entirely in the isopack.json file, not in the\n// individual unibuild json files. These functions are written assuming those\n// constraints, and were not actually useful in the isopack-1/isopack-2\n// transition,where most of the changes are in the unibuild level, and there's\n// actual semantic changes involved. So they are not actually used as much as\n// they were before.\nIsopack.convertOneStepForward = function (data, fromFormat) {\n  var convertedData = _.clone(data);\n  // XXX COMPAT WITH 0.9.3\n  if (fromFormat === \"unipackage-pre2\") {\n    convertedData.builds = convertedData.unibuilds;\n    delete convertedData.unibuilds;\n    return convertedData;\n  }\n  if (fromFormat === \"isopack-1\") {\n    // For now, there's no difference in this direction at the isopack level.\n    return convertedData;\n  }\n};\nIsopack.convertOneStepBackward = function (data, fromFormat) {\n  var convertedData = _.clone(data);\n  if (fromFormat === \"isopack-1\") {\n    convertedData.unibuilds = convertedData.builds;\n    convertedData.format = \"unipackage-pre2\";\n    delete convertedData.builds;\n    return convertedData;\n  }\n  if (fromFormat === \"isopack-2\") {\n    // The conversion from isopack-2 requires converting the nested\n    // unibuild data as well.  This shouldn't happen.\n    throw Error(\"Can't automatically convert backwards from isopack-2\");\n  }\n};\nIsopack.convertIsopackFormat = Profile(\n  \"Isopack.convertIsopackFormat\", function (data, fromFormat, toFormat) {\n  var fromPos = _.indexOf(Isopack.knownFormats, fromFormat);\n  var toPos = _.indexOf(Isopack.knownFormats, toFormat);\n  var step = fromPos < toPos ? 1 : -1;\n\n  if (fromPos === -1)\n    throw new Error(\"Can't convert from unknown Isopack format: \" + fromFormat);\n  if (toPos === -1)\n    throw new Error(\"Can't convert to unknown Isopack format: \" + toFormat);\n\n  while (fromPos !== toPos) {\n    if (step > 0) {\n      data = Isopack.convertOneStepForward(data, fromFormat);\n    } else {\n      data = Isopack.convertOneStepBackward(data, fromFormat);\n    }\n\n    fromPos += step;\n    fromFormat = Isopack.knownFormats[fromPos];\n  }\n\n  return data;\n});\n\n// Read the correct file from isopackDirectory and convert to current format\n// of the isopack metadata. Returns null if there is no package here.\nIsopack.readMetadataFromDirectory =\n  Profile(\"Isopack.readMetadataFromDirectory\", function (isopackDirectory) {\n  var metadata = null;\n  let originalVersion = null;\n\n  // deal with different versions of \"isopack.json\", backwards compatible\n  var isopackJsonPath = files.pathJoin(isopackDirectory, \"isopack.json\");\n  var unipackageJsonPath = files.pathJoin(isopackDirectory, \"unipackage.json\");\n\n  if (files.exists(isopackJsonPath)) {\n    var isopackJson = JSON.parse(files.readFile(isopackJsonPath));\n\n    if (isopackJson['isopack-2']) {\n      metadata = isopackJson['isopack-2'];\n      originalVersion = 'isopack-2';\n    } else if (isopackJson['isopack-1']) {\n      metadata = Isopack.convertIsopackFormat(\n        isopackJson['isopack-1'], 'isopack-1', 'isopack-2');\n      originalVersion = 'isopack-1';\n    } else {\n      // This file is from the future and no longer supports this version\n      throw new Error(\"Could not find isopack data supported any supported format (isopack-1 or isopack-2).\\n\" +\n        \"This isopack was likely built with a much newer version of Meteor.\");\n    }\n  } else if (files.exists(unipackageJsonPath)) {\n    // super old version with different file name\n    // XXX COMPAT WITH 0.9.3\n    if (files.exists(unipackageJsonPath)) {\n      metadata = JSON.parse(files.readFile(unipackageJsonPath));\n\n      metadata = Isopack.convertIsopackFormat(metadata,\n        \"unipackage-pre2\", \"isopack-2\");\n      originalVersion = 'unipackage-pre2';\n    }\n\n    if (metadata.format !== \"unipackage-pre2\") {\n      // We don't support pre-0.9.0 isopacks, but we do know enough to delete\n      // them if we find them in an isopack cache somehow (rather than crash).\n      if (metadata.format === \"unipackage-pre1\") {\n        throw new exports.OldIsopackFormatError();\n      }\n\n      throw new Error(\"Unsupported isopack format: \" +\n                      JSON.stringify(metadata.format));\n    }\n  }\n\n  return {metadata, originalVersion};\n});\n\n_.extend(Isopack.prototype, {\n  // Make a dummy (empty) package that contains nothing of interest.\n  // XXX used?\n  initEmpty: function (name) {\n    var self = this;\n    self.name = name;\n  },\n\n  // This is primarily intended to be used by the compiler. After\n  // calling this, call addUnibuild to add the unibuilds.\n  initFromOptions: function (options) {\n    var self = this;\n    self.name = options.name;\n    self.metadata = options.metadata;\n    self.version = options.version;\n    self.isTest = options.isTest;\n    self.plugins = options.plugins;\n    self.cordovaDependencies = options.cordovaDependencies;\n    self.pluginWatchSet = options.pluginWatchSet;\n    self.npmDiscards = options.npmDiscards;\n    self.includeTool = options.includeTool;\n    self.debugOnly = options.debugOnly;\n    self.prodOnly = options.prodOnly;\n    self.pluginCacheDir = options.pluginCacheDir || null;\n    self.isobuildFeatures = options.isobuildFeatures;\n  },\n\n  // Programmatically add a unibuild to this Isopack. Should only be\n  // called as part of building up a new Isopack using\n  // initFromOptions. 'options' are the options to the Unibuild\n  // constructor.\n  addUnibuild: function (options) {\n    var self = this;\n    self.unibuilds.push(new Unibuild(self, options));\n  },\n\n  setPluginProviderPackageMap: function (pluginProviderPackageMap) {\n    var self = this;\n    self.pluginProviderPackageMap = pluginProviderPackageMap;\n  },\n\n  getSourceFilesUnderSourceRoot: Profile(\n    \"Isopack#getSourceFilesUnderSourceRoot\", function (sourceRoot) {\n    var self = this;\n    var sourceFiles = {};\n    var anySourceFiles = false;\n    var addSourceFilesFromWatchSet = function (watchSet) {\n      _.each(watchSet.files, function (hash, filename) {\n        anySourceFiles = true;\n        var relativePath = files.pathRelative(sourceRoot, filename);\n        // We only want files that are actually under sourceRoot.\n        if (relativePath.substr(0, 3) === '..' + files.pathSep)\n          return;\n        sourceFiles[relativePath] = true;\n      });\n    };\n    addSourceFilesFromWatchSet(self.pluginWatchSet);\n    _.each(self.unibuilds, function (u) {\n      addSourceFilesFromWatchSet(u.watchSet);\n    });\n\n    // Were we actually built from source or loaded from an IsopackCache? If so\n    // then there should be at least one source file in some WatchSet. If not,\n    // return null.\n    if (! anySourceFiles)\n      return null;\n    return _.keys(sourceFiles);\n  }),\n\n  // An sorted array of all the architectures included in this package.\n  architectures: Profile(\"Isopack#architectures\", function () {\n    var self = this;\n    var archSet = {};\n    _.each(self.unibuilds, function (unibuild) {\n      archSet[unibuild.arch] = true;\n    });\n    _.each(self._toolArchitectures(), function (arch) {\n      archSet[arch] = true;\n    });\n    _.each(self.plugins, function (plugin, name) {\n      _.each(plugin, function (plug, arch) {\n        archSet[arch] = true;\n      });\n    });\n    var arches = _.keys(archSet).sort();\n    // Ensure that our buildArchitectures string does not look like\n    //    web+os+os.osx.x86_64\n    // This would happen if there is an 'os' unibuild but a platform-specific\n    // tool (eg, in meteor-tool).  This would confuse catalog.getBuildsForArches\n    // into thinking that it would work for Linux, since the 'os' means\n    // 'works on any Node server'.\n    if (_.any(arches, function (a) { return a.match(/^os\\./); })) {\n      arches = _.without(arches, 'os');\n    }\n    return arches;\n  }),\n\n  // A sorted plus-separated string of all the architectures included in this\n  // package.\n  buildArchitectures: function () {\n    var self = this;\n    return self.architectures().join('+');\n  },\n\n  // Returns true if we think that this isopack is platform specific (contains\n  // binary builds)\n  platformSpecific: function () {\n    var self = this;\n    return _.any(self.architectures(), function (arch) {\n      return arch.match(/^os\\./);\n    });\n  },\n\n  tarballName: function () {\n    var self = this;\n    return colonConverter.convert(self.name) + '-' + self.version;\n  },\n\n  _toolArchitectures: function () {\n    var self = this;\n    var toolArches = _.pluck(self.toolsOnDisk, 'arch');\n    self.includeTool && toolArches.push(archinfo.host());\n    return _.uniq(toolArches).sort();\n  },\n\n  // Return the unibuild of the package to use for a given target architecture\n  // (eg, 'os.linux.x86_64' or 'web'), or throw an exception if that\n  // packages can't be loaded under these circumstances.\n  getUnibuildAtArch: Profile(\"Isopack#getUnibuildAtArch\", function (\n    arch, {allowWrongPlatform} = {}) {\n    var self = this;\n\n    let chosenArch = archinfo.mostSpecificMatch(\n      arch, _.pluck(self.unibuilds, 'arch'));\n    if (! chosenArch && allowWrongPlatform && arch.match(/^os\\./)) {\n      // Special-case: we're looking for a specific server platform and it's\n      // not available. (eg, we're deploying from a Mac to Linux and are\n      // processing a local package with binary npm deps).  If we have \"allow\n      // wrong platform\" turned on, search again for the host version, which\n      // might find the Mac version.  We'll detect this case later and provide\n      // package.json instead of Mac binaries.\n      chosenArch =\n        archinfo.mostSpecificMatch(archinfo.host(), _.pluck(self.unibuilds, 'arch'));\n    }\n    if (! chosenArch) {\n      buildmessage.error(\n        (self.name || \"this app\") +\n          \" is not compatible with architecture '\" + arch + \"'\",\n        { secondary: true });\n      // recover by returning by no unibuilds\n      return null;\n    }\n    return _.findWhere(self.unibuilds, { arch: chosenArch });\n  }),\n\n  _checkPluginsInitialized: function () {\n    var self = this;\n    if (self._pluginsInitialized)\n      return;\n    throw Error(\"plugins not yet initialized?\");\n  },\n\n  // If this package has plugins, initialize them (run the startup\n  // code in them so that they register their extensions). Idempotent.\n  ensurePluginsInitialized: Profile(\"Isopack#ensurePluginsInitialized\", function () {\n    var self = this;\n\n    buildmessage.assertInJob();\n\n    if (self._pluginsInitialized)\n      return;\n\n    self.sourceProcessors.compiler = new buildPluginModule.SourceProcessorSet(\n      self.displayName(), { hardcodeJs: true, singlePackage: true });\n    self.sourceProcessors.linter = new buildPluginModule.SourceProcessorSet(\n      self.displayName(), { singlePackage: true, allowConflicts: true });\n    self.sourceProcessors.minifier = new buildPluginModule.SourceProcessorSet(\n      self.displayName(), { singlePackage: true });\n\n    _.each(self.plugins, function (pluginsByArch, name) {\n      var arch = archinfo.mostSpecificMatch(\n        archinfo.host(), _.keys(pluginsByArch));\n      if (! arch) {\n        buildmessage.error(\"package `\" + name + \"` is built for incompatible \" +\n                           \"architecture\");\n        // Recover by ignoring plugin\n        // XXX does this recovery work?\n        return;\n      }\n\n      var plugin = pluginsByArch[arch];\n      buildmessage.enterJob({\n        title: \"loading plugin `\" + name +\n          \"` from package `\" + self.name + \"`\"\n        // don't necessarily have rootPath anymore\n        // (XXX we do, if the isopack was locally built, which is\n        // the important case for debugging. it'd be nice to get this\n        // case right.)\n      }, function () {\n        // Make a new Plugin API object for this plugin.\n        var Plugin = self._makePluginApi();\n        plugin.load({ Plugin: Plugin });\n      });\n    });\n\n    // Instantiate each of the registered batch plugins.  Note that we don't\n    // do this directly in the registerCompiler (etc) call, because we want\n    // to allow people to do something like:\n    //   Plugin.registerCompiler({...}, function () { return new C; });\n    //   var C = function () {...}\n    // and so we want to wait for C to be defined.\n    _.each(self.sourceProcessors, (sourceProcessorSet) => {\n      _.each(sourceProcessorSet.allSourceProcessors, (sourceProcessor) => {\n        sourceProcessor.instantiatePlugin();\n      });\n    });\n\n    self._pluginsInitialized = true;\n  }),\n\n  _makePluginApi: function () {\n    var isopack = this;\n\n    /**\n     * @global\n     * @namespace Plugin\n     * @summary The namespace that is exposed inside build plugin files.\n     */\n    var Plugin = {\n      // 'extension' is a file extension without the separation dot\n      // (eg 'js', 'coffee', 'coffee.md')\n      //\n      // 'options' can be omitted. The only known option is 'isTemplate', which\n      // is a bit of a hack meaning \"in an app, these files should be loaded\n      // before non-templates\".\n      //\n      // 'handler' is a function that takes a single argument, a\n      // CompileStep (#CompileStep)\n\n      /**\n       * @summary Inside a build plugin source file specified in\n       * [Package.registerBuildPlugin](#Package-registerBuildPlugin),\n       * add a handler to compile files with a certain file extension.\n       * @param  {String} fileExtension The file extension that this plugin\n       * should handle, without the first dot.\n       * Examples: `\"coffee\"`, `\"coffee.md\"`.\n       * @param  {Function} handler  A function that takes one argument,\n       * a CompileStep object.\n       *\n       * Documentation for CompileStep is available [on the GitHub Wiki](https://github.com/meteor/meteor/wiki/CompileStep-API-for-Build-Plugin-Source-Handlers).\n       * @memberOf Plugin\n       * @locus Build Plugin\n       * @deprecated since 1.2\n       * XXX COMPAT WITH 1.1\n       */\n      registerSourceHandler: function (extension, options, handler) {\n        if (!handler) {\n          handler = options;\n          options = {};\n        }\n\n        // The popular package mquandalle:bower has a call to\n        // `registerSourceHandler('json', null)` for some reason, to\n        // work around some behavior of Meteor believed to be a bug. We\n        // think that new features of registerCompiler like being able\n        // to register for filenames will allow them to drop that line,\n        // but in the meantime we might as well not choke on it. (The\n        // old implementation coincidentally didn't choke.)\n        if (!handler) {\n          handler = function () {};\n        }\n\n        isopack.sourceProcessors.compiler.addLegacyHandler({\n          extension,\n          handler,\n          packageDisplayName: isopack.displayName(),\n          isTemplate: !!options.isTemplate,\n          archMatching: options.archMatching\n        });\n      },\n\n      _registerSourceProcessor: function (\n        {extensions, filenames, archMatching, isTemplate},\n        factory,\n        {sourceProcessorSet, methodName, featurePackage}) {\n        if (!isopack.featureEnabled(featurePackage)) {\n          // This error is OK because we only define 1.0.0 for each of these\n          // feature packages (in compiler.KNOWN_ISOBUILD_FEATURE_PACKAGES).\n          buildmessage.error(\n            `your package must \\`api.use('${ featurePackage }@1.0.0')\\` in ` +\n              `order for its plugins to call Plugin.${ methodName }`);\n          return;\n        }\n\n        const hasExtensions = (extensions &&\n                               extensions instanceof Array &&\n                               extensions.length > 0);\n        const hasFilenames = (filenames &&\n                              filenames instanceof Array &&\n                              filenames.length > 0);\n        if (! (hasExtensions || hasFilenames)) {\n          buildmessage.error(\"Plugin.\" + methodName + \" must specify a \" +\n                             \"non-empty array of extensions or filenames\",\n                             { useMyCaller: 3 });\n          // recover by ignoring\n          return;\n        }\n\n        // Don't let extensions or filenames try to look for directories (in the\n        // way that WatchSet expresses them).\n        if (extensions && extensions.some(e => e.endsWith('/'))) {\n          buildmessage.error(\n            `Plugin.${methodName}: extensions may not end in /`);\n          // recover by ignoring\n          return;\n        }\n        if (filenames && filenames.some(f => f.endsWith('/'))) {\n          buildmessage.error(\n            `Plugin.${methodName}: filenames may not end in /`);\n          // recover by ignoring\n          return;\n        }\n\n        if (typeof factory !== 'function') {\n          buildmessage.error(methodName + \" call must \"\n                             + \"specify a factory function\",\n                             { useMyCaller: 3 });\n          // recover by ignoring\n          return;\n        }\n\n        const sp = new buildPluginModule.SourceProcessor({\n          isopack: isopack,\n          extensions: extensions,\n          filenames: filenames,\n          archMatching: archMatching,\n          isTemplate: isTemplate,\n          factoryFunction: factory,\n          methodName: methodName\n        });\n        // This logs a buildmessage on conflicts.\n        sourceProcessorSet.addSourceProcessor(sp);\n      },\n\n      // Compilers are part of the Batch Plugins API.\n      //\n      // A compiler plugin is provided by packages to participate in\n      // the build process. A compiler can register file extensions and\n      // filenames it handles and the build tool will call the compiler's\n      // `processFilesForTarget` method once for each target (eg, the server\n      // or client program) with all of the files in the target.\n      //\n      // Compilers are run on application bundling (in bundle.js).\n      // This is different from the legacy registerSourceHandler API,\n      // which runs on a single file at a time when a *package* is built.\n      // Published Isopack packages contain the original sources of\n      // files handled by registerCompiler, not the generated output,\n      // so compilers can be involved in the very end, when the app is bundled\n      // (not in package publish time).  (Note that this requires a new\n      // Isopack format, 'isopack-2'; versions of packages published with new\n      // compilers cannot be used with previous releases of Meteor, but\n      // Version Solver knows this and will select an older compatible\n      // version if possible.\n      //\n      // Unlike the legacy API called \"source handlers\" (deprecated in\n      // Meteor 1.2), compiler plugins can handle all files for the target,\n      // making independent decisions about caching and dependencies resolution.\n      //\n      // The factory function must return an instance of a compiler.\n      //\n      // Note: It's important to ensure that all plugins that want to call\n      // plugin compiler use the isobuild:compiler-plugin fake package, so that\n      // Version Solver will not let you use registerCompiler plugins with old\n      // versions of the tool.\n\n      /**\n       * @summary Inside a build plugin source file specified in\n       * [Package.registerBuildPlugin](#Package-registerBuildPlugin),\n       * add a compiler that will handle files with certain extensions or\n       * filenames.\n       * @param {Object} options\n       * @param {String[]} options.extensions The file extensions that this\n       * plugin should handle, without the first dot.\n       * Examples: `[\"coffee\", \"coffee.md\"]`.\n       * @param {String[]} options.filenames The list of filenames\n       * that this plugin should handle. Examples: `[\"config.json\"]`.\n       * @param {Function} factory A function that returns an instance\n       * of a compiler class.\n       *\n       * More detailed documentation for build plugins is available [on the GitHub Wiki](https://github.com/meteor/meteor/wiki/Build-Plugins-API).\n       * @memberOf Plugin\n       * @locus Build Plugin\n       */\n      registerCompiler: function (options, factory) {\n        Plugin._registerSourceProcessor(options || {}, factory, {\n          sourceProcessorSet: isopack.sourceProcessors.compiler,\n          methodName: \"registerCompiler\",\n          featurePackage: \"isobuild:compiler-plugin\"\n        });\n      },\n\n      // Linters are part of the Batch Plugin API.\n      //\n      // A linter plugin provides a Linter instance. The linter is\n      // given a batch of source files for the target according to\n      // linter's declared file extensions and filenames (e.g.: '*.js',\n      // '.jshintrc').\n      //\n      // Linters don't output any files. They can only raise an error\n      // message on one of the source files to force the build tool to\n      // print a linting message.\n      //\n      // The factory function must return an instance of the linter.\n      // The linter must have the `processFilesForPackage` method that\n      // has two arguments:\n      // - inputFiles - LinterFile - sources instances\n      // - options - Object\n      //   - globals - a list of strings - global variables that can be\n      //     used in the target's scope as they are dependencies of the\n      //     package or the app. e.g.: \"Minimongo\" or \"Webapp\".\n      //\n      // Unlike compilers and minifiers, linters run on one package\n      // at a time.  Linters are run by `meteor run`, `meteor publish`,\n      // and `meteor lint`.\n\n      /**\n       * @summary Inside a build plugin source file specified in\n       * [Package.registerBuildPlugin](#Package-registerBuildPlugin),\n       * add a linter that will handle files with certain extensions or\n       * filenames.\n       * @param {Object} options\n       * @param {String[]} options.extensions The file extensions that this\n       * plugin should handle, without the first dot.\n       * Examples: `[\"js\", \"es6\", \"jsx\"]`.\n       * @param {Function} factory A function that returns an instance\n       * of a linter class.\n       *\n       * More detailed documentation for build plugins is available [on the GitHub Wiki](https://github.com/meteor/meteor/wiki/Build-Plugins-API).\n       * @memberOf Plugin\n       * @locus Build Plugin\n       */\n      registerLinter: function (options, factory) {\n        Plugin._registerSourceProcessor(options || {}, factory, {\n          sourceProcessorSet: isopack.sourceProcessors.linter,\n          methodName: \"registerLinter\",\n          featurePackage: \"isobuild:linter-plugin\"\n        });\n      },\n\n      // Minifiers are part of the Batch Plugin API.\n      //\n      // The minifiers are applied in the very end of the bundling\n      // process, after the linters and compilers. Unlike linters and\n      // compilers, minifiers are given the output of compilers and not\n      // the source files the application developer supplied.\n      //\n      // The minifier plugins can fill into 2 types of minifiers: CSS or JS.\n      // When the minifier is added to an app, it is used during \"bundling\" to\n      // compress the app code and each package's code separately.\n      // Only minifier packages directly used by an app (or implied by a package\n      // directly used by the app) are active: using a minifer's package in\n      // another package does nothing.\n      //\n      // So far, the minifiers are only run on client targets such as\n      // web.browser and web.cordova.\n      //\n      // The factory function must return an instance of a\n      // minifier. The method `processFilesForBundle` is passed a list of\n      // files, possibly a linked file per target (for JavaScript files).\n      //\n      // - files - processed files to minify\n      // - options - Object\n      //   - minifyMode - string - 'development' or 'production', based\n      //     on the bundling mode\n\n      /**\n       * @summary Inside a build plugin source file specified in\n       * [Package.registerBuildPlugin](#Package-registerBuildPlugin),\n       * add a linter that will handle files with certain extensions or\n       * filenames.\n       * @param {Object} options\n       * @param {String[]} options.extensions The file extensions that this\n       * plugin should handle, without the first dot. Can only be \"js\" or \"css\".\n       * Examples: `[\"js\", \"css\"]`.\n       * @param {String[]} options.filenames The list of filenames\n       * that this plugin should handle. Examples: `[\"config.json\"]`.\n       * @param {Function} factory A function that returns an instance\n       * of a minifier class.\n       *\n       * More detailed documentation for build plugins is available [on the GitHub Wiki](https://github.com/meteor/meteor/wiki/Build-Plugins-API).\n       * @memberOf Plugin\n       * @locus Build Plugin\n       */\n      registerMinifier: function (options, factory) {\n        var badUsedExtension = _.find(options.extensions, function (ext) {\n          return ! _.contains(['js', 'css'], ext);\n        });\n\n        if (badUsedExtension !== undefined) {\n          buildmessage.error(badUsedExtension + ': Minifiers are only allowed to register \"css\" or \"js\" extensions.');\n          return;\n        }\n\n        if (options.filenames) {\n          buildmessage.error(\"Plugin.registerMinifier does not accept `filenames`\");\n          return;\n        }\n\n        Plugin._registerSourceProcessor(options || {}, factory, {\n          sourceProcessorSet: isopack.sourceProcessors.minifier,\n          methodName: \"registerMinifier\",\n          featurePackage: \"isobuild:minifier-plugin\"\n        });\n      },\n\n      nudge: function () {\n        Console.nudge(true);\n      },\n\n      convertToOSPath: files.convertToOSPath,\n      convertToStandardPath: files.convertToStandardPath,\n      path: {\n        join: files.pathJoin,\n        normalize: files.pathNormalize,\n        relative: files.pathRelative,\n        resolve: files.pathResolve,\n        dirname: files.pathDirname,\n        basename: files.pathBasename,\n        extname: files.pathExtname,\n        sep: files.pathSep\n      },\n      fs: files.fsFixPath\n    };\n    return Plugin;\n  },\n\n  // Load a Isopack on disk.\n  //\n  // options:\n  // - isopackBuildInfoJson: parsed isopack-buildinfo.json object,\n  //   if loading from an IsopackCache.\n  initFromPath: Profile(\n    \"Isopack#initFromPath\", function (name, dir, options) {\n    var self = this;\n    options = _.clone(options || {});\n    options.firstIsopack = true;\n\n    if (options.pluginCacheDir) {\n      self.pluginCacheDir = options.pluginCacheDir;\n    }\n\n    return self._loadUnibuildsFromPath(name, dir, options);\n  }),\n\n  _loadUnibuildsFromPath: function (name, dir, options) {\n    var self = this;\n    options = options || {};\n\n    // In the tropohouse, isopack paths are symlinks (which can be updated if\n    // more unibuilds are merged in). For any given call to\n    // _loadUnibuildsFromPath, let's ensure we see a consistent isopack by\n    // realpath'ing dir.\n    dir = files.realpath(dir);\n\n    var {metadata: mainJson} = Isopack.readMetadataFromDirectory(dir);\n    if (! mainJson) {\n      throw new Error(\"No metadata files found for isopack at: \" + dir);\n    }\n\n    // isopacks didn't used to know their name, but they should.\n    if (_.has(mainJson, 'name') && name !== mainJson.name) {\n      throw new Error(\"isopack \" + name + \" thinks its name is \" +\n                      mainJson.name);\n    }\n\n    // If we're loading from an IsopackCache, we need to load the WatchSets\n    // which will be used by the bundler.  (builtBy is only used by\n    // IsopackCache._checkUpToDate. pluginProviderPackageMap will actually be\n    // set by IsopackCache afterwards, because it has access to an appropriate\n    // PackageMap which can be subset to create a new PackageMap object.)\n    var unibuildWatchSets = {};\n    if (options.isopackBuildInfoJson) {\n      if (! options.firstIsopack)\n        throw Error(\"can't merge isopacks with buildinfo\");\n\n      // XXX should comprehensively sanitize (eg, typecheck) everything\n      // read from json files\n\n      // Read the watch sets for each unibuild\n      _.each(\n        options.isopackBuildInfoJson.unibuildDependencies,\n        function (watchSetJSON, unibuildTag) {\n          unibuildWatchSets[unibuildTag] =\n            watch.WatchSet.fromJSON(watchSetJSON);\n        });\n\n      // Read pluginWatchSet. (In the multi-sub-isopack case, these are\n      // guaranteed to be trivial (since we check that there's no\n      // isopackBuildInfoJson), so no need to merge.)\n      self.pluginWatchSet = watch.WatchSet.fromJSON(\n        options.isopackBuildInfoJson.pluginDependencies);\n    }\n\n    // If we are loading multiple isopacks, only take this stuff from the\n    // first one.\n    if (options.firstIsopack) {\n      self.name = name;\n      self.metadata = {\n        summary: mainJson.summary\n      };\n      self.version = mainJson.version;\n      self.isTest = mainJson.isTest;\n      self.debugOnly = !!mainJson.debugOnly;\n      self.prodOnly = !!mainJson.prodOnly;\n    }\n    _.each(mainJson.plugins, function (pluginMeta) {\n      rejectBadPath(pluginMeta.path);\n\n      var plugin = bundler.readJsImage(files.pathJoin(dir, pluginMeta.path));\n\n      if (!_.has(self.plugins, pluginMeta.name)) {\n        self.plugins[pluginMeta.name] = {};\n      }\n      // If we already loaded a plugin of this name/arch, just ignore this one.\n      if (!_.has(self.plugins[pluginMeta.name], plugin.arch)) {\n        self.plugins[pluginMeta.name][plugin.arch] = plugin;\n      }\n    });\n    self.pluginsBuilt = true;\n    _.each(mainJson.builds, function (unibuildMeta) {\n      // aggressively sanitize path (don't let it escape to parent\n      // directory)\n      rejectBadPath(unibuildMeta.path);\n\n      // Skip unibuilds we already have.\n      var alreadyHaveUnibuild = _.find(self.unibuilds, function (unibuild) {\n        return unibuild.arch === unibuildMeta.arch;\n      });\n      if (alreadyHaveUnibuild)\n        return;\n\n      var unibuildJson = JSON.parse(\n        files.readFile(files.pathJoin(dir, unibuildMeta.path)));\n\n      var unibuildBasePath =\n        files.pathDirname(files.pathJoin(dir, unibuildMeta.path));\n\n      if (unibuildJson.format !== \"unipackage-unibuild-pre1\" &&\n          unibuildJson.format !== \"isopack-2-unibuild\") {\n        throw new Error(\"Unsupported isopack unibuild format: \" +\n                        JSON.stringify(unibuildJson.format));\n      }\n\n      // Is this unibuild the legacy pre-\"compiler plugin\" format which contains\n      // \"prelink\" resources of pre-processed JS files (as well as the\n      // \"packageVariables\" field) instead of individual \"source\" resources (and\n      // a \"declaredExports\" field)?\n      var unibuildHasPrelink =\n            unibuildJson.format === \"unipackage-unibuild-pre1\";\n\n      var nodeModulesPath = null;\n      if (unibuildJson.node_modules) {\n        rejectBadPath(unibuildJson.node_modules);\n        nodeModulesPath =\n          files.pathJoin(unibuildBasePath, unibuildJson.node_modules);\n      }\n\n      var resources = [];\n\n      _.each(unibuildJson.resources, function (resource) {\n        rejectBadPath(resource.file);\n        var data = files.readBufferWithLengthAndOffset(\n          files.pathJoin(unibuildBasePath, resource.file),\n          resource.length, resource.offset);\n\n        if (resource.type === \"prelink\") {\n          if (! unibuildHasPrelink) {\n            throw Error(\"Unexpected prelink resource in \" +\n                        unibuildJson.format + \" at \" + dir);\n          }\n          // We found a \"prelink\" resource, because we're processing a package\n          // published with an older version of Meteor which did not create\n          // isopack-2 isopacks and which always preprocessed and linked all JS\n          // files instead of leaving that until bundle time.  Let's pretend it\n          // was just a single js source file, but leave a \"legacyPrelink\" field\n          // on it so we can not re-link that part (and not re-analyze for\n          // assigned variables).\n          var prelinkResource = {\n            type: \"source\",\n            extension: \"js\",\n            data: data,\n            path: resource.servePath,\n            // It's a shame to have to calculate the hash here instead of having\n            // it on disk, but this only runs for legacy packages anyway.\n            hash: watch.sha1(data),\n            // Legacy prelink files definitely don't have a source processor!\n            // They were created by an Isobuild that didn't even know about\n            // source processors!\n            usesDefaultSourceProcessor: true,\n            legacyPrelink: {\n              packageVariables: unibuildJson.packageVariables || []\n            }\n          };\n          if (resource.sourceMap) {\n            rejectBadPath(resource.sourceMap);\n            prelinkResource.legacyPrelink.sourceMap = files.readFile(\n              files.pathJoin(unibuildBasePath, resource.sourceMap), 'utf8');\n          }\n          resources.push(prelinkResource);\n        } else if (resource.type === \"source\") {\n          resources.push({\n            type: \"source\",\n            extension: resource.extension,\n            usesDefaultSourceProcessor:\n              !! resource.usesDefaultSourceProcessor,\n            data: data,\n            path: resource.path,\n            hash: resource.hash,\n            fileOptions: resource.fileOptions\n          });\n        } else if (_.contains([\"head\", \"body\", \"css\", \"js\", \"asset\"],\n                              resource.type)) {\n          resources.push({\n            type: resource.type,\n            data: data,\n            servePath: resource.servePath || undefined,\n            path: resource.path || undefined\n          });\n        } else\n          throw new Error(\"bad resource type in isopack: \" +\n                          JSON.stringify(resource.type));\n      });\n\n      var declaredExports;\n      if (unibuildHasPrelink) {\n        // Legacy unibuild; it stores packageVariables and says some of them\n        // are exports.\n        declaredExports = [];\n        _.each(unibuildJson.packageVariables, function (pv) {\n          if (pv.export) {\n            declaredExports.push({\n              name: pv.name,\n              testOnly: pv.export === 'tests'\n            });\n          }\n        });\n      } else {\n        declaredExports = unibuildJson.declaredExports || [];\n      }\n\n      unibuildJson.uses && unibuildJson.uses.forEach((use) => {\n        if (!use.weak && compiler.isIsobuildFeaturePackage(use.package) &&\n            self.isobuildFeatures.indexOf(use.package) === -1) {\n          self.isobuildFeatures.push(use.package);\n        }\n      });\n\n      self.unibuilds.push(new Unibuild(self, {\n        // At some point we stopped writing 'kind's to the metadata file, so\n        // default to main.\n        kind: unibuildMeta.kind || 'main',\n        arch: unibuildMeta.arch,\n        uses: unibuildJson.uses,\n        implies: unibuildJson.implies,\n        watchSet: unibuildWatchSets[unibuildMeta.path],\n        nodeModulesPath: nodeModulesPath,\n        declaredExports: declaredExports,\n        resources: resources\n      }));\n    });\n\n    self.cordovaDependencies = mainJson.cordovaDependencies || null;\n\n    _.each(mainJson.tools, function (toolMeta) {\n      toolMeta.rootDir = dir;\n      // XXX check for overlap\n      self.toolsOnDisk.push(toolMeta);\n    });\n\n    return true;\n  },\n\n  hasCordovaUnibuild: function () {\n    var self = this;\n    return _.any(self.unibuilds, function (unibuild) {\n      return unibuild.arch === 'web.cordova';\n    });\n  },\n\n  canWriteLegacyBuilds() {\n    function isResourceSafeForLegacyBuilds(resource) {\n      // The only new kind of resource is \"source\"; other resources are\n      // unchanged from legacy builds.\n      if (resource.type !== \"source\") {\n        return true;\n      }\n\n      // CSS is safe for legacy builds. (We assume everyone is using the\n      // SourceProcessor from the 'meteor' package.)\n      if (resource.extension === \"css\") {\n        return true;\n      }\n\n      // If this JS resource uses hard-coded support for plain old ES5, then it\n      // is safe to write as part of a legacy Isopack.\n      if (resource.extension === \"js\" && resource.usesDefaultSourceProcessor) {\n        return true;\n      }\n\n      // Nope, this package cannot be represented as an isopack-1 Isopack\n      // because it uses a file implemented by registerCompiler other than the\n      // very basic JS and CSS types.\n      return false;\n    }\n\n    return this.unibuilds.every(\n      unibuild => unibuild.resources.every(isResourceSafeForLegacyBuilds)\n    );\n  },\n\n  // options:\n  //\n  // - includeIsopackBuildInfo: If set, write an isopack-buildinfo.json file.\n  // - includePreCompilerPluginIsopackVersions: By default, saveToPath only\n  //   creates an isopack of format 'isopack-2', with unibuilds of format\n  //   'isopack-2-unibuild'.  These isopacks may contain \"source\" resources,\n  //   which are processed at *bundle* time by compiler plugins.  They cannot be\n  //   properly processed by older tools.  If this flag is set, saveToPath also\n  //   tries to save data for older formats (isopack-1 and unipackage-pre2),\n  //   converting JS and CSS \"source\" resources into \"prelink\" and \"css\"\n  //   resources.  This is not possible if there are \"source\" resources other\n  //   than JS or CSS; however, such packages must indirectly depend on the\n  //   \"isobuild:compiler-plugin\" pseudo-package which is not compatible with\n  //   older releases.  For packages that can't be converted to the older\n  //   format, this function silently only saves the newer format.  (The point\n  //   of this flag is allow us to optimize cases that never need to write the\n  //   older format, such as the per-app isopack cache.)\n  saveToPath: Profile(\"Isopack#saveToPath\", function (outputDir, options) {\n    var self = this;\n    var outputPath = outputDir;\n    options = options || {};\n\n    var builder = new Builder({ outputPath: outputPath });\n    try {\n      var mainJson = {\n        name: self.name,\n        summary: self.metadata.summary,\n        version: self.version,\n        isTest: self.isTest,\n        builds: [],\n        plugins: []\n      };\n\n      if (self.debugOnly) {\n        mainJson.debugOnly = true;\n      }\n      if (self.prodOnly) {\n        mainJson.prodOnly = true;\n      }\n      if (! _.isEmpty(self.cordovaDependencies)) {\n        mainJson.cordovaDependencies = self.cordovaDependencies;\n      }\n\n      const writeLegacyBuilds = (\n        options.includePreCompilerPluginIsopackVersions\n          && self.canWriteLegacyBuilds());\n\n      var isopackBuildInfoJson = null;\n      if (options.includeIsopackBuildInfo) {\n        isopackBuildInfoJson = {\n          builtBy: compiler.BUILT_BY,\n          unibuildDependencies: {},\n          // pluginDependencies defines a WatchSet that any package that could\n          // use this package as a plugin needs to watch. So it always contains\n          // our package.js (because modifications to package.js could add a new\n          // plugin), as well as any files making up plugins in our package.\n          pluginDependencies: self.pluginWatchSet.toJSON(),\n          pluginProviderPackageMap: self.pluginProviderPackageMap.toJSON(),\n          includeCordovaUnibuild: self.hasCordovaUnibuild()\n        };\n      }\n\n      // XXX COMPAT WITH 0.9.3\n      builder.reserve(\"unipackage.json\");\n\n      builder.reserve(\"isopack.json\");\n      // Reserve this even if includeIsopackBuildInfo is not set, to ensure\n      // nothing else writes it somehow.\n      builder.reserve(\"isopack-buildinfo.json\");\n\n      builder.reserve(\"head\");\n      builder.reserve(\"body\");\n\n      // Map from absolute path to npm directory in the unibuild, to the\n      // generated filename in the isopack we're writing.  Multiple builds\n      // can use the same npm modules (though maybe not any more, since tests\n      // have been separated?), but also there can be different sets of\n      // directories as well (eg, for a isopack merged with from multiple\n      // isopacks with _loadUnibuildsFromPath).\n      var npmDirectories = {};\n\n      // Pre-linker versions of Meteor expect all packages in the warehouse to\n      // contain a file called \"package.js\"; they use this as part of deciding\n      // whether or not they need to download a new package. Because packages\n      // are downloaded by the *existing* version of the tools, we need to\n      // include this file until we're comfortable breaking \"meteor update\" from\n      // 0.6.4.  (Specifically, warehouse.packageExistsInWarehouse used to check\n      // to see if package.js exists instead of just looking for the package\n      // directory.)\n      // XXX Remove this once we can.\n      builder.write(\"package.js\", {\n        data: new Buffer(\n          (\"// This file is included for compatibility with the Meteor \" +\n           \"0.6.4 package downloader.\\n\"),\n          \"utf8\")\n      });\n\n      var unibuildInfos = [];\n\n      // Unibuilds\n      _.each(self.unibuilds, function (unibuild) {\n        // Make up a filename for this unibuild\n        var baseUnibuildName = unibuild.arch;\n        var unibuildDir =\n          builder.generateFilename(baseUnibuildName, { directory: true });\n        var unibuildJsonFile =\n          builder.generateFilename(baseUnibuildName + \".json\");\n        mainJson.builds.push({\n          kind: unibuild.kind,\n          arch: unibuild.arch,\n          path: unibuildJsonFile\n        });\n\n        var jsResourcesForLegacyPrelink = [];\n\n        // Save unibuild dependencies. Keyed by the json path rather than thinking\n        // too hard about how to encode pair (name, arch).\n        if (isopackBuildInfoJson) {\n          isopackBuildInfoJson.unibuildDependencies[unibuildJsonFile] =\n            unibuild.watchSet.toJSON();\n        }\n\n        // Figure out where the npm dependencies go.\n        var nodeModulesPath = undefined;\n        var needToCopyNodeModules = false;\n        if (unibuild.nodeModulesPath) {\n          if (_.has(npmDirectories, unibuild.nodeModulesPath)) {\n            // We already have this npm directory from another unibuild.\n            nodeModulesPath = npmDirectories[unibuild.nodeModulesPath];\n          } else {\n            // It's important not to put node_modules at the top level of the\n            // isopack, so that it is not visible from within plugins.\n            nodeModulesPath = npmDirectories[unibuild.nodeModulesPath] =\n              builder.generateFilename(\"npm/node_modules\", {directory: true});\n            needToCopyNodeModules = true;\n          }\n        }\n\n        // Construct unibuild metadata\n        var unibuildJson = {\n          format: \"isopack-2-unibuild\",\n          declaredExports: unibuild.declaredExports,\n          uses: _.map(unibuild.uses, function (u) {\n            return {\n              'package': u.package,\n              // For cosmetic value, leave false values for these options out of\n              // the JSON file.\n              constraint: u.constraint || undefined,\n              unordered: u.unordered || undefined,\n              weak: u.weak || undefined\n            };\n          }),\n          implies: (_.isEmpty(unibuild.implies) ? undefined : unibuild.implies),\n          node_modules: nodeModulesPath,\n          resources: []\n        };\n\n        // Output 'head', 'body' resources nicely\n        var concat = { head: [], body: [] };\n        var offset = { head: 0, body: 0 };\n        _.each(unibuild.resources, function (resource) {\n          if (_.contains([\"head\", \"body\"], resource.type)) {\n            if (concat[resource.type].length) {\n              concat[resource.type].push(new Buffer(\"\\n\", \"utf8\"));\n              offset[resource.type]++;\n            }\n            if (! (resource.data instanceof Buffer))\n              throw new Error(\"Resource data must be a Buffer\");\n            unibuildJson.resources.push({\n              type: resource.type,\n              file: files.pathJoin(unibuildDir, resource.type),\n              length: resource.data.length,\n              offset: offset[resource.type]\n            });\n            concat[resource.type].push(resource.data);\n            offset[resource.type] += resource.data.length;\n          }\n        });\n        _.each(concat, function (parts, type) {\n          if (parts.length) {\n            builder.write(files.pathJoin(unibuildDir, type), {\n              data: Buffer.concat(concat[type], offset[type])\n            });\n          }\n        });\n\n        // Output other resources each to their own file\n        _.each(unibuild.resources, function (resource) {\n          if (_.contains([\"head\", \"body\"], resource.type))\n            return; // already did this one\n\n          // If we're going to write a legacy prelink file later, track the\n          // original form of the resource object (with the source in a Buffer,\n          // etc) instead of the later version.  #HardcodeJs\n          if (writeLegacyBuilds &&\n              resource.type === \"source\" &&\n              resource.extension == \"js\") {\n            jsResourcesForLegacyPrelink.push({\n              data: resource.data,\n              hash: resource.hash,\n              servePath: unibuild.pkg._getServePath(resource.path),\n              bare: resource.fileOptions && resource.fileOptions.bare,\n              sourceMap: resource.sourceMap,\n              // If this file was actually read from a legacy isopack and is\n              // itself prelinked, this will be an object with some metadata\n              // about it, and we can skip re-running prelink later.\n              legacyPrelink: resource.legacyPrelink\n            });\n          }\n\n          unibuildJson.resources.push({\n            type: resource.type,\n            extension: resource.extension,\n            file: builder.writeToGeneratedFilename(\n              files.pathJoin(unibuildDir,\n                             resource.servePath || resource.path),\n              { data: resource.data }),\n            length: resource.data.length,\n            offset: 0,\n            usesDefaultSourceProcessor:\n              resource.usesDefaultSourceProcessor || undefined,\n            servePath: resource.servePath || undefined,\n            path: resource.path || undefined,\n            hash: resource.hash || undefined,\n            fileOptions: resource.fileOptions || undefined\n          });\n        });\n\n        // If unibuild has included node_modules, copy them in\n        if (needToCopyNodeModules) {\n          builder.copyDirectory({\n            from: unibuild.nodeModulesPath,\n            to: nodeModulesPath,\n            npmDiscards: self.npmDiscards,\n            symlink: false\n          });\n        }\n\n        // Control file for unibuild\n        builder.writeJson(unibuildJsonFile, unibuildJson);\n        unibuildInfos.push({\n          unibuild: unibuild,\n          unibuildJson: unibuildJson,\n          jsResourcesForLegacyPrelink: jsResourcesForLegacyPrelink\n        });\n      });\n\n      // Plugins\n      _.each(self.plugins, function (pluginsByArch, name) {\n        _.each(pluginsByArch, function (plugin) {\n          // XXX the name of the plugin doesn't typically contain a colon, but\n          // escape it just in case.\n          var pluginDir = builder.generateFilename(\n            'plugin.' + colonConverter.convert(name) + '.' + plugin.arch,\n            { directory: true });\n          var pluginBuild = plugin.write(builder.enter(pluginDir));\n          var pluginEntry = {\n            name: name,\n            arch: plugin.arch,\n            path: files.pathJoin(pluginDir, pluginBuild.controlFile)\n          };\n          mainJson.plugins.push(pluginEntry);\n        });\n      });\n\n      // Tools\n      // First, are we supposed to include our own source as a tool?\n      if (self.includeTool) {\n        var toolsJson = self._writeTool(builder);\n        mainJson.tools = toolsJson;\n      }\n      // Next, what about other tools we may be merging from other isopacks?\n      // XXX check for overlap\n      _.each(self.toolsOnDisk, function (toolMeta) {\n        toolMeta = _.clone(toolMeta);\n        var rootDir = toolMeta.rootDir;\n        delete toolMeta.rootDir;\n        builder.copyDirectory({\n          from: files.pathJoin(rootDir, toolMeta.path),\n          to: toolMeta.path,\n          symlink: false\n        });\n        if (!mainJson.tools) {\n          mainJson.tools = [];\n        }\n        mainJson.tools.push(toolMeta);\n      });\n\n      var mainLegacyJson = null;\n      if (writeLegacyBuilds) {\n        mainLegacyJson = _.clone(mainJson);\n        mainLegacyJson.builds = [];\n\n        _.each(unibuildInfos, function (unibuildInfo) {\n          var unibuild = unibuildInfo.unibuild;\n          var unibuildJson = unibuildInfo.unibuildJson;\n          var jsResourcesForLegacyPrelink =\n                unibuildInfo.jsResourcesForLegacyPrelink;\n          var legacyFilename = builder.generateFilename(\n            unibuild.arch + '-legacy.json');\n          var legacyDir = unibuild.arch + '-legacy';\n          mainLegacyJson.builds.push({\n            kind: unibuild.kind,\n            arch: unibuild.arch,\n            path: legacyFilename\n          });\n\n          unibuildJson.format = 'unipackage-unibuild-pre1';\n          var newResources = [];\n          _.each(unibuildJson.resources, function (resource) {\n            if (resource.type !== 'source') {\n              newResources.push(resource);\n            } else if (resource.extension === 'css') {\n              // Convert this resource from a new-style \"source\" to an\n              // old-style \"css\".\n              newResources.push({\n                type: 'css',\n                file: resource.file,\n                length: resource.length,\n                offset: resource.offset,\n                servePath: self._getServePath(resource.path)\n              });\n            } else if (resource.extension === 'js') {\n              // Skip; we saved this in jsResourcesForLegacyPrelink above\n              // already, in the format that linker.prelink understands.\n            } else {\n              throw Error(\n                \"shouldn't write legacy builds for non-JS/CSS source \"\n                  + JSON.stringify(resource));\n            }\n          });\n\n          var prelinkFile, prelinkData, packageVariables;\n          if (jsResourcesForLegacyPrelink.length === 1 &&\n              jsResourcesForLegacyPrelink[0].legacyPrelink) {\n            // Aha!  This isopack was actually a legacy isopack in the first\n            // place! So this source file is already the output of prelink,\n            // and we don't need to reprocess it.\n            prelinkFile = jsResourcesForLegacyPrelink[0];\n            // XXX It's weird that the type of object going in and out of\n            // linker.prelink is different (so that this prelinkData\n            // assignment differs from that below), ah well.\n            prelinkData = prelinkFile.data;\n            packageVariables =\n              jsResourcesForLegacyPrelink[0].legacyPrelink.packageVariables;\n          } else {\n            // Determine captured variables, legacy way. First, start with the\n            // exports. We'll add the package variables after running prelink.\n            packageVariables = [];\n            var packageVariableNames = {};\n            _.each(unibuild.declaredExports, function (symbol) {\n              if (_.has(packageVariableNames, symbol.name))\n                return;\n              packageVariables.push({\n                name: symbol.name,\n                export: symbol.testOnly? \"tests\" : true\n              });\n              packageVariableNames[symbol.name] = true;\n            });\n\n            if (jsResourcesForLegacyPrelink.length) {\n              // Not originally legacy; let's run prelink to make it legacy.\n              var results = linker.prelink({\n                inputFiles: jsResourcesForLegacyPrelink,\n                // I was confused about this, so I am leaving a comment -- the\n                // combinedServePath is either [pkgname].js or [pluginName]:plugin.js.\n                // XXX: If we change this, we can get rid of source arch names!\n                combinedServePath: (\n                  \"/packages/\" + colonConverter.convert(\n                    unibuild.pkg.name +\n                      (unibuild.kind === \"main\" ? \"\" : (\":\" + unibuild.kind)) +\n                      \".js\")),\n                name: unibuild.pkg.name\n              });\n              if (results.files.length !== 1) {\n                throw Error(\"prelink should return 1 file, not \" +\n                            results.files.length);\n              }\n              prelinkFile = results.files[0];\n              prelinkData = new Buffer(prelinkFile.source, 'utf8');\n\n              _.each(results.assignedVariables, function (name) {\n                if (_.has(packageVariableNames, name))\n                  return;\n                packageVariables.push({\n                  name: name\n                });\n                packageVariableNames[name] = true;\n              });\n            }\n          }\n\n          if (prelinkFile && prelinkData) {\n            var prelinkResource = {\n              type: 'prelink',\n              file: builder.writeToGeneratedFilename(\n                files.pathJoin(legacyDir, prelinkFile.servePath),\n                { data: prelinkData }),\n              length: prelinkData.length,\n              offset: 0,\n              servePath: prelinkFile.servePath || undefined\n            };\n            if (prelinkFile.sourceMap) {\n              // Write the source map.\n              prelinkResource.sourceMap = builder.writeToGeneratedFilename(\n                files.pathJoin(legacyDir, prelinkFile.servePath + '.map'),\n                { data: new Buffer(prelinkFile.sourceMap, 'utf8') }\n              );\n            }\n            newResources.push(prelinkResource);\n          }\n\n          if (packageVariables.length) {\n            unibuildJson.packageVariables = packageVariables;\n          }\n\n          unibuildJson.resources = newResources;\n          delete unibuildJson.declaredExports;\n          builder.writeJson(legacyFilename, unibuildJson);\n        });\n\n        // old unipackage.json format/filename.  no point to save this if\n        // we can't even support isopack-1.\n        // XXX COMPAT WITH 0.9.3\n        builder.writeJson(\n          \"unipackage.json\",\n          Isopack.convertIsopackFormat(\n            // Note that mainLegacyJson is isopack-1 (has no \"source\" resources)\n            // rather than isopack-2.\n            mainLegacyJson, \"isopack-1\", \"unipackage-pre2\"));\n      }\n\n      var isopackJson = {};\n      isopackJson['isopack-2'] = mainJson;\n      if (writeLegacyBuilds) {\n        isopackJson['isopack-1'] = mainLegacyJson;\n      }\n\n      // writes one file with all of the new formats, so that it is possible\n      // to invent a new format and have old versions of meteor still read the\n      // old format\n      //\n      // This looks something like:\n      // {\n      //   isopack-1: {... data ...},\n      //   isopack-2: {... data ...}\n      // }\n      builder.writeJson(\"isopack.json\", isopackJson);\n\n      if (isopackBuildInfoJson) {\n        builder.writeJson(\"isopack-buildinfo.json\", isopackBuildInfoJson);\n      }\n      builder.complete();\n    } catch (e) {\n      builder.abort();\n      throw e;\n    }\n  }),\n\n  _writeTool: Profile(\"Isopack#_writeTool\", function (builder) {\n    var self = this;\n\n    var pathsToCopy = utils.runGitInCheckout(\n      'ls-tree',\n      '-r',\n      '--name-only',\n      '--full-tree',\n      'HEAD',\n      // The actual trees to copy!\n      'tools', 'examples', 'LICENSE.txt', 'LICENSES',\n      'meteor', 'meteor.bat', 'scripts/admin/launch-meteor',\n      'packages/package-version-parser/package-version-parser.js',\n      'packages/meteor/flush-buffers-on-exit-in-windows.js');\n\n    // Trim blank line and unnecessary examples.\n    pathsToCopy = _.filter(pathsToCopy.split('\\n'), function (f) {\n      return f && !f.match(/^examples\\/other/) &&\n        !f.match(/^examples\\/unfinished/);\n    });\n\n    // Regexes matching paths to transpile using babel\n    var transpileRegexes = [\n      /^tools\\/[^\\/]+\\.js$/, // General tools files\n      /^tools\\/isobuild\\/[^\\/]+\\.js$/, // Isobuild files\n      /^tools\\/cli\\/[^\\/]+\\.js$/, // CLI files\n      /^tools\\/tool-env\\/[^\\/]+\\.js$/, // Tool initiation and clean up\n      /^tools\\/runners\\/[^\\/]+\\.js$/, // Parts of tool process\n      /^tools\\/packaging\\/[^\\/]+\\.js$/,\n      /^tools\\/packaging\\/catalog\\/[^\\/]+\\.js$/,\n      /^tools\\/utils\\/[^\\/]+\\.js$/,\n      /^tools\\/fs\\/[^\\/]+\\.js$/,\n      /^tools\\/meteor-services\\/[^\\/]+\\.js$/,\n      /^tools\\/tool-testing\\/[^\\/]+\\.js$/,\n      /^tools\\/console\\/[^\\/]+\\.js$/,\n      /^tools\\/cordova\\/[^\\/]+\\.js$/,\n      // We don't support running self-test from an install anymore\n    ];\n\n    // Split pathsToCopy into two arrays - one of files that should be copied\n    // directly, and one of files that should be transpiled with Babel\n    var pathsToTranspile = [];\n    var pathsToCopyStraight = [];\n    pathsToCopy.forEach((path) => {\n      var shouldTranspile =\n        _.some(transpileRegexes, (regex) => path.match(regex));\n\n      if (shouldTranspile) {\n        pathsToTranspile.push(path);\n      } else {\n        pathsToCopyStraight.push(path);\n      }\n    });\n\n    // Set up builder to write to the correct directory\n    var toolPath = 'mt-' + archinfo.host();\n    builder = builder.enter(toolPath);\n\n    // Transpile the files we selected\n    var babel = require(\"meteor-babel\");\n    pathsToTranspile.forEach((path) => {\n      var fullPath = files.convertToOSPath(\n        files.pathJoin(files.getCurrentToolsDir(), path));\n\n      var inputFileContents = files.readFile(fullPath, \"utf-8\");\n\n      // #RemoveInProd\n      // We don't actually want to load the babel auto-transpiler when we are\n      // in a Meteor installation where everything is already transpiled for us.\n      // Therefore, strip out that line in main.js\n      if (path === \"tools/tool-env/install-babel.js\" ||\n          path === \"tools/tool-env/source-map-retriever-stack.js\") {\n        inputFileContents = inputFileContents.replace(/^.*#RemoveInProd.*$/mg, \"\");\n      }\n\n      var babelOptions = babel.getDefaultOptions(\n        require('../tool-env/babel-features.js')\n      );\n\n      _.extend(babelOptions, {\n        filename: path,\n        sourceFileName: \"/\" + path,\n        sourceMapName: path + \".map\",\n        sourceMap: true\n      });\n\n      var transpiled = babel.compile(inputFileContents, babelOptions);\n\n      var sourceMapUrlComment = \"//# sourceMappingURL=\" + files.pathBasename(path + \".map\");\n\n      builder.write(path, {\n        data: new Buffer(transpiled.code + \"\\n\" + sourceMapUrlComment, 'utf8')\n      });\n\n      builder.write(path + \".map\", {\n        data: new Buffer(JSON.stringify(transpiled.map), 'utf8')\n      });\n    });\n\n    var gitSha = utils.runGitInCheckout('rev-parse', 'HEAD');\n    builder.reserve('isopackets', {directory: true});\n    builder.write('.git_version.txt', {data: new Buffer(gitSha, 'utf8')});\n\n    builder.copyDirectory({\n      from: files.getCurrentToolsDir(),\n      to: '',\n      specificFiles: pathsToCopyStraight,\n      symlink: false\n    });\n\n    // Include the dev bundle, but drop a few things that are only used by\n    // self-test (which isn't supported from release).\n    var devBundleIgnore = _.clone(bundler.ignoreFiles);\n    devBundleIgnore.push(/BrowserStackLocal/, /browserstack-webdriver/);\n    builder.copyDirectory({\n      from: files.pathJoin(files.getDevBundle()),\n      to: 'dev_bundle',\n      ignore: devBundleIgnore,\n      symlink: false\n    });\n\n    // Build all of the isopackets now, so that no build step is required when\n    // you're actually running meteor from a release in order to load packages.\n    var isopacketBuildContext = isopackets.makeIsopacketBuildContext();\n\n    var messages = buildmessage.capture(function () {\n      // We rebuild them in the order listed in ISOPACKETS. This is not strictly\n      // necessary here, since any isopackets loaded as part of the build\n      // process are going to be the current tool's isopackets, not the\n      // isopackets that we're writing out.\n      _.each(isopackets.ISOPACKETS, function (packages, isopacketName) {\n        buildmessage.enterJob({\n          title: \"compiling \" + isopacketName + \" packages for the tool\"\n        }, function () {\n          isopacketBuildContext.isopackCache.buildLocalPackages(packages);\n          if (buildmessage.jobHasMessages())\n            return;\n\n          var image = bundler.buildJsImage({\n            name: \"isopacket-\" + isopacketName,\n            packageMap: isopacketBuildContext.packageMap,\n            isopackCache: isopacketBuildContext.isopackCache,\n            use: packages\n          }).image;\n          if (buildmessage.jobHasMessages())\n            return;\n\n          image.write(\n            builder.enter(files.pathJoin('isopackets', isopacketName)));\n        });\n      });\n    });\n    // This is a build step ... but it's one that only happens in development,\n    // and similar to a isopacket load failure, it can just crash the app\n    // instead of being handled nicely.\n    if (messages.hasMessages()) {\n      Console.error(\"Errors prevented tool build:\");\n      Console.error(messages.formatMessages());\n      throw new Error(\"tool build failed?\");\n    }\n\n    return [{\n      name: 'meteor',\n      arch: archinfo.host(),\n      path: toolPath\n    }];\n  }),\n\n  getMergedWatchSet: Profile(\"Isopack#getMergedWatchSet\", function () {\n    var self = this;\n    var watchSet = self.pluginWatchSet.clone();\n    _.each(self.unibuilds, function (unibuild) {\n      watchSet.merge(unibuild.watchSet);\n    });\n    return watchSet;\n  }),\n\n  getClientWatchSet: Profile(\"Isopack#getClientWatchSet\", function () {\n    var watchSet = this.pluginWatchSet.clone();\n    _.each(this.unibuilds, function (unibuild) {\n      if (/^web\\./.test(unibuild.arch)) {\n        watchSet.merge(unibuild.watchSet);\n      }\n    });\n    return watchSet;\n  }),\n\n  getServerWatchSet: Profile(\"Isopack#getServerWatchSet\", function () {\n    var watchSet = this.pluginWatchSet.clone();\n    _.each(this.unibuilds, function (unibuild) {\n      if (! /^web\\./.test(unibuild.arch)) {\n        watchSet.merge(unibuild.watchSet);\n      }\n    });\n    return watchSet;\n  }),\n\n  // Similar to PackageSource.getPackagesToLoadFirst, but doesn't include\n  // packages used by plugins, because plugin dependencies are already\n  // statically included in this built Isopack. Used by\n  // IsopackCache._ensurePackageLoaded.\n  //\n  // Like getPackagesToLoadFirst, it filters out isobuild:* pseudo-packages and\n  // should not be used to create input to Version Solver.\n  getStrongOrderedUsedAndImpliedPackages: Profile(\n    \"Isopack#getStrongOrderedUsedAndImpliedPackages\", function () {\n    var self = this;\n    var packages = {};\n    var processUse = function (use) {\n      if (use.weak || use.unordered)\n        return;\n      // Only include real packages, not isobuild:* pseudo-packages.\n      if (compiler.isIsobuildFeaturePackage(use.package)) {\n        return;\n      }\n      packages[use.package] = true;\n    };\n\n    _.each(self.unibuilds, function (unibuild) {\n      _.each(unibuild.uses, processUse);\n      _.each(unibuild.implies, processUse);\n    });\n    return _.keys(packages);\n  }),\n\n  featureEnabled(featurePackageName) {\n    return this.isobuildFeatures.indexOf(featurePackageName) !== -1;\n  },\n\n  _getServePath: function (pathInPackage) {\n    var self = this;\n    var serveRoot;\n    if (self.name) {\n      serveRoot = files.pathJoin('/packages/', self.name);\n    } else {\n      serveRoot = '/';\n    }\n\n    return colonConverter.convert(\n      files.pathJoin(\n        serveRoot,\n        // XXX or should everything in this API use slash already?\n        files.convertToStandardPath(pathInPackage, true)));\n  },\n\n  displayName() {\n    return this.name === null ? 'the app' : this.name;\n  }\n});\n\nexports.Isopack = Isopack;\n\nexports.OldIsopackFormatError = function () {\n  // This should always be caught anywhere where it can appear (ie, anywhere\n  // that isn't definitely loading something from the tropohouse).\n  this.toString = function () { return \"old isopack format!\" };\n};\n"]}