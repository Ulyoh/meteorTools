{"version":3,"sources":["/tools/isobuild/compiler-plugin.js"],"names":[],"mappings":"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","file":"tools/isobuild/compiler-plugin.js.map","sourcesContent":["var archinfo = require('../utils/archinfo.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar buildPluginModule = require('./build-plugin.js');\nvar colonConverter = require('../utils/colon-converter.js');\nvar files = require('../fs/files.js');\nvar compiler = require('./compiler.js');\nvar linker = require('./linker.js');\nvar util = require('util');\nvar _ = require('underscore');\nvar Profile = require('../tool-env/profile.js').Profile;\nimport {sha1} from  '../fs/watch.js';\nimport LRU from 'lru-cache';\nimport Fiber from 'fibers';\nimport {sourceMapLength} from '../utils/utils.js';\n\n// This file implements the new compiler plugins added in Meteor 1.2, which are\n// registered with the Plugin.registerCompiler API.\n//\n// Unlike legacy source handlers (Plugin.registerSourceHandler), compilers run\n// in the context of an entire app. That is to say, they don't run when you run\n// `meteor publish`; whenever they run, they have access to all the files of\n// their type across all packages as well as the app. This allows them to\n// implement cross-file and cross-package inclusion, or config files in the app\n// that affect how packages are processed, among other possibilities.\n//\n// Compilers can specify which extensions or filenames they process. They only\n// process files in packages (or the app) that directly use the plugin's package\n// (or that use it indirectly via the \"imply\" directive); just because compiler\n// plugins act on multiple packages at a time doesn't mean they automatically\n// act on all packages in your app.\n//\n// The CompilerPluginProcessor is the main entry point to this file; it is used\n// by the bundler to run all plugins on a target. It doesn't have much\n// interesting state and perhaps could have just been a function.\n//\n// It receives an ordered list of unibuilds (essentially, packages) from the\n// bundler. It turns them into an ordered list of PackageSourceBatch objects,\n// each of which represents the source files in a single package. Each\n// PackageSourceBatch consists of an ordered list of ResourceSlots representing\n// the resources in that package. The idea here is that, because Meteor executes\n// all JS files in the order produced by the bundler, we need to make sure to\n// maintain the order of packages from the bundler and the order of source files\n// within a package. Each ResourceSlot represents a resource (either a 'source'\n// resource which will be processed by a compiler plugin, or something else like\n// a static asset or some JavaScript produced by a legacy source handler), and\n// when the compiler plugin calls something like `inputFile.addJavaScript` on a\n// file, we replace that source file with the resource produced by the plugin.\n//\n// InputFile is a wrapper around ResourceSlot that is the object presented to\n// the compiler in the plugin. It is part of the documented registerCompiler\n// API.\n\n// Cache the (slightly post-processed) results of linker.fullLink.\nconst CACHE_SIZE = process.env.METEOR_LINKER_CACHE_SIZE || 1024*1024*100;\nconst CACHE_DEBUG = !! process.env.METEOR_TEST_PRINT_LINKER_CACHE_DEBUG;\nconst LINKER_CACHE = new LRU({\n  max: CACHE_SIZE,\n  // Cache is measured in bytes. We don't care about servePath.\n  // Key is JSONification of all options plus all hashes.\n  length: function (files) {\n    return files.reduce((soFar, current) => {\n      return soFar + current.data.length + sourceMapLength(current.sourceMap);\n    }, 0);\n  }\n});\n\n\nexports.CompilerPluginProcessor = function (options) {\n  var self = this;\n  self.unibuilds = options.unibuilds;\n  self.arch = options.arch;\n  self.isopackCache = options.isopackCache;\n\n  self.linkerCacheDir = options.linkerCacheDir;\n  if (self.linkerCacheDir) {\n    files.mkdir_p(self.linkerCacheDir);\n  }\n};\n_.extend(exports.CompilerPluginProcessor.prototype, {\n  runCompilerPlugins: function () {\n    var self = this;\n    buildmessage.assertInJob();\n\n    // plugin id -> {sourceProcessor, resourceSlots}\n    var sourceProcessorsWithSlots = {};\n\n    var sourceBatches = _.map(self.unibuilds, function (unibuild) {\n      return new PackageSourceBatch(unibuild, self, {\n        linkerCacheDir: self.linkerCacheDir\n      });\n    });\n\n    // If we failed to match sources with processors, we're done.\n    if (buildmessage.jobHasMessages()) {\n      return [];\n    }\n\n    // Find out which files go with which CompilerPlugins.\n    _.each(sourceBatches, function (sourceBatch) {\n      _.each(sourceBatch.resourceSlots, function (resourceSlot) {\n        var sourceProcessor = resourceSlot.sourceProcessor;\n        // Skip non-sources.\n        if (! sourceProcessor)\n          return;\n\n        if (! _.has(sourceProcessorsWithSlots, sourceProcessor.id)) {\n          sourceProcessorsWithSlots[sourceProcessor.id] = {\n            sourceProcessor: sourceProcessor,\n            resourceSlots: []\n          };\n        }\n        sourceProcessorsWithSlots[sourceProcessor.id].resourceSlots.push(\n          resourceSlot);\n      });\n    });\n\n    // Now actually run the handlers.\n    _.each(sourceProcessorsWithSlots, function (data, id) {\n      var sourceProcessor = data.sourceProcessor;\n      var resourceSlots = data.resourceSlots;\n\n      var jobTitle = [\n        \"processing files with \",\n        sourceProcessor.isopack.name,\n        \" (for target \", self.arch, \")\"\n      ].join('');\n\n      Profile.time(jobTitle, () => {\n        buildmessage.enterJob({\n          title: jobTitle\n        }, function () {\n          var inputFiles = _.map(resourceSlots, function (resourceSlot) {\n            return new InputFile(resourceSlot);\n          });\n\n          var markedMethod = buildmessage.markBoundary(\n            sourceProcessor.userPlugin.processFilesForTarget.bind(\n              sourceProcessor.userPlugin));\n          try {\n            markedMethod(inputFiles);\n          } catch (e) {\n            buildmessage.exception(e);\n          }\n        });\n      });\n    });\n\n    return sourceBatches;\n  }\n});\n\nvar InputFile = function (resourceSlot) {\n  var self = this;\n  // We use underscored attributes here because this is user-visible code and we\n  // don't want users to be accessing anything that we don't document.\n  self._resourceSlot = resourceSlot;\n};\nutil.inherits(InputFile, buildPluginModule.InputFile);\n_.extend(InputFile.prototype, {\n  getContentsAsBuffer: function () {\n    var self = this;\n    return self._resourceSlot.inputResource.data;\n  },\n  getPackageName: function () {\n    var self = this;\n    return self._resourceSlot.packageSourceBatch.unibuild.pkg.name;\n  },\n  getPathInPackage: function () {\n    var self = this;\n    return self._resourceSlot.inputResource.path;\n  },\n  getFileOptions: function () {\n    var self = this;\n    // XXX fileOptions only exists on some resources (of type \"source\"). The JS\n    // resources might not have this property.\n    return self._resourceSlot.inputResource.fileOptions || {};\n  },\n  getArch: function () {\n    return this._resourceSlot.packageSourceBatch.processor.arch;\n  },\n  getSourceHash: function () {\n    return this._resourceSlot.inputResource.hash;\n  },\n\n  /**\n   * @summary Returns the extension that matched the compiler plugin.\n   * The longest prefix is preferred.\n   * @returns {String}\n   */\n  getExtension: function () {\n    return this._resourceSlot.inputResource.extension;\n  },\n\n  /**\n   * @summary Returns a list of symbols declared as exports in this target. The\n   * result of `api.export('symbol')` calls in target's control file such as\n   * package.js.\n   * @memberof InputFile\n   * @returns {String[]}\n   */\n  getDeclaredExports: function () {\n    var self = this;\n    return self._resourceSlot.packageSourceBatch.unibuild.declaredExports;\n  },\n\n  /**\n   * @summary Returns a relative path that can be used to form error messages or\n   * other display properties. Can be used as an input to a source map.\n   * @memberof InputFile\n   * @returns {String}\n   */\n  getDisplayPath: function () {\n    var self = this;\n    return self._resourceSlot.packageSourceBatch.unibuild.pkg._getServePath(self.getPathInPackage());\n  },\n\n  /**\n   * @summary Web targets only. Add a stylesheet to the document. Not available\n   * for linter build plugins.\n   * @param {Object} options\n   * @param {String} options.path The requested path for the added CSS, may not\n   * be satisfied if there are path conflicts.\n   * @param {String} options.data The content of the stylesheet that should be\n   * added.\n   * @param {String|Object} options.sourceMap A stringified JSON\n   * sourcemap, in case the stylesheet was generated from a different\n   * file.\n   * @memberOf InputFile\n   * @instance\n   */\n  addStylesheet: function (options) {\n    var self = this;\n    if (options.sourceMap && typeof options.sourceMap === 'string') {\n      // XXX remove an anti-XSSI header? \")]}'\\n\"\n      options.sourceMap = JSON.parse(options.sourceMap);\n    }\n    self._resourceSlot.addStylesheet(options);\n  },\n  /**\n   * @summary Add JavaScript code. The code added will only see the\n   * namespaces imported by this package as runtime dependencies using\n   * ['api.use'](#PackageAPI-use). If the file being compiled was added\n   * with the bare flag, the resulting JavaScript won't be wrapped in a\n   * closure.\n   * @param {Object} options\n   * @param {String} options.path The path at which the JavaScript file\n   * should be inserted, may not be honored in case of path conflicts.\n   * @param {String} options.data The code to be added.\n   * @param {String|Object} options.sourceMap A stringified JSON\n   * sourcemap, in case the JavaScript file was generated from a\n   * different file.\n   * @memberOf InputFile\n   * @instance\n   */\n  addJavaScript: function (options) {\n    var self = this;\n    if (options.sourceMap && typeof options.sourceMap === 'string') {\n      // XXX remove an anti-XSSI header? \")]}'\\n\"\n      options.sourceMap = JSON.parse(options.sourceMap);\n    }\n    self._resourceSlot.addJavaScript(options);\n  },\n  /**\n   * @summary Add a file to serve as-is to the browser or to include on\n   * the browser, depending on the target. On the web, it will be served\n   * at the exact path requested. For server targets, it can be retrieved\n   * using `Assets.getText` or `Assets.getBinary`.\n   * @param {Object} options\n   * @param {String} options.path The path at which to serve the asset.\n   * @param {Buffer|String} options.data The data that should be placed in the\n   * file.\n   * @param {String} [options.hash] Optionally, supply a hash for the output\n   * file.\n   * @memberOf InputFile\n   * @instance\n   */\n  addAsset: function (options) {\n    var self = this;\n    self._resourceSlot.addAsset(options);\n  },\n\n  /**\n   * @summary Works in web targets only. Add markup to the `head` or `body`\n   * section of the document.\n   * @param  {Object} options\n   * @param {String} options.section Which section of the document should\n   * be appended to. Can only be \"head\" or \"body\".\n   * @param {String} options.data The content to append.\n   * @memberOf InputFile\n   * @instance\n   */\n  addHtml: function (options) {\n    var self = this;\n    self._resourceSlot.addHtml(options);\n  }\n});\n\nvar ResourceSlot = function (unibuildResourceInfo,\n                             sourceProcessor,\n                             packageSourceBatch) {\n  var self = this;\n  // XXX ideally this should be an classy object, but it's not.\n  self.inputResource = unibuildResourceInfo;\n  // Everything but JS.\n  self.outputResources = [];\n  // JS, which gets linked together at the end.\n  self.jsOutputResources = [];\n  self.sourceProcessor = sourceProcessor;\n  self.packageSourceBatch = packageSourceBatch;\n\n  if (self.inputResource.type === \"source\") {\n    if (sourceProcessor) {\n      // If we have a sourceProcessor, it will handle the adding of the\n      // final processed JavaScript.\n    } else if (self.inputResource.extension === \"js\") {\n      // If there is no sourceProcessor for a .js file, add the source\n      // directly to the output. #HardcodeJs\n      self.addJavaScript({\n        // XXX it's a shame to keep converting between Buffer and string, but\n        // files.convertToStandardLineEndings only works on strings for now\n        data: self.inputResource.data.toString('utf8'),\n        path: self.inputResource.path,\n        hash: self.inputResource.hash,\n        bare: self.inputResource.fileOptions &&\n          (self.inputResource.fileOptions.bare ||\n           // XXX eventually get rid of backward-compatibility \"raw\" name\n           // XXX COMPAT WITH 0.6.4\n           self.inputResource.fileOptions.raw)\n      });\n    }\n  } else {\n    if (sourceProcessor) {\n      throw Error(\"sourceProcessor for non-source? \" +\n                  JSON.stringify(unibuildResourceInfo));\n    }\n    // Any resource that isn't handled by compiler plugins just gets passed\n    // through.\n    if (self.inputResource.type === \"js\") {\n      self.jsOutputResources.push(self.inputResource);\n    } else {\n      self.outputResources.push(self.inputResource);\n    }\n  }\n};\n_.extend(ResourceSlot.prototype, {\n  addStylesheet: function (options) {\n    var self = this;\n    if (! self.sourceProcessor)\n      throw Error(\"addStylesheet on non-source ResourceSlot?\");\n\n    self.outputResources.push({\n      type: \"css\",\n      refreshable: true,\n      data: new Buffer(files.convertToStandardLineEndings(options.data), 'utf8'),\n      servePath: self.packageSourceBatch.unibuild.pkg._getServePath(\n        options.path),\n      // XXX do we need to call convertSourceMapPaths here like we did\n      //     in legacy handlers?\n      sourceMap: options.sourceMap\n    });\n  },\n  addJavaScript: function (options) {\n    var self = this;\n    // #HardcodeJs this gets called by constructor in the \"js\" case\n    if (! self.sourceProcessor && self.inputResource.extension !== \"js\")\n      throw Error(\"addJavaScript on non-source ResourceSlot?\");\n\n    // By default, use the 'bare' option given to addFiles, but allow the option\n    // passed to addJavaScript to override it.\n    var bare = self.inputResource.fileOptions &&\n      self.inputResource.fileOptions.bare;\n    if (options.hasOwnProperty('bare')) {\n      bare = options.bare;\n    }\n\n    var data = new Buffer(\n      files.convertToStandardLineEndings(options.data), 'utf8');\n    self.jsOutputResources.push({\n      type: \"js\",\n      data: data,\n      servePath: self.packageSourceBatch.unibuild.pkg._getServePath(\n        options.path),\n      // XXX should we allow users to be trusted and specify a hash?\n      hash: sha1(data),\n      // XXX do we need to call convertSourceMapPaths here like we did\n      //     in legacy handlers?\n      sourceMap: options.sourceMap,\n      bare: !! bare\n    });\n  },\n  addAsset: function (options) {\n    var self = this;\n    if (! self.sourceProcessor)\n      throw Error(\"addAsset on non-source ResourceSlot?\");\n\n    if (! (options.data instanceof Buffer)) {\n      if (_.isString(options.data)) {\n        options.data = new Buffer(options.data);\n      } else {\n        throw new Error(\"'data' option to addAsset must be a Buffer or String.\");\n      }\n    }\n\n    self.outputResources.push({\n      type: 'asset',\n      data: options.data,\n      path: options.path,\n      servePath: self.packageSourceBatch.unibuild.pkg._getServePath(\n        options.path),\n      hash: sha1(options.data)\n    });\n  },\n  addHtml: function (options) {\n    var self = this;\n    var unibuild = self.packageSourceBatch.unibuild;\n\n    if (! archinfo.matches(unibuild.arch, \"web\"))\n      throw new Error(\"Document sections can only be emitted to \" +\n                      \"web targets\");\n    if (options.section !== \"head\" && options.section !== \"body\")\n      throw new Error(\"'section' must be 'head' or 'body'\");\n    if (typeof options.data !== \"string\")\n      throw new Error(\"'data' option to appendDocument must be a string\");\n\n    self.outputResources.push({\n      type: options.section,\n      data: new Buffer(files.convertToStandardLineEndings(options.data), 'utf8')\n    });\n  }\n});\n\nvar PackageSourceBatch = function (unibuild, processor, {linkerCacheDir}) {\n  var self = this;\n  buildmessage.assertInJob();\n\n  self.unibuild = unibuild;\n  self.processor = processor;\n  self.linkerCacheDir = linkerCacheDir;\n  var sourceProcessorSet = self._getSourceProcessorSet();\n  self.resourceSlots = [];\n  unibuild.resources.forEach(function (resource) {\n    let sourceProcessor = null;\n    if (resource.type === \"source\") {\n      var extension = resource.extension;\n      if (extension === null) {\n        const filename = files.pathBasename(resource.path);\n        sourceProcessor = sourceProcessorSet.getByFilename(filename);\n        if (! sourceProcessor) {\n          buildmessage.error(\n            `no plugin found for ${ resource.path } in ` +\n              `${ unibuild.pkg.displayName() }; a plugin for ${ filename } ` +\n              `was active when it was published but none is now`);\n          return;\n          // recover by ignoring\n        }\n      } else {\n        sourceProcessor = sourceProcessorSet.getByExtension(extension);\n        // If resource.extension === 'js', it's ok for there to be no\n        // sourceProcessor, since we #HardcodeJs in ResourceSlot.\n        if (! sourceProcessor && extension !== 'js') {\n          buildmessage.error(\n            `no plugin found for ${ resource.path } in ` +\n            `${ unibuild.pkg.displayName() }; a plugin for *.${ extension } ` +\n            `was active when it was published but none is now`);\n          return;\n          // recover by ignoring\n        }\n      }\n    }\n    self.resourceSlots.push(new ResourceSlot(resource, sourceProcessor, self));\n  });\n};\n_.extend(PackageSourceBatch.prototype, {\n  _getSourceProcessorSet: function () {\n    var self = this;\n\n    buildmessage.assertInJob();\n\n    var isopack = self.unibuild.pkg;\n    const activePluginPackages = compiler.getActivePluginPackages(isopack, {\n      uses: self.unibuild.uses,\n      isopackCache: self.processor.isopackCache\n    });\n    const sourceProcessorSet = new buildPluginModule.SourceProcessorSet(\n      isopack.displayName(), { hardcodeJs: true });\n\n    _.each(activePluginPackages, function (otherPkg) {\n      otherPkg.ensurePluginsInitialized();\n\n      sourceProcessorSet.merge(\n        otherPkg.sourceProcessors.compiler, {arch: self.processor.arch});\n    });\n\n    return sourceProcessorSet;\n  },\n\n  // Called by bundler's Target._emitResources.  It returns the actual resources\n  // that end up in the program for this package.  By this point, it knows what\n  // its dependencies are and what their exports are, so it can set up\n  // linker-style imports and exports.\n  getResources: Profile(\"PackageSourceBatch#getResources\", function () {\n    var self = this;\n    buildmessage.assertInJob();\n\n    var flatten = function (arrays) {\n      return Array.prototype.concat.apply([], arrays);\n    };\n    var resources = flatten(_.pluck(self.resourceSlots, 'outputResources'));\n    var jsResources = flatten(_.pluck(self.resourceSlots, 'jsOutputResources'));\n    Array.prototype.push.apply(resources, self._linkJS(jsResources));\n    return resources;\n  }),\n\n  _linkJS: Profile(\"PackageSourceBatch#_linkJS\", function (jsResources) {\n    var self = this;\n    buildmessage.assertInJob();\n\n    var isopackCache = self.processor.isopackCache;\n    var bundleArch = self.processor.arch;\n\n    // Compute imports by merging the exports of all of the packages we\n    // use. Note that in the case of conflicting symbols, later packages get\n    // precedence.\n    //\n    // We don't get imports from unordered dependencies (since they may not be\n    // defined yet) or from weak/debugOnly dependencies (because the meaning of\n    // a name shouldn't be affected by the non-local decision of whether or not\n    // an unrelated package in the target depends on something).\n    var imports = {}; // map from symbol to supplying package name\n\n    var addImportsForUnibuild = function (depUnibuild) {\n      _.each(depUnibuild.declaredExports, function (symbol) {\n        // Slightly hacky implementation of test-only exports.\n        if (! symbol.testOnly || self.unibuild.pkg.isTest) {\n          imports[symbol.name] = depUnibuild.pkg.name;\n        }\n      });\n    };\n    compiler.eachUsedUnibuild({\n      dependencies: self.unibuild.uses,\n      arch: bundleArch,\n      isopackCache: isopackCache,\n      skipUnordered: true,\n      // don't import symbols from debugOnly and prodOnly packages, because\n      // if the package is not linked it will cause a runtime error.\n      // the code must access them with `Package[\"my-package\"].MySymbol`.\n      skipDebugOnly: true,\n      skipProdOnly: true,\n      // We only care about getting exports here, so it's OK if we get the Mac\n      // version when we're bundling for Linux.\n      allowWrongPlatform: true,\n    }, addImportsForUnibuild);\n\n    // Run the linker.\n    const isApp = ! self.unibuild.pkg.name;\n    const linkerOptions = {\n      useGlobalNamespace: isApp,\n      // I was confused about this, so I am leaving a comment -- the\n      // combinedServePath is either [pkgname].js or [pluginName]:plugin.js.\n      // XXX: If we change this, we can get rid of source arch names!\n      combinedServePath: isApp ? null :\n        \"/packages/\" + colonConverter.convert(\n          self.unibuild.pkg.name +\n            (self.unibuild.kind === \"main\" ? \"\" : (\":\" + self.unibuild.kind)) +\n            \".js\"),\n      name: self.unibuild.pkg.name || null,\n      declaredExports: _.pluck(self.unibuild.declaredExports, 'name'),\n      imports: imports,\n      // XXX report an error if there is a package called global-imports\n      importStubServePath: isApp && '/packages/global-imports.js',\n      includeSourceMapInstructions: archinfo.matches(self.unibuild.arch, \"web\")\n    };\n\n    const cacheKey = sha1(JSON.stringify({\n      linkerOptions,\n      files: jsResources.map((inputFile) => {\n        // Note that we don't use inputFile.sourceMap in this cache key. Maybe\n        // this isn't technically accurate? Is it likely that the source map\n        // will change but the file won't?\n        return {\n          servePath: inputFile.servePath,\n          hash: inputFile.hash,\n          bare: inputFile.bare\n        };\n      })\n    }));\n\n    {\n      const inMemoryCached = LINKER_CACHE.get(cacheKey);\n      if (inMemoryCached) {\n        if (CACHE_DEBUG) {\n          console.log('LINKER IN-MEMORY CACHE HIT:',\n                      linkerOptions.name, bundleArch);\n        }\n        return inMemoryCached;\n      }\n    }\n\n    const cacheFilename = self.linkerCacheDir && files.pathJoin(\n      self.linkerCacheDir, cacheKey + '.cache');\n\n    // The return value from _linkJS includes Buffers, but we want everything to\n    // be JSON for writing to the disk cache. This function converts the string\n    // version to the Buffer version.\n    function bufferifyJSONReturnValue(resources) {\n      resources.forEach((r) => {\n        r.data = new Buffer(r.data, 'utf8');\n      });\n    }\n\n    if (cacheFilename) {\n      let diskCached = null;\n      try {\n        diskCached = files.readJSONOrNull(cacheFilename);\n      } catch (e) {\n        // Ignore JSON parse errors; pretend there was no cache.\n        if (!(e instanceof SyntaxError))\n          throw e;\n      }\n      if (diskCached && diskCached instanceof Array) {\n        // Fix the non-JSON part of our return value.\n        bufferifyJSONReturnValue(diskCached);\n        if (CACHE_DEBUG) {\n          console.log('LINKER DISK CACHE HIT:', linkerOptions.name, bundleArch);\n        }\n        return diskCached;\n      }\n    }\n\n    if (CACHE_DEBUG) {\n      console.log('LINKER CACHE MISS:', linkerOptions.name, bundleArch);\n    }\n\n    // nb: linkedFiles might be aliased to an entry in LINKER_CACHE, so don't\n    // mutate anything from it.\n    let canCache = true;\n    let linkedFiles = null;\n    buildmessage.enterJob('linking', () => {\n      linkedFiles = linker.fullLink(jsResources, linkerOptions);\n      if (buildmessage.jobHasMessages()) {\n        canCache = false;\n      }\n    });\n    // Add each output as a resource\n    const ret = linkedFiles.map((file) => {\n      const sm = (typeof file.sourceMap === 'string')\n        ? JSON.parse(file.sourceMap) : file.sourceMap;\n      return {\n        type: \"js\",\n        // This is a string... but we will convert it to a Buffer\n        // before returning from the method (but after writing\n        // to cache).\n        data: file.source,\n        servePath: file.servePath,\n        sourceMap: sm\n      };\n    });\n\n    let retAsJSON;\n    if (canCache && cacheFilename) {\n      retAsJSON = JSON.stringify(ret);\n    }\n\n    // Convert strings to buffers, now that we've serialized it.\n    bufferifyJSONReturnValue(ret);\n\n    if (canCache) {\n      LINKER_CACHE.set(cacheKey, ret);\n      if (cacheFilename) {\n        // Write asynchronously.\n        Fiber(() => files.writeFileAtomically(cacheFilename, retAsJSON)).run();\n      }\n    }\n\n    return ret;\n  })\n});\n"]}