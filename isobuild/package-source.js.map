{"version":3,"sources":["/tools/isobuild/package-source.js"],"names":[],"mappings":"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","file":"tools/isobuild/package-source.js.map","sourcesContent":["var _ = require('underscore');\nvar sourcemap = require('source-map');\n\nvar files = require('../fs/files.js');\nvar utils = require('../utils/utils.js');\nvar watch = require('../fs/watch.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar meteorNpm = require('./meteor-npm.js');\nvar NpmDiscards = require('./npm-discards.js');\nvar Builder = require('./builder.js');\nvar archinfo = require('../utils/archinfo.js');\nvar catalog = require('../packaging/catalog/catalog.js');\nvar packageVersionParser = require('../packaging/package-version-parser.js');\nvar compiler = require('./compiler.js');\nvar packageAPIModule = require('./package-api.js');\nvar Profile = require('../tool-env/profile.js').Profile;\n\n// XXX: This is a medium-term hack, to avoid having the user set a package name\n// & test-name in package.describe. We will change this in the new control file\n// world in some way.\nvar AUTO_TEST_PREFIX = \"local-test:\";\nvar isTestName = function (name) {\n  var nameStart = name.slice(0, AUTO_TEST_PREFIX.length);\n  return nameStart === AUTO_TEST_PREFIX;\n};\nvar genTestName = function (name) {\n  return AUTO_TEST_PREFIX + name;\n};\n\n// Returns a sort comparator to order files into load order.\nvar loadOrderSort = function (sourceProcessorSet, arch) {\n  const isTemplate = _.memoize((filename) => {\n    const classification = sourceProcessorSet.classifyFilename(filename, arch);\n    switch (classification.type) {\n    case 'extension':\n    case 'filename':\n      if (! classification.sourceProcessors) {\n        // This is *.js, not a template. #HardcodeJs\n        return false;\n      }\n      if (classification.sourceProcessors.length > 1) {\n        throw Error(\"conflicts in compiler?\");\n      }\n      return classification.sourceProcessors[0].isTemplate;\n\n    case 'legacy-handler':\n      return classification.legacyIsTemplate;\n\n    case 'wrong-arch':\n    case 'unmatched':\n      return false;\n\n    default:\n      throw Error(`surprising type ${classification.type} for ${filename}`);\n    }\n  });\n\n  return function (a, b) {\n    // XXX MODERATELY SIZED HACK --\n    // push template files ahead of everything else. this is\n    // important because the user wants to be able to say\n    //   Template.foo.events = { ... }\n    // in a JS file and not have to worry about ordering it\n    // before the corresponding .html file.\n    //\n    // maybe all of the templates should go in one file?\n    var isTemplate_a = isTemplate(files.pathBasename(a));\n    var isTemplate_b = isTemplate(files.pathBasename(b));\n    if (isTemplate_a !== isTemplate_b) {\n      return (isTemplate_a ? -1 : 1);\n    }\n\n    // main.* loaded last\n    var ismain_a = (files.pathBasename(a).indexOf('main.') === 0);\n    var ismain_b = (files.pathBasename(b).indexOf('main.') === 0);\n    if (ismain_a !== ismain_b) {\n      return (ismain_a ? 1 : -1);\n    }\n\n    // /lib/ loaded first\n    var islib_a = (a.indexOf(files.pathSep + 'lib' + files.pathSep) !== -1 ||\n                   a.indexOf('lib' + files.pathSep) === 0);\n    var islib_b = (b.indexOf(files.pathSep + 'lib' + files.pathSep) !== -1 ||\n                   b.indexOf('lib' + files.pathSep) === 0);\n    if (islib_a !== islib_b) {\n      return (islib_a ? -1 : 1);\n    }\n\n    var a_parts = a.split(files.pathSep);\n    var b_parts = b.split(files.pathSep);\n\n    // deeper paths loaded first.\n    var len_a = a_parts.length;\n    var len_b = b_parts.length;\n    if (len_a < len_b) return 1;\n    if (len_b < len_a) return -1;\n\n    // Otherwise compare path components lexicographically.\n    for (var i = 0; i < len_a; ++i) {\n      var a_part = a_parts[i];\n      var b_part = b_parts[i];\n      if (a_part < b_part) return -1;\n      if (b_part < a_part) return 1;\n    }\n\n    // Never reached unless there are somehow duplicate paths.\n    return 0;\n  };\n};\n\nvar splitConstraint = function (c) {\n  // XXX print error better (w/ buildmessage?)?\n  var parsed = utils.parsePackageConstraint(c);\n  return { package: parsed.package,\n           constraint: parsed.constraintString || null };\n};\n\n// Given the text of a README.md file, excerpts the text between the first and\n// second heading.\n//\n// Specifically - if there is text between the document name, and the first\n// subheading, it will take that text. If there is no text there, and only text\n// after the first subheading, it will take that text. It won't look any deeper\n// than that (in case the user intentionally wants to leave the section blank\n// for some reason). Skips lines that start with an exclamation point.\nvar getExcerptFromReadme = function (text) {\n  // Don't waste time parsing if the document is empty.\n  if (! text) return \"\";\n\n  // Split into lines with Commonmark.\n  var commonmark = require('commonmark');\n  var reader = new commonmark.DocParser();\n  var parsed = reader.parse(text);\n\n  // Commonmark will parse the Markdown into an array of nodes. These are the\n  // nodes that represent the text between the first and second heading.\n  var relevantNodes = [];\n\n  // Go through the document until we get the nodes that we are looking for,\n  // then stop.\n  _.any(parsed.children, function (child) {\n    var isHeader = (child.t === \"Header\");\n    // Don't excerpt anything before the first header.\n    if (! isHeader) {\n      // If we are currently in the middle of excerpting, continue doing that\n      // until we hit hit a header (and this is not a header). Otherwise, if\n      // this is text, we should begin to excerpt it.\n      relevantNodes.push(child);\n    } else if (! _.isEmpty(relevantNodes) && isHeader) {\n      // We have been excerpting, and came across a header. That means\n      // that we are done.\n      return true;\n    }\n    return false;\n  });\n\n  // If we have not found anything, we are done.\n  if (_.isEmpty(relevantNodes)) return \"\";\n\n  // For now, we will do the simple thing of just taking the raw markdown from\n  // the start of the excerpt to the end.\n  var textLines = text.split(\"\\n\");\n  var start = relevantNodes[0].start_line - 1;\n  var stop = _.last(relevantNodes).end_line;\n  // XXX: There is a bug in commonmark that happens when processing the last\n  // node in the document. Here is the github issue:\n  // https://github.com/jgm/CommonMark/issues/276\n  // Remove this workaround when the issue is fixed.\n  if (stop === _.last(parsed.children).end_line) {\n    stop++;\n  }\n  var excerpt = textLines.slice(start, stop).join(\"\\n\");\n\n  // Strip the preceeding and trailing new lines.\n  return excerpt.replace(/^\\n+|\\n+$/g, \"\");\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// SourceArch\n///////////////////////////////////////////////////////////////////////////////\n\n// Options:\n// - kind [required]\n// - arch [required]\n// - uses\n// - implies\n// - getFiles\n// - declaredExports\n// - watchSet\n//\n// Do not include the source files in watchSet. They will be\n// added at compile time when the sources are actually read.\nvar SourceArch = function (pkg, options) {\n  var self = this;\n  options = options || {};\n  self.pkg = pkg;\n\n  // Kind of this sourceArchitecture. At the moment, there are really three\n  // options -- package, plugin, and app. We use these in linking.\n  self.kind = options.kind;\n\n  // The architecture (fully or partially qualified) that can use this\n  // unibuild.\n  self.arch = options.arch;\n\n  // Packages used. The ordering is significant only for determining\n  // import symbol priority (it doesn't affect load order), and a\n  // given package could appear more than once in the list, so code\n  // that consumes this value will need to guard appropriately. Each\n  // element in the array has keys:\n  // - package: the package name\n  // - constraint: the constraint on the version of the package to use,\n  //   as a string (may be null)\n  // - unordered: If true, we don't want the package's imports and we\n  //   don't want to force the package to load before us. We just want\n  //   to ensure that it loads if we load.\n  // - weak: If true, we don't *need* to load the other package, but\n  //   if the other package ends up loaded in the target, it must\n  //   be forced to load before us. We will not get its imports\n  //   or plugins.\n  // It is an error for both unordered and weak to be true, because\n  // such a dependency would have no effect.\n  //\n  // In most places, instead of using 'uses' directly, you want to use\n  // something like compiler.eachUsedUnibuild so you also take into\n  // account implied packages.\n  //\n  // Note that if `package` starts with 'isobuild:', it actually represents a\n  // dependency on a feature of the Isobuild build tool, not a real package. You\n  // need to be aware of this when processing a `uses` array, which is another\n  // reason to use eachUsedUnibuild instead.\n  self.uses = options.uses || [];\n\n  // Packages which are \"implied\" by using this package. If a unibuild X\n  // uses this unibuild Y, and Y implies Z, then X will effectively use Z\n  // as well (and get its imports and plugins).  An array of objects\n  // of the same type as the elements of self.uses (although for now\n  // unordered and weak are not allowed).\n  self.implies = options.implies || [];\n\n  // A function that returns the source files for this architecture. Object with\n  // keys `sources` and `assets`, where each is an array of objects with keys\n  // \"relPath\" and \"fileOptions\". Null if loaded from isopack.\n  //\n  // fileOptions is optional and represents arbitrary options passed\n  // to \"api.addFiles\"; they are made available on to the plugin as\n  // compileStep.fileOptions.\n  //\n  // This is a function rather than a literal array because for an\n  // app, we need to know the file extensions registered by the\n  // plugins in order to compute the sources list, so we have to wait\n  // until build time (after we have loaded any plugins, including\n  // local plugins in this package) to compute this.\n  self.getFiles = options.getFiles || null;\n\n  // Symbols that this architecture should export. List of symbols (as\n  // strings).\n  self.declaredExports = options.declaredExports || null;\n\n  // Files and directories that we want to monitor for changes in\n  // development mode, as a watch.WatchSet. In the latest refactoring\n  // of the code, this does not include source files or directories,\n  // but only control files such as package.js and .meteor/packages,\n  // since the rest are not determined until compile time.\n  self.watchSet = options.watchSet || new watch.WatchSet;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// PackageSource\n///////////////////////////////////////////////////////////////////////////////\n\nvar PackageSource = function () {\n  var self = this;\n\n  // The name of the package, or null for an app pseudo-package or\n  // collection. The package's exports will reside in Package.<name>.\n  // When it is null it is linked like an application instead of like\n  // a package.\n  self.name = null;\n\n  // The path relative to which all source file paths are interpreted\n  // in this package. Also used to compute the location of the\n  // package's .npm directory (npm shrinkwrap state).\n  self.sourceRoot = null;\n\n  // Path that will be prepended to the URLs of all resources emitted\n  // by this package (assuming they don't end up getting\n  // concatenated). For non-web targets, the only effect this will\n  // have is to change the actual on-disk paths of the files in the\n  // bundle, for those that care to open up the bundle and look (but\n  // it's still nice to get it right).\n  self.serveRoot = null;\n\n  // Package metadata. Keys are 'summary', 'git' and 'documentation'. Currently\n  // all of these are optional.\n  self.metadata = {};\n  self.docsExplicitlyProvided = false;\n\n  // Package version as a meteor-version string. Optional; not all packages\n  // (for example, the app) have versions.\n  // XXX when we have names, maybe we want to say that all packages\n  // with names have versions? certainly the reverse is true\n  self.version = null;\n  self.versionExplicitlyProvided = false;\n\n  // Available architectures of this package. Array of SourceArch.\n  self.architectures = [];\n\n  // The information necessary to build the plugins in this\n  // package. Map from plugin name to object with keys 'name', 'use',\n  // 'sources', and 'npmDependencies'.\n  self.pluginInfo = {};\n\n  // Analogous to watchSet in SourceArch but for plugins. At this\n  // stage will typically contain just 'package.js'.\n  self.pluginWatchSet = new watch.WatchSet;\n\n  // npm packages used by this package (on os.* architectures only).\n  // Map from npm package name to the required version of the package\n  // as a string.\n  self.npmDependencies = {};\n\n  // Files to be stripped from the installed NPM dependency tree. See the\n  // Npm.strip comment below for further usage information.\n  self.npmDiscards = new NpmDiscards;\n\n  // Absolute path to a directory on disk that serves as a cache for\n  // the npm dependencies, so we don't have to fetch them on every\n  // build. Required not just if we have npmDependencies, but if we\n  // ever could have had them in the past.\n  self.npmCacheDirectory = null;\n\n  // cordova plugins used by this package (on os.* architectures only).\n  // Map from cordova plugin name to the required version of the package\n  // as a string.\n  self.cordovaDependencies = {};\n\n  // If this package has a corresponding test package (for example,\n  // underscore-test), defined in the same package.js file, store its value\n  // here.\n  self.testName = null;\n\n  // Test packages are dealt with differently in the linker (and not published\n  // to the catalog), so we need to keep track of them.\n  self.isTest = false;\n\n  // Some packages belong to a test framework and should never be bundled into\n  // production. A package with this flag should not be picked up by the bundler\n  // for production builds.\n  self.debugOnly = false;\n\n  // A package marked prodOnly is ONLY picked up by the bundler for production\n  // builds.\n  self.prodOnly = false;\n\n  // If this is set, we will take the currently running git checkout and bundle\n  // the meteor tool from it inside this package as a tool. We will include\n  // built copies of all known isopackets.\n  self.includeTool = false;\n\n  // Is this a core package? Core packages don't record version files, because\n  // core packages are only ever run from checkout. For the preview release,\n  // core packages do not need to specify their versions at publication (since\n  // there isn't likely to be any exciting version skew yet), but we will\n  // specify the correct restrictions at 0.90.\n  // XXX: 0.90 package versions.\n  self.isCore = false;\n};\n\n\n_.extend(PackageSource.prototype, {\n  // Make a dummy (empty) packageSource that contains nothing of interest.\n  // XXX: Do we need this\n  initEmpty: function (name) {\n    var self = this;\n    self.name = name;\n  },\n\n  // Programmatically initialize a PackageSource from scratch.\n  //\n  // Unlike user-facing methods of creating a package\n  // (initFromPackageDir, initFromAppDir) this does not implicitly add\n  // a dependency on the 'meteor' package. If you want such a\n  // dependency then you must add it yourself.\n  //\n  // If called inside a buildmessage job, it will keep going if things\n  // go wrong. Be sure to call jobHasMessages to see if it actually\n  // succeeded.\n  //\n  // The architecture is hardcoded to be \"os\".\n  //\n  // Note that this does not set a version on the package!\n  //\n  // Options:\n  // - sourceRoot (required if sources present)\n  // - serveRoot (required if sources present)\n  // - use\n  // - sources (array of paths or relPath/fileOptions objects), note that this\n  // doesn't support assets at this time. If you want to pass assets here, you\n  // should add a new option to this function called `assets`.\n  // - npmDependencies\n  // - cordovaDependencies\n  // - npmDir\n  initFromOptions: function (name, options) {\n    var self = this;\n    self.name = name;\n\n    if (options.sources && ! _.isEmpty(options.sources) &&\n        (! options.sourceRoot || ! options.serveRoot))\n      throw new Error(\"When source files are given, sourceRoot and \" +\n                      \"serveRoot must be specified\");\n\n    // sourceRoot is a relative file system path, one slash identifies a root\n    // relative to some starting location\n    self.sourceRoot = options.sourceRoot || files.pathSep;\n    // serveRoot is actually a part of a url path, root here is a forward slash\n    self.serveRoot = options.serveRoot || '/';\n\n    utils.ensureOnlyExactVersions(options.npmDependencies);\n    self.npmDependencies = options.npmDependencies;\n    self.npmCacheDirectory = options.npmDir;\n\n    utils.ensureOnlyExactVersions(options.cordovaDependencies);\n    self.cordovaDependencies = options.cordovaDependencies;\n\n    const sources = options.sources.map((source) => {\n      if (typeof source === \"string\") {\n        return {\n          relPath: source\n        };\n      }\n\n      return source;\n    });\n\n    const sourceArch = new SourceArch(self, {\n      kind: options.kind,\n      arch: \"os\",\n      uses: _.map(options.use, splitConstraint),\n      getFiles() {\n        return {\n          sources: sources\n        }\n      }\n    });\n\n    self.architectures.push(sourceArch);\n\n    if (! self._checkCrossUnibuildVersionConstraints())\n      throw new Error(\"only one unibuild, so how can consistency check fail?\");\n  },\n\n  // Initialize a PackageSource from a package.js-style package directory. Uses\n  // the name field provided and the name/test fields in the package.js file to\n  // figre out if this is a test package (load from onTest) or a use package\n  // (load from onUse).\n  //\n  // name: name of the package.\n  // dir: location of directory on disk.\n  // options:\n  // - name: override the name of this package with a different name.\n  // - buildingIsopackets: true if this is being scanned in the process\n  //   of building isopackets\n  initFromPackageDir: function (dir, options) {\n    var self = this;\n    buildmessage.assertInCapture();\n    var isPortable = true;\n    options = options || {};\n    var initFromPackageDirOptions = options;\n\n    // If we know what package we are initializing, we pass in a\n    // name. Otherwise, we are intializing the base package specified by 'name:'\n    // field in Package.Describe. In that case, it is clearly not a test\n    // package. (Though we could be initializing a specific package without it\n    // being a test, for a variety of reasons).\n    if (options.name) {\n      self.isTest = isTestName(options.name);\n      self.name = options.name;\n    }\n\n    // Give the package a default version. We do not set\n    // versionExplicitlyProvided unless the package configuration file actually\n    // sets a version.\n    self.version = \"0.0.0\";\n\n    // To make the transition to using README.md files in Isobuild easier, we\n    // initialize the documentation directory to README.md by default.\n    self.metadata.documentation = \"README.md\";\n\n    self.sourceRoot = dir;\n\n    // If we are running from checkout we may be looking at a core package. If\n    // we are, let's remember this for things like not recording version files.\n    if (files.inCheckout()) {\n      var packDir = files.pathJoin(files.getCurrentToolsDir(), 'packages');\n      if (files.pathDirname(self.sourceRoot) === packDir) {\n        self.isCore = true;\n      }\n    }\n    if (! files.exists(self.sourceRoot))\n      throw new Error(\"putative package directory \" + dir + \" doesn't exist?\");\n\n    var fileAndDepLoader = null;\n    var npmDependencies = null;\n    var cordovaDependencies = null;\n\n    var packageJsPath = files.pathJoin(self.sourceRoot, 'package.js');\n    var code = files.readFile(packageJsPath);\n    var packageJsHash = watch.sha1(code);\n\n    var hasTests = false;\n\n    // Any package that depends on us needs to be rebuilt if our package.js file\n    // changes, because a change to package.js might add or remove a plugin,\n    // which could change a file from being handled by plugin vs treated as\n    // an asset.\n    self.pluginWatchSet.addFile(packageJsPath, packageJsHash);\n\n    // == 'Package' object visible in package.js ==\n\n    /**\n     * @global\n     * @name  Package\n     * @summary The Package object in package.js\n     * @namespace\n     * @locus package.js\n     */\n    var Package = {\n      // Set package metadata. Options:\n      // - summary: for 'meteor list' & package server\n      // - version: package version string\n      // There used to be a third option documented here,\n      // 'environments', but it was never implemented and no package\n      // ever used it.\n\n      /**\n       * @summary Provide basic package information.\n       * @locus package.js\n       * @memberOf Package\n       * @param {Object} options\n       * @param {String} options.summary A concise 1-2 sentence description of\n       * the package, required for publication.\n       * @param {String} options.version The (extended)\n       * [semver](http://www.semver.org) version for your package. Additionally,\n       * Meteor allows a wrap number: a positive integer that follows the\n       * version number. If you are porting another package that uses semver\n       * versioning, you may want to use the original version, postfixed with\n       * `_wrapnumber`. For example, `1.2.3_1` or `2.4.5-rc1_4`. Wrap numbers\n       * sort after the original numbers: `1.2.3` < `1.2.3_1` < `1.2.3_2` <\n       * `1.2.4-rc.0`. If no version is specified, this field defaults to\n       * `0.0.0`. If you want to publish your package to the package server, you\n       * must specify a version.\n       * @param {String} options.name Optional name override. By default, the\n       * package name comes from the name of its directory.\n       * @param {String} options.git Optional Git URL to the source repository.\n       * @param {String} options.documentation Optional Filepath to\n       * documentation. Set to 'README.md' by default. Set this to null to submit\n       * no documentation.\n       * @param {Boolean} options.debugOnly A package with this flag set to true\n       * will not be bundled into production builds. This is useful for packages\n       * meant to be used in development only.\n       * @param {Boolean} options.prodOnly A package with this flag set to true\n       * will ONLY be bundled into production builds.\n       */\n      describe: function (options) {\n        _.each(options, function (value, key) {\n          if (key === \"summary\" ||\n              key === \"git\") {\n            self.metadata[key] = value;\n          } else if (key === \"documentation\") {\n            self.metadata[key] = value;\n            self.docsExplicitlyProvided = true;\n          } else if (key === \"version\") {\n            if (typeof(value) !== \"string\") {\n              buildmessage.error(\"The package version (specified with \"\n                                 + \"Package.describe) must be a string.\");\n              // Recover by pretending that version was not set.\n            } else {\n              var goodVersion = true;\n              try {\n                var parsedVersion = packageVersionParser.getValidServerVersion(\n                  value);\n              } catch (e) {\n                if (!e.versionParserError)\n                  throw e;\n                buildmessage.error(\n                  \"The package version \" + value + \" (specified with Package.describe) \"\n                    + \"is not a valid Meteor package version.\\n\"\n                    + \"Valid package versions are semver (see http://semver.org/), \"\n                    + \"optionally followed by '_' and an integer greater or equal to 1.\");\n                goodVersion = false;\n              }\n              // Recover by pretending that the version was not set.\n            }\n            if (goodVersion && parsedVersion !== value) {\n              buildmessage.error(\n                \"The package version (specified with Package.describe) may not \"\n                  + \"contain a plus-separated build ID.\");\n              // Recover by pretending that the version was not set.\n              goodVersion = false;\n            }\n            if (goodVersion) {\n              self.version = value;\n              self.versionExplicitlyProvided = true;\n            }\n          } else if (key === \"name\" && !self.isTest) {\n            if (!self.name) {\n              self.name = value;\n            } else if (self.name !== value) {\n              // Woah, so we requested a non-test package by name, and it is not\n              // the name that we find inside. That's super weird.\n              buildmessage.error(\n                \"trying to initialize a nonexistent base package \" + value);\n            }\n            // `debugOnly` and `prodOnly` are boolean flags you can put on a\n            // package, currently undocumented.  when set to true, they cause\n            // a package's code to be only included (i.e. linked into the bundle)\n            // in dev mode or prod mode (`meteor --production`), and excluded\n            // otherwise.\n            //\n            // Notes:\n            //\n            // * These flags do not affect which packages or which versions are\n            //   are selected by the version solver.\n            //\n            // * When you use a debugOnly or prodOnly package, its exports are\n            //   not imported for you.  You have to access them using\n            //   `Package[\"my-package\"].MySymbol`.\n            //\n            // * These flags CAN cause different package load orders in\n            //   development and production!  We should probably fix this.\n            //   Basically, packages that are excluded from the build using\n            //   these flags are also excluded fro the build order calculation,\n            //   and that's the problem\n            //\n            // * We should consider publicly documenting these flags, since they\n            //   are effectively part of the public API.\n          } else if (key === \"debugOnly\") {\n            self.debugOnly = !!value;\n          } else if (key === \"prodOnly\") {\n            self.prodOnly = !!value;\n          } else {\n            // Do nothing. We might want to add some keys later, and we should err\n            // on the side of backwards compatibility.\n          }\n          if (self.debugOnly && self.prodOnly) {\n            buildmessage.error(\"Package can't have both debugOnly and prodOnly set.\");\n          }\n        });\n      },\n\n      /**\n       * @summary Define package dependencies and expose package methods.\n       * @locus package.js\n       * @memberOf Package\n       * @param {Function} func A function that takes in the package control `api` object, which keeps track of dependencies and exports.\n       */\n      onUse: function (f) {\n        if (!self.isTest) {\n          if (fileAndDepLoader) {\n            buildmessage.error(\"duplicate onUse handler; a package may have \" +\n                               \"only one\", { useMyCaller: true });\n            // Recover by ignoring the duplicate\n            return;\n          }\n          fileAndDepLoader = f;\n        }\n      },\n\n      /**\n       * @deprecated in 0.9.0\n       */\n      on_use: function (f) {\n        this.onUse(f);\n      },\n\n      /**\n       * @summary Define dependencies and expose package methods for unit tests.\n       * @locus package.js\n       * @memberOf Package\n       * @param {Function} func A function that takes in the package control 'api' object, which keeps track of dependencies and exports.\n       */\n      onTest: function (f) {\n        // If we are not initializing the test package, then we are initializing\n        // the normal package and have now noticed that it has tests. So, let's\n        // register the test. This is a medium-length hack until we have new\n        // control files.\n        if (!self.isTest) {\n          hasTests = true;\n          return;\n        }\n\n        // We are initializing the test, so proceed as normal.\n        if (self.isTest) {\n          if (fileAndDepLoader) {\n            buildmessage.error(\"duplicate onTest handler; a package may have \" +\n                               \"only one\", { useMyCaller: true });\n            // Recover by ignoring the duplicate\n            return;\n          }\n          fileAndDepLoader = f;\n        }\n      },\n\n      /**\n       * @deprecated in 0.9.0\n       */\n      on_test: function (f) {\n        this.onTest(f);\n      },\n\n      // Define a plugin. A plugin extends the build process for\n      // targets that use this package. For example, a Coffeescript\n      // compiler would be a plugin. A plugin is its own little\n      // program, with its own set of source files, used packages, and\n      // npm dependencies.\n      //\n      // This is an experimental API and for now you should assume\n      // that it will change frequently and radically (thus the\n      // '_transitional_'). For maximum R&D velocity and for the good\n      // of the platform, we will push changes that break your\n      // packages that use this API. You've been warned.\n      //\n      // Options:\n      // - name: a name for this plugin. required (cosmetic -- string)\n      // - use: package to use for the plugin (names, as strings)\n      // - sources: sources for the plugin (array of string)\n      // - npmDependencies: map from npm package name to required\n      //   version (string)\n\n      /**\n       * @summary Define a build plugin. A build plugin extends the build\n       * process for apps and packages that use this package. For example,\n       * the `coffeescript` package uses a build plugin to compile CoffeeScript\n       * source files into JavaScript.\n       * @param  {Object} [options]\n       * @param {String} options.name A cosmetic name, must be unique in the\n       * package.\n       * @param {String|String[]} options.use Meteor packages that this\n       * plugin uses, independent of the packages specified in\n       * [api.onUse](#pack_onUse).\n       * @param {String[]} options.sources The source files that make up the\n       * build plugin, independent from [api.addFiles](#pack_addFiles).\n       * @param {Object} options.npmDependencies An object where the keys\n       * are NPM package names, and the keys are the version numbers of\n       * required NPM packages, just like in [Npm.depends](#Npm-depends).\n       * @memberOf Package\n       * @locus package.js\n       */\n      registerBuildPlugin: function (options) {\n        // Tests don't have plugins; plugins initialized in the control file\n        // belong to the package and not to the test. (This will be less\n        // confusing in the new control file format).\n        if (self.isTest) {\n          return;\n        }\n\n        if (! ('name' in options)) {\n          buildmessage.error(\"build plugins require a name\",\n                             { useMyCaller: true });\n          // recover by ignoring plugin\n          return;\n        }\n\n        if (options.name in self.pluginInfo) {\n          buildmessage.error(\"this package already has a plugin named '\" +\n                             options.name + \"'\",\n                             { useMyCaller: true });\n          // recover by ignoring plugin\n          return;\n        }\n\n        if (options.name.match(/\\.\\./) || options.name.match(/[\\\\\\/]/)) {\n          buildmessage.error(\"bad plugin name\", { useMyCaller: true });\n          // recover by ignoring plugin\n          return;\n        }\n\n        // XXX probably want further type checking\n        self.pluginInfo[options.name] = options;\n      },\n\n      /**\n       * @deprecated in 0.9.4\n       */\n      _transitional_registerBuildPlugin: function (options) {\n        this.registerBuildPlugin(options);\n      },\n\n      includeTool: function () {\n        if (!files.inCheckout()) {\n          buildmessage.error(\"Package.includeTool() can only be used with a \" +\n                             \"checkout of meteor\");\n        } else if (self.includeTool) {\n          buildmessage.error(\"Duplicate includeTool call\");\n        } else {\n          self.includeTool = true;\n        }\n      }\n    };\n\n    // == 'Npm' object visible in package.js ==\n\n    /**\n     * @namespace Npm\n     * @global\n     * @summary The Npm object in package.js and package source files.\n     */\n    var Npm = {\n      /**\n       * @summary Specify which [NPM](https://www.npmjs.org/) packages\n       * your Meteor package depends on.\n       * @param  {Object} dependencies An object where the keys are package\n       * names and the values are version numbers in string form or URLs to a\n       * git commit by SHA.  You can only depend on exact versions of NPM\n       * packages. Example:\n       *\n       * ```js\n       * Npm.depends({\n       *   moment: \"2.8.3\",\n       *   async: \"https://github.com/caolan/async/archive/71fa2638973dafd8761fa5457c472a312cc820fe.tar.gz\"\n       * });\n       * ```\n       * @locus package.js\n       * @memberOf  Npm\n       */\n      depends: function (_npmDependencies) {\n        // XXX make npmDependencies be separate between use and test, so that\n        // production doesn't have to ship all of the npm modules used by test\n        // code\n        if (npmDependencies) {\n          buildmessage.error(\"Npm.depends may only be called once per package\",\n                             { useMyCaller: true });\n          // recover by ignoring the Npm.depends line\n          return;\n        }\n        if (typeof _npmDependencies !== 'object') {\n          buildmessage.error(\"the argument to Npm.depends should be an \" +\n                             \"object, like this: {gcd: '0.0.0'}\",\n                             { useMyCaller: true });\n          // recover by ignoring the Npm.depends line\n          return;\n        }\n\n        // don't allow npm fuzzy versions so that there is complete\n        // consistency when deploying a meteor app\n        //\n        // XXX use something like seal or lockdown to have *complete*\n        // confidence we're running the same code?\n        try {\n          utils.ensureOnlyExactVersions(_npmDependencies);\n        } catch (e) {\n          buildmessage.error(e.message, { useMyCaller: true, downcase: true });\n          // recover by ignoring the Npm.depends line\n          return;\n        }\n\n        npmDependencies = _npmDependencies;\n      },\n\n      // The `Npm.strip` method makes up for packages that have missing\n      // or incomplete .npmignore files by telling the bundler to strip out\n      // certain unnecessary files and/or directories during `meteor build`.\n      //\n      // The `discards` parameter should be an object whose keys are\n      // top-level package names and whose values are arrays of strings\n      // (or regular expressions) that match paths in that package's\n      // directory that should be stripped before installation. For\n      // example:\n      //\n      //   Npm.strip({\n      //     connect: [/*\\.wmv$/],\n      //     useragent: [\"tests/\"]\n      //   });\n      //\n      // This means (1) \"remove any files with the `.wmv` extension from\n      // the 'connect' package directory\" and (2) \"remove the 'tests'\n      // directory from the 'useragent' package directory.\"\n      strip: function(discards) {\n        self.npmDiscards.merge(discards);\n      },\n\n      require: function (name) {\n        try {\n          return require(name); // from the dev bundle\n        } catch (e) {\n          buildmessage.error(\n            \"can't find npm module '\" + name +\n              \"'. In package.js, Npm.require can only find built-in modules.\",\n            { useMyCaller: true });\n          // recover by, uh, returning undefined, which is likely to\n          // have some knock-on effects\n          return undefined;\n        }\n      }\n    };\n\n    // == 'Cordova' object visible in package.js ==\n\n    /**\n     * @namespace Cordova\n     * @global\n     * @summary The Cordova object in package.js.\n     */\n    var Cordova = {\n      /**\n       * @summary Specify which [Cordova / PhoneGap](http://cordova.apache.org/)\n       * plugins your Meteor package depends on.\n       *\n       * Plugins are installed from\n       * [plugins.cordova.io](http://plugins.cordova.io/), so the plugins and\n       * versions specified must exist there. Alternatively, the version\n       * can be replaced with a GitHub tarball URL as described in the\n       * [Cordova](https://github.com/meteor/meteor/wiki/Meteor-Cordova-integration#meteor-packages-with-cordova-dependencies)\n       * page of the Meteor wiki on GitHub.\n       * @param  {Object} dependencies An object where the keys are plugin\n       * names and the values are version numbers or GitHub tarball URLs\n       * in string form.\n       * Example:\n       *\n       * ```js\n       * Cordova.depends({\n       *   \"org.apache.cordova.camera\": \"0.3.0\"\n       * });\n       * ```\n       *\n       * Alternatively, with a GitHub URL:\n       *\n       * ```js\n       * Cordova.depends({\n       *   \"org.apache.cordova.camera\":\n       *     \"https://github.com/apache/cordova-plugin-camera/tarball/d84b875c449d68937520a1b352e09f6d39044fbf\"\n       * });\n       * ```\n       *\n       * @locus package.js\n       * @memberOf  Cordova\n       */\n      depends: function (_cordovaDependencies) {\n        // XXX make cordovaDependencies be separate between use and test, so that\n        // production doesn't have to ship all of the npm modules used by test\n        // code\n        if (cordovaDependencies) {\n          buildmessage.error(\"Cordova.depends may only be called once per package\",\n                             { useMyCaller: true });\n          // recover by ignoring the Cordova.depends line\n          return;\n        }\n        if (typeof _cordovaDependencies !== 'object') {\n          buildmessage.error(\"the argument to Cordova.depends should be an \" +\n                             \"object, like this: {gcd: '0.0.0'}\",\n                             { useMyCaller: true });\n          // recover by ignoring the Cordova.depends line\n          return;\n        }\n\n        // don't allow cordova fuzzy versions so that there is complete\n        // consistency when deploying a meteor app\n        //\n        // XXX use something like seal or lockdown to have *complete*\n        // confidence we're running the same code?\n        try {\n          utils.ensureOnlyExactVersions(_cordovaDependencies);\n        } catch (e) {\n          buildmessage.error(e.message, { useMyCaller: true, downcase: true });\n          // recover by ignoring the Npm.depends line\n          return;\n        }\n\n        cordovaDependencies = _cordovaDependencies;\n      },\n    };\n\n    try {\n      files.runJavaScript(code.toString('utf8'), {\n        filename: 'package.js',\n        symbols: { Package: Package, Npm: Npm, Cordova: Cordova }\n      });\n    } catch (e) {\n      buildmessage.exception(e);\n\n      // Could be a syntax error or an exception. Recover by\n      // continuing as if package.js is empty. (Pressing on with\n      // whatever handlers were registered before the exception turns\n      // out to feel pretty disconcerting -- definitely violates the\n      // principle of least surprise.) Leave the metadata if we have\n      // it, though.\n      fileAndDepLoader = null;\n      self.pluginInfo = {};\n      npmDependencies = null;\n      cordovaDependencies = null;\n    }\n\n    // In the past, we did not require a Package.Describe.name field. So, it is\n    // possible that we are initializing a package that doesn't use it and\n    // expects us to be implicit about it.\n    if (!self.name) {\n      // For backwards-compatibility, we will take the package name from the\n      // directory of the package. That was what we used to do: in fact, we used\n      // to only do that.\n      self.name = files.pathBasename(dir);\n    }\n\n    // Check to see if our name is valid.\n\n    try {\n      utils.validatePackageName(self.name);\n    } catch (e) {\n      if (!e.versionParserError)\n        throw e;\n      buildmessage.error(e.message);\n      // recover by ignoring\n    }\n\n    // We want the \"debug mode\" to be a property of the *bundle* operation\n    // (turning a set of packages, including the app, into a star), not the\n    // *compile* operation (turning a package source into an isopack). This is\n    // so we don't have to publish two versions of each package. But we have no\n    // way to mark a file in an isopack as being the result of running a plugin\n    // from a debugOnly dependency, and so there is no way to tell which files\n    // to exclude in production mode from a published package. Eventually, we'll\n    // add such a flag to the isopack format, but until then we'll sidestep the\n    // issue by disallowing build plugins in debugOnly packages.\n    if (self.debugOnly && !_.isEmpty(self.pluginInfo)) {\n      buildmessage.error(\n        \"can't register build plugins in debugOnly packages\");\n      // recover by ignoring\n    }\n\n    // For this old-style, onUse/onTest/where-based package, figure\n    // out its dependencies by calling its on_xxx functions and seeing\n    // what it does.\n    //\n    // We have a simple strategy. Call its on_xxx handler with no\n    // 'where', which is what happens when the package is added\n    // directly to an app, and see what files it adds to the client\n    // and the server. When a package is used, include it in both the client\n    // and the server by default. This simple strategy doesn't capture even\n    // 10% of the complexity possible with onUse, onTest, and where, but\n    // probably is sufficient for virtually all packages that actually\n    // exist in the field, if not every single one. #OldStylePackageSupport\n\n    var api = new packageAPIModule.PackageAPI({\n      buildingIsopackets: !!initFromPackageDirOptions.buildingIsopackets\n    });\n\n    if (fileAndDepLoader) {\n      try {\n        buildmessage.markBoundary(fileAndDepLoader)(api);\n      } catch (e) {\n        console.log(e.stack); // XXX should we keep this here -- or do we want broken\n                              // packages to fail silently?\n        buildmessage.exception(e);\n\n        // Recover by ignoring all of the source files in the\n        // packages and any remaining handlers. It violates the\n        // principle of least surprise to half-run a handler\n        // and then continue.\n        api.files = {};\n        _.each(compiler.ALL_ARCHES, function (arch) {\n          api.files[arch] = {\n            sources: [],\n            assets: []\n          };\n        });\n\n        fileAndDepLoader = null;\n        self.pluginInfo = {};\n        npmDependencies = null;\n        cordovaDependencies = null;\n      }\n    }\n\n    // By the way, you can't depend on yourself.\n    var doNotDepOnSelf = function (dep) {\n      if (dep.package === self.name) {\n        buildmessage.error(\"Circular dependency found: \"\n                           + self.name +\n                           \" depends on itself.\\n\");\n      }\n    };\n    _.each(compiler.ALL_ARCHES, function (label) {\n      _.each(api.uses[label], doNotDepOnSelf);\n      _.each(api.implies[label], doNotDepOnSelf);\n    });\n\n    // Cause packages that use `prodOnly` to automatically depend on the\n    // `isobuild:prod-only` feature package, which will cause an error\n    // when a package using `prodOnly` is run by a version of the tool\n    // that doesn't support the feature.  The choice of 'os' architecture\n    // is arbitrary, as the version solver combines the dependencies of all\n    // arches.\n    if (self.prodOnly) {\n      api.uses['os'].push({\n        package: 'isobuild:prod-only', constraint: '1.0.0'\n      });\n    }\n\n    // If we have specified some release, then we should go through the\n    // dependencies and fill in the unspecified constraints with the versions in\n    // the releases (if possible).\n    if (!_.isEmpty(api.releaseRecords)) {\n\n      // Given a dependency object with keys package (the name of the package)\n      // and constraint (the version constraint), if the constraint is null,\n      // look in the packages field in the release record and fill in from\n      // there.\n      var setFromRel = function (dep) {\n        if (dep.constraint) {\n          return dep;\n        }\n        var newConstraint = [];\n        _.each(api.releaseRecords, function (releaseRecord) {\n          var packages = releaseRecord.packages;\n          if(_.has(packages, dep.package)) {\n            newConstraint.push(packages[dep.package]);\n          }\n        });\n        if (_.isEmpty(newConstraint)) return dep;\n        dep.constraint = _.reduce(newConstraint,\n          function(x, y) {\n            return x + \" || \" + y;\n          });\n        return dep;\n      };\n\n      // For all api.implies and api.uses, fill in the unspecified dependencies from the\n      // release.\n      _.each(compiler.ALL_ARCHES, function (label) {\n        api.uses[label] = _.map(api.uses[label], setFromRel);\n        api.implies[label] = _.map(api.implies[label], setFromRel);\n      });\n     };\n\n    // Make sure that if a dependency was specified in multiple\n    // unibuilds, the constraint is exactly the same.\n    if (! self._checkCrossUnibuildVersionConstraints()) {\n      // A build error was written. Recover by ignoring the\n      // fact that we have differing constraints.\n    }\n\n    // Save information about npm dependencies. To keep metadata\n    // loading inexpensive, we won't actually fetch them until build\n    // time.\n\n    // We used to put the cache directly in .npm, but in linker-land,\n    // the package's own NPM dependencies go in .npm/package and build\n    // plugin X's goes in .npm/plugin/X. Notably, the former is NOT an\n    // ancestor of the latter, so that a build plugin does NOT see the\n    // package's node_modules.  XXX maybe there should be separate NPM\n    // dirs for use vs test?\n    self.npmCacheDirectory =\n      files.pathResolve(files.pathJoin(self.sourceRoot, '.npm', 'package'));\n    self.npmDependencies = npmDependencies;\n\n    self.cordovaDependencies = cordovaDependencies;\n\n    // If this package was previously built with pre-linker versions,\n    // it may have files directly inside `.npm` instead of nested\n    // inside `.npm/package`. Clean them up if they are there. (Kind\n    // of grody to do this here but it'll be fine for now, especially\n    // since this is only for compatibility with very old versions of\n    // Meteor.)\n    var preLinkerFiles = [\n      'npm-shrinkwrap.json', 'README', '.gitignore', 'node_modules'];\n    _.each(preLinkerFiles, function (f) {\n      files.rm_recursive(files.pathJoin(self.sourceRoot, '.npm', f));\n    });\n\n    // Create source architectures, one for the server and one for each web\n    // arch.\n    _.each(compiler.ALL_ARCHES, function (arch) {\n      // Everything depends on the package 'meteor', which sets up\n      // the basic environment) (except 'meteor' itself).\n      if (self.name !== \"meteor\" && !process.env.NO_METEOR_PACKAGE) {\n        // Don't add the dependency if one already exists. This allows the\n        // package to create an unordered dependency and override the one that\n        // we'd add here. This is necessary to resolve the circular dependency\n        // between meteor and underscore (underscore has an unordered\n        // dependency on meteor dating from when the .js extension handler was\n        // in the \"meteor\" package).\n        var alreadyDependsOnMeteor =\n              !! _.find(api.uses[arch], function (u) {\n                return u.package === \"meteor\";\n              });\n        if (! alreadyDependsOnMeteor)\n          api.uses[arch].unshift({ package: \"meteor\" });\n      }\n\n      // Each unibuild has its own separate WatchSet. This is so that, eg, a test\n      // unibuild's dependencies doesn't end up getting merged into the\n      // pluginWatchSet of a package that uses it: only the use unibuild's\n      // dependencies need to go there!\n      var watchSet = new watch.WatchSet();\n      watchSet.addFile(packageJsPath, packageJsHash);\n\n      self.architectures.push(new SourceArch(self, {\n        kind: \"main\",\n        arch: arch,\n        uses: api.uses[arch],\n        implies: api.implies[arch],\n        getFiles: function () {\n          return api.files[arch];\n        },\n        declaredExports: api.exports[arch],\n        watchSet: watchSet\n      }));\n    });\n\n    // Serve root of the package.\n    self.serveRoot = files.pathJoin('/packages/', self.name);\n\n    // Name of the test.\n    if (hasTests) {\n      self.testName = genTestName(self.name);\n    }\n  },\n\n  // Initialize a package from an application directory (has .meteor/packages).\n  initFromAppDir: Profile(\"initFromAppDir\", function (projectContext, ignoreFiles) {\n    var self = this;\n    var appDir = projectContext.projectDir;\n    self.name = null;\n    self.sourceRoot = appDir;\n    self.serveRoot = '/';\n\n    // special files those are excluded from app's top-level sources\n    var controlFiles = ['mobile-config.js'];\n\n    // Determine used packages. Note that these are the same for all arches,\n    // because there's no way to specify otherwise in .meteor/packages.\n    var uses = [];\n    projectContext.projectConstraintsFile.eachConstraint(function (constraint) {\n      uses.push({ package: constraint.package,\n                  constraint: constraint.constraintString });\n    });\n\n    var projectWatchSet = projectContext.getProjectWatchSet();\n\n    _.each(compiler.ALL_ARCHES, function (arch) {\n      // We don't need to build a Cordova SourceArch if there are no Cordova\n      // platforms.\n      if (arch === 'web.cordova' &&\n          _.isEmpty(projectContext.platformList.getCordovaPlatforms())) {\n        return;\n      }\n\n      // XXX what about /web.browser/* etc, these directories could also\n      // be for specific client targets.\n\n      // Create unibuild\n      var sourceArch = new SourceArch(self, {\n        kind: 'app',\n        arch: arch,\n        uses: uses\n      });\n      self.architectures.push(sourceArch);\n\n      // sourceArch's WatchSet should include all the project metadata files\n      // read by the ProjectContext.\n      sourceArch.watchSet.merge(projectWatchSet);\n\n      // Determine source files\n      sourceArch.getFiles = (sourceProcessorSet, watchSet) => {\n        const sourceReadOptions =\n                sourceProcessorSet.appReadDirectoryOptions(arch);\n        // Ignore files starting with dot (unless they are explicitly in\n        // 'names').\n        sourceReadOptions.exclude.push(/^\\./);\n        // Ignore the usual ignorable files.\n        sourceReadOptions.exclude.push(...ignoreFiles);\n\n        // Wrapper around watch.readAndWatchDirectory which takes in and returns\n        // sourceRoot-relative directories.\n        var readAndWatchDirectory = (relDir, {include, exclude, names}) => {\n          var absPath = files.pathJoin(self.sourceRoot, relDir);\n          var contents = watch.readAndWatchDirectory(\n            watchSet, {absPath, include, exclude, names});\n          return contents.map(x => files.pathJoin(relDir, x));\n        };\n\n        // Read top-level source files.\n        var sources = readAndWatchDirectory('', sourceReadOptions);\n\n        // don't include watched but not included control files\n        sources = _.difference(sources, controlFiles);\n\n        var otherUnibuildRegExp =\n              (arch === \"os\" ? /^client\\/$/ : /^server\\/$/);\n\n        // The paths that we've called checkForInfiniteRecursion on.\n        var seenPaths = {};\n        // Used internally by files.realpath as an optimization.\n        var realpathCache = {};\n        var checkForInfiniteRecursion = function (relDir) {\n          var absPath = files.pathJoin(self.sourceRoot, relDir);\n          try {\n            var realpath = files.realpath(absPath, realpathCache);\n          } catch (e) {\n            if (!e || e.code !== 'ELOOP')\n              throw e;\n            // else leave realpath undefined\n          }\n          if (realpath === undefined || _.has(seenPaths, realpath)) {\n            buildmessage.error(\"Symlink cycle detected at \" + relDir);\n            // recover by returning no files\n            return true;\n          }\n          seenPaths[realpath] = true;\n          return false;\n        };\n\n        // Read top-level subdirectories. Ignore subdirectories that have\n        // special handling.\n        var sourceDirectories = readAndWatchDirectory('', {\n          include: [/\\/$/],\n          exclude: [/^packages\\/$/, /^tests\\/$/,\n                    // XXX We no longer actually have special handling\n                    //     for the programs subdirectory, but let's not\n                    //     suddenly start treating it as part of the main\n                    //     app program.\n                    /^programs\\/$/,\n                    // node.js based tooling often uses dependencies which\n                    // are installed into node_modules in the root of the\n                    // project.\n                    /^node_modules\\/$/,\n                    /^public\\/$/, /^private\\/$/,\n                    /^cordova-build-override\\/$/,\n                    otherUnibuildRegExp].concat(sourceReadOptions.exclude)\n        });\n        checkForInfiniteRecursion('');\n\n        while (!_.isEmpty(sourceDirectories)) {\n          var dir = sourceDirectories.shift();\n\n          // remove trailing slash\n          dir = dir.substr(0, dir.length - 1);\n\n          if (checkForInfiniteRecursion(dir))\n            return [];  // pretend we found no files\n\n          // Find source files in this directory.\n          sources.push(...readAndWatchDirectory(dir, sourceReadOptions));\n\n          // Find sub-sourceDirectories. Note that we DON'T need to ignore the\n          // directory names that are only special at the top level.\n          sourceDirectories.push(...readAndWatchDirectory(dir, {\n            include: [/\\/$/],\n            exclude: [/^tests\\/$/, otherUnibuildRegExp].concat(\n              sourceReadOptions.exclude)\n          }));\n        }\n\n        // We've found all the source files. Sort them!\n        sources.sort(loadOrderSort(sourceProcessorSet, arch));\n\n        // Convert into relPath/fileOptions objects.\n        sources = _.map(sources, function (relPath) {\n          var sourceObj = {relPath: relPath};\n\n          // Special case: on the client, JavaScript files in a\n          // `client/compatibility` directory don't get wrapped in a closure.\n          if (archinfo.matches(arch, \"web\") && relPath.match(/\\.js$/)) {\n            var clientCompatSubstr =\n              files.pathSep + 'client' +\n              files.pathSep + 'compatibility' + files.pathSep;\n\n            if ((files.pathSep + relPath).indexOf(clientCompatSubstr) !== -1)\n              sourceObj.fileOptions = {bare: true};\n          }\n          return sourceObj;\n        });\n\n        // Now look for assets for this unibuild.\n        const assetDir = archinfo.matches(arch, \"web\") ? \"public/\" : \"private/\";\n        var assetDirs = readAndWatchDirectory('', {names: [assetDir]});\n\n        const assets = [];\n\n        if (!_.isEmpty(assetDirs)) {\n          if (!_.isEqual(assetDirs, [assetDir]))\n            throw new Error(\"Surprising assetDirs: \" + JSON.stringify(assetDirs));\n\n          while (!_.isEmpty(assetDirs)) {\n            dir = assetDirs.shift();\n            // remove trailing slash\n            dir = dir.substr(0, dir.length - 1);\n\n            if (checkForInfiniteRecursion(dir))\n              return [];  // pretend we found no files\n\n            // Find asset files in this directory.\n            var assetsAndSubdirs = readAndWatchDirectory(dir, {\n              include: [/.?/],\n              // we DO look under dot directories here\n              exclude: ignoreFiles\n            });\n\n            _.each(assetsAndSubdirs, function (item) {\n              if (item[item.length - 1] === '/') {\n                // Recurse on this directory.\n                assetDirs.push(item);\n              } else {\n                // This file is an asset.\n                assets.push({\n                  relPath: item\n                });\n              }\n            });\n          }\n        }\n\n        return {\n          sources,\n          assets\n        };\n      };\n    });\n\n    if (! self._checkCrossUnibuildVersionConstraints()) {\n      // should never happen since we created the unibuilds from\n      // .meteor/packages, which doesn't have a way to express\n      // different constraints for different unibuilds\n      throw new Error(\"conflicting constraints in a package?\");\n    }\n  }),\n\n  // True if the package defines any plugins.\n  containsPlugins: function () {\n    var self = this;\n    return ! _.isEmpty(self.pluginInfo);\n  },\n\n  // Return dependency metadata for all unibuilds, in the format needed\n  // by the package catalog.\n  //\n  // This *DOES* include isobuild:* pseudo-packages!\n  //\n  // Options:\n  // - logError: if true, if something goes wrong, log a buildmessage\n  //   and return null rather than throwing an exception.\n  // - skipWeak: omit weak dependencies\n  // - skipUnordered: omit unordered dependencies\n  getDependencyMetadata: function (options) {\n    var self = this;\n    options = options || {};\n    var ret = self._computeDependencyMetadata(options);\n    if (! ret) {\n      if (options.logError)\n        return null;\n      else\n        throw new Error(\"inconsistent dependency constraint across unibuilds?\");\n    }\n    return ret;\n  },\n\n  // Returns a list of package names which should be loaded before building this\n  // package. This is all the packages that we directly depend on in a unibuild\n  // or from a plugin.\n  //\n  // (It's possible that we could do something slightly fancier where we only\n  // need to load those dependencies (including implied dependencies) which we\n  // know contain plugins first, plus the transitive closure of all the packages\n  // we depend on which contain a plugin. This seems good enough, though.)\n  //\n  // Note that this method filters out isobuild:* pseudo-packages, so it is NOT\n  // to be used to create input to Version Solver (see\n  // _computeDependencyMetadata for that).\n  //\n  // Note also that \"load\" here specifically means \"load into the IsopackCache\n  // at build time\", not \"load into a running Meteor app at run\n  // time\". Specifically, weak constraints do create a run-time load order\n  // dependency (if the package is in the app at all) but they do not create a\n  // build-time IsopackCache load order dependency (because weak dependencies do\n  // not provide plugins).\n  getPackagesToLoadFirst: function (packageMap) {\n    var self = this;\n    var packages = {};\n    var processUse = function (use) {\n      // We don't have to build weak or unordered deps first (eg they can't\n      // contribute to a plugin).\n      if (use.weak || use.unordered)\n        return;\n      // Only include real packages, not isobuild:* pseudo-packages.\n      if (compiler.isIsobuildFeaturePackage(use.package)) {\n        return;\n      }\n\n      var packageInfo = packageMap.getInfo(use.package);\n      if (! packageInfo)\n        throw Error(\"Depending on unknown package \" + use.package);\n      packages[use.package] = true;\n    };\n\n    _.each(self.architectures, function (arch) {\n      // We need to iterate over both uses and implies, since implied packages\n      // also constitute dependencies. We don't have to include the dependencies\n      // of implied packages directly here, since their own\n      // getPackagesToLoadFirst will include those.\n      _.each(arch.uses, processUse);\n      _.each(arch.implies, processUse);\n    });\n\n    _.each(self.pluginInfo, function (info) {\n      // info.use is currently just an array of strings, and there's\n      // no way to specify weak/unordered. Much like an app.\n      _.each(info.use, function (spec) {\n        var parsedSpec = splitConstraint(spec);\n        if (! compiler.isIsobuildFeaturePackage(parsedSpec.package)) {\n          packages[parsedSpec.package] = true;\n        }\n      });\n    });\n    return _.keys(packages);\n  },\n\n  // Returns an array of objects, representing this package's public\n  // exports. Each object has the following keys:\n  //  - name: export name (ex: \"Accounts\")\n  //  - arch: an array of strings representing architectures for which this\n  //    export is declared.\n  //\n  // This ignores testOnly exports.\n  getExports: function () {\n    var self = this;\n    var ret = {};\n    // Go over all of the architectures, and aggregate the exports together.\n    _.each(self.architectures, function (arch) {\n      _.each(arch.declaredExports, function (exp) {\n        // Skip testOnly exports -- the flag is intended for use in testing\n        // only, so it is not of any interest outside this package.\n        if (exp.testOnly) {\n          return;\n        }\n        // Add the export to the export map.\n        if (! _.has(ret, exp.name)) {\n          ret[exp.name] = [arch.arch];\n        } else {\n          ret[exp.name].push(arch.arch);\n        }\n     });\n    });\n    return _.map(ret, function (arches, name) {\n      return { name: name, architectures: arches };\n    });\n   },\n\n  // Processes the documentation provided in Package.describe. Returns an object\n  // with the following keys:\n  //   - path: full filepath to the Readme file\n  //   - excerpt: the subsection between the first and second heading of the\n  //     Readme, to be used as a longform package description.\n  //   - hash: hash of the full text of this Readme, or \"\" if the Readme is\n  //     blank.\n  //\n  // Returns null if the documentation is marked as null, or throws a\n  // buildmessage error if the documentation could not be read.\n  //\n  // This function reads and performs string operations on a (potentially) long\n  // file. We do not call it unless we actually need this information.\n  processReadme: function () {\n    var self = this;\n    buildmessage.assertInJob();\n    if (! self.metadata.documentation) {\n      return null;\n    }\n\n    // To ensure atomicity, we want to copy the README to a temporary file.\n    var ret = {};\n    ret.path =\n      files.pathJoin(self.sourceRoot, self.metadata.documentation);\n    // Read in the text of the Readme.\n    try {\n      var fullReadme = files.readFile(ret.path);\n    } catch (err) {\n      var errorMessage = \"\";\n      if (err.code === \"ENOENT\") {\n        // This is the most likely and common case, especially when we are\n        // inferring the docs as a default value.\n        errorMessage = \"Documentation not found: \" + self.metadata.documentation;\n      } else {\n        // This is weird, and we don't usually protect the user from errors like\n        // this, but maybe we should.\n        errorMessage =\n          \"Documentation couldn't be read: \" + self.metadata.documentation + \" \";\n        errorMessage += \"(Error: \" + err.message + \")\";\n      }\n\n      // The user might not understand that we are automatically inferring\n      // README.md as the docs! If they want to avoid pushing anything, explain\n      // how to do that.\n      if (! self.docsExplicitlyProvided) {\n        errorMessage += \"\\n\" +\n          \"If you don't want to publish any documentation, \" +\n          \"please set 'documentation: null' in Package.describe\";\n      }\n      buildmessage.error(errorMessage);\n      // Recover by returning null\n      return null;\n    }\n\n    var text = fullReadme.toString();\n    return {\n      contents: text,\n      hash: utils.sha256(text),\n      excerpt: getExcerptFromReadme(text)\n    };\n  },\n\n  // If dependencies aren't consistent across unibuilds, return false and\n  // also log a buildmessage error if inside a buildmessage job. Else\n  // return true.\n  // XXX: Check that this is used when refactoring is done.\n  _checkCrossUnibuildVersionConstraints: function () {\n    var self = this;\n    return !! self._computeDependencyMetadata({ logError: true });\n  },\n\n  // Compute the return value for getDependencyMetadata, or return\n  // null if there is a dependency that doesn't have the same\n  // constraint across all unibuilds (and, if logError is true, log a\n  // buildmessage error).\n  //\n  // This *DOES* include isobuild:* pseudo-packages!\n  //\n  // For options, see getDependencyMetadata.\n  _computeDependencyMetadata: function (options) {\n    var self = this;\n    options = options || {};\n\n    var dependencies = {};\n    var allConstraints = {}; // for error reporting. package name to array\n    var failed = false;\n\n    _.each(self.architectures, function (arch) {\n      // We need to iterate over both uses and implies, since implied packages\n      // also constitute dependencies.\n      var processUse = function (implied, use) {\n        // We can't really have a weak implies (what does that even mean?) but\n        // we check for that elsewhere.\n        if ((use.weak && options.skipWeak) ||\n            (use.unordered && options.skipUnordered))\n          return;\n\n        if (!_.has(dependencies, use.package)) {\n          dependencies[use.package] = {\n            constraint: null,\n            references: []\n          };\n          allConstraints[use.package] = [];\n        }\n        var d = dependencies[use.package];\n\n        if (use.constraint) {\n          allConstraints[use.package].push(use.constraint);\n\n          if (d.constraint === null) {\n            d.constraint = use.constraint;\n          } else if (d.constraint !== use.constraint) {\n            failed = true;\n          }\n        }\n\n        var reference = {\n          arch: archinfo.withoutSpecificOs(arch.arch)\n        };\n        if (use.weak) {\n          reference.weak = true;\n        }\n        if (use.unordered) {\n          reference.unordered = true;\n        }\n        if (implied) {\n          reference.implied = true;\n        }\n        d.references.push(reference);\n      };\n      _.each(arch.uses, _.partial(processUse, false));\n      _.each(arch.implies, _.partial(processUse, true));\n    });\n\n    _.each(self.pluginInfo, function (info) {\n      _.each(info.use, function (spec) {\n        var parsedSpec = splitConstraint(spec);\n        if (!_.has(dependencies, parsedSpec.package)) {\n          dependencies[parsedSpec.package] = {\n            constraint: null,\n            references: []\n          };\n          allConstraints[parsedSpec.package] = [];\n        }\n        var d = dependencies[parsedSpec.package];\n\n        if (parsedSpec.constraint) {\n          allConstraints[parsedSpec.package].push(parsedSpec.constraint);\n          if (d.constraint === null) {\n            d.constraint = parsedSpec.constraint;\n          } else if (d.constraint !== parsedSpec.constraint) {\n            failed = true;\n          }\n        }\n        d.references.push({arch: 'plugin'});\n      });\n    });\n\n    if (failed && options.logError) {\n      _.each(allConstraints, function (constraints, name) {\n        constraints = _.uniq(constraints);\n        if (constraints.length > 1) {\n          buildmessage.error(\n            \"The version constraint for a dependency must be the same \" +\n              \"at every place it is mentioned in a package. \" +\n              \"'\" + name + \"' is constrained both as \"  +\n              constraints.join(' and ') + \". Change them to match.\");\n          // recover by returning false (the caller had better detect\n          // this and use its own recovery logic)\n        }\n      });\n    }\n\n    return failed ? null : dependencies;\n  },\n\n  displayName() {\n    return this.name === null ? 'the app' : this.name;\n  }\n});\n\nmodule.exports = PackageSource;\n"]}