{"version":3,"sources":["/tools/meteor-services/auth.js"],"names":[],"mappings":"AAAA,IAAI,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAC9B,IAAI,KAAK,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACzC,IAAI,KAAK,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACtC,IAAI,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACpC,IAAI,WAAW,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;AACtD,IAAI,YAAY,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AACxD,IAAI,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACzC,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACtC,IAAI,UAAU,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AACtD,IAAI,OAAO,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC,OAAO,CAAC;;AAEvD,IAAI,IAAI,GAAG,OAAO,CAAC;;AAEnB,IAAI,iBAAiB,GAAG,YAAY;AAClC,SAAO,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAC/B,CAAC;;;;AAIF,IAAI,sBAAsB,GAAG,YAAY;AACvC,MAAI,GAAG,GAAG,iBAAiB,EAAE,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC;AAChD,SAAO,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE;AACzC,WAAO,EAAE,EAAE,YAAY,EAAE,WAAW,CAAC,YAAY,EAAE,EAAE;GACtD,CAAC,CAAC;CACJ,CAAC;;;;;AAKF,IAAI,sBAAsB,GAAG,UAAU,CAAC,EAAE;AACxC,SAAO,YAAmB;AACxB,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,IAAI,GAAG,sBAAsB,EAAE,CAAC;;sCAFlB,IAAI;AAAJ,UAAI;;;AAGtB,QAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChB,QAAI;AACF,UAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAClC,SAAS;AACR,UAAI,CAAC,KAAK,EAAE,CAAC;KACd;AACD,WAAO,MAAM,CAAC;GACf,CAAC;CACH,CAAC;;;;;;;AAOF,IAAI,0BAA0B,GAAG,UAAU,KAAK,EAAE;AAChD,MAAI,UAAU,GAAG,iBAAiB,EAAE,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,OAAO,CAC5D,MAAM,CAAC,aAAa,EAAE,CACvB,CAAC;;AAEF,MAAI,GAAG,GAAG,IAAI,MAAM,EAAA,CAAC;AACrB,YAAU,CAAC,KAAK,CACd,OAAO,EACP,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EACnB,EAAE,IAAI,EAAE,IAAI,EAAE,EACd,UAAU,GAAG,EAAE,MAAM,EAAE;AACrB,OAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;GAC7C,CACF,CAAC;AACF,MAAI,OAAO,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;;AAEzB,MAAI,OAAO,CAAC,GAAG,EAAE;AACf,cAAU,CAAC,KAAK,EAAE,CAAC;;AAEnB,QAAI,OAAO,CAAC,GAAG,CAAC,KAAK,KAAK,GAAG,EAAE;;;;AAI7B,aAAO,IAAI,CAAC;KACb;;;AAGD,UAAM,OAAO,CAAC,GAAG,CAAC;GACnB;;AAED,SAAO,UAAU,CAAC;CACnB,CAAC;;;;;;;;;;;;;;AAcF,IAAI,mBAAmB,GAAG,UAAU,UAAU,EAAE,OAAO,EAAE;AACvD,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,SAAO,YAAmB;uCAAN,IAAI;AAAJ,UAAI;;;AACtB,QAAI,CAAC,IAAI,CAAC;AACR,aAAO,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,IAAI,IAAI;KAC/D,CAAC,CAAC;AACH,QAAI,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;AACvB,QAAI,IAAI,GAAG,OAAO,CAAC,UAAU,IAAI,sBAAsB,EAAE,CAAC;AAC1D,QAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,YAAY,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;AAClE,QAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;AACjC,UAAI,KAAK,GAAG,UAAU,CAAC,YAAY,CAAC,eAAe,CAAC,YAAY;AAC9D,YAAI,CAAC,GAAG,CAAC,UAAU,EAAE,EACnB,GAAG,SAAM,CAAC,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;OACjD,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;KACtB;AACD,QAAI;AACF,UAAI,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;KACzB,SAAS;AACR,UAAI,KAAK,EAAE;AACT,oBAAY,CAAC,KAAK,CAAC,CAAC;OACrB;AACD,UAAI,CAAE,OAAO,CAAC,UAAU,EACtB,IAAI,CAAC,KAAK,EAAE,CAAC;KAChB;AACD,QAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;AAC5B,UAAI,CAAC,YAAY,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;KAC/D;AACD,WAAO,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC;GAChC,CAAC;CACH,CAAC;;AAEF,IAAI,eAAe,GAAG,YAAY;AAChC,MAAI,WAAW,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC;AAC9C,MAAI,CAAE,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,EAC7B,OAAO,EAAE,CAAC;AACZ,SAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;CACtE,CAAC;;AAEF,IAAI,gBAAgB,GAAG,UAAU,IAAI,EAAE;AACrC,MAAI,WAAW,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC;;AAE9C,MAAI,KAAK,GAAG,CAAC,CAAC;AACd,SAAO,IAAI,EAAE;AACX,QAAI,KAAK,EAAE,GAAG,EAAE,EACd,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;;;;;;;AAOlE,QAAI,QAAQ,GACN,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,iBAAiB,GACtD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;AACpD,QAAI;AACF,UAAI,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAK,CAAC,CAAC;KAC5C,CAAC,OAAO,CAAC,EAAE;AACV,eAAS;KACV;;AAED,QAAI;;AAEF,UAAI,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACjE,WAAK,CAAC,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;KACxC,SAAS;AACR,WAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;KACjB;;;;AAID,SAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AACpC,WAAO;GACR;CACF,CAAC;;AAEF,IAAI,UAAU,GAAG,UAAU,WAAW,EAAE,MAAM,EAAE;AAC9C,MAAI,OAAQ,WAAW,CAAC,QAAQ,AAAC,KAAK,QAAQ,EAC5C,WAAW,CAAC,QAAQ,GAAG,EAAE,CAAC;AAC5B,MAAI,OAAQ,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,AAAC,KAAK,QAAQ,EACpD,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;AACpC,SAAO,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;CACrC,CAAC;;;;;;AAMF,IAAI,iBAAiB,GAAG,UAAU,OAAO,EAAE,IAAI,EAAE;AAC/C,MAAI,CAAE,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,EAC1B,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,KACjB,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;;;;;AAK9B,KAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,UAAU,GAAG,EAAE;AACrC,aAAO,OAAO,CAAC,GAAG,CAAC,CAAC;KACrB,CAAC,CAAC;AACH,WAAO,CAAC,IAAI,GAAG,IAAI,CAAC;GACrB;CACF,CAAC;;AAEF,IAAI,2BAA2B,GAAG,UAAU,QAAQ,EAAE;AACpD,MAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,MAAI,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC3D,SAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,kBAAgB,CAAC,IAAI,CAAC,CAAC;CACxB,CAAC;;;;AAIF,IAAI,iBAAiB,GAAG,UAAU,IAAI,EAAE;AACtC,GAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,OAAO,EAAE,MAAM,EAAE;AAC/C,iBAAa,CAAC,OAAO,CAAC,CAAC;GACxB,CAAC,CAAC;CACJ,CAAC;;;;AAIF,IAAI,aAAa,GAAG,UAAU,OAAO,EAAE;AACrC,MAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,SAAO,OAAO,CAAC,QAAQ,CAAC;AACxB,SAAO,OAAO,CAAC,MAAM,CAAC;AACtB,SAAO,OAAO,CAAC,eAAe,CAAC;;AAE/B,MAAI,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE;AAC3B,QAAI,EAAG,OAAO,CAAC,aAAa,YAAY,KAAK,CAAA,AAAC,EAC5C,OAAO,CAAC,aAAa,GAAG,EAAE,CAAC;;;;;;AAM7B,QAAI,OAAO,OAAO,CAAC,OAAO,KAAK,QAAQ,EACrC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9C,WAAO,OAAO,CAAC,KAAK,CAAC;AACrB,WAAO,OAAO,CAAC,OAAO,CAAC;GACxB;CACF,CAAC;;;;AAIF,IAAI,QAAQ,GAAG,UAAU,IAAI,EAAE;AAC7B,SAAO,CAAC,CAAE,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,MAAM,CAAC;CAC/D,CAAC;;;;;AAKF,IAAI,eAAe,GAAG,UAAU,IAAI,EAAE;AACpC,MAAI,WAAW,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC/D,SAAO,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC;CACrC,CAAC;;AAEF,IAAI,mBAAmB,GAAG,UAAU,MAAM,EAAE,QAAQ,EAAE;AACpD,MAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,MAAI,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACvC,SAAO,CAAC,aAAa,GAAG,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;AACtE,MAAI,CAAE,OAAO,CAAC,aAAa,CAAC,MAAM,EAChC,OAAO,OAAO,CAAC,aAAa,CAAC;AAC/B,kBAAgB,CAAC,IAAI,CAAC,CAAC;CACxB,CAAC;;;;;;;;;;;;;;AAcF,IAAI,kBAAkB,GAAG,UAAU,OAAO,EAAE;AAC1C,SAAO,GAAG,CAAC,CAAC,MAAM,CAAC;AACjB,WAAO,EAAE,IAAI;GACd,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC;;AAElB,MAAI,MAAM,GAAG,KAAK,CAAC;AACnB,MAAI,wBAAwB,GAAG,EAAE,CAAC;AAClC,GAAC,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,QAAQ,IAAI,EAAE,EAAE,UAAU,OAAO,EAAE,MAAM,EAAE;AAClE,QAAI,OAAO,CAAC,aAAa,IACrB,OAAO,CAAC,aAAa,CAAC,MAAM,EAC9B,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;GACzC,CAAC,CAAC;;AAEH,MAAI,iBAAiB,GAAG,UAAU,MAAM,EAAE;AACxC,QAAI,CAAE,MAAM,EAAE;;AAEZ,aAAO,CAAC,KAAK,CAAC,WAAW,IACV,OAAO,CAAC,QAAQ,GACjB,UAAU,GAAG,iBAAiB,CAAA,AAAC,GAC9B,uBAAuB,GAAG,MAAM,CAAC,CAAC;AACjD,YAAM,GAAG,IAAI,CAAC;KACf;GACF,CAAC;;AAEF,GAAC,CAAC,IAAI,CAAC,wBAAwB,EAAE,UAAU,MAAM,EAAE;AACjD,QAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,QAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AAC1C,QAAI,QAAQ,GAAG,OAAO,CAAC,aAAa,IAAI,EAAE,CAAC;AAC3C,QAAI,CAAE,QAAQ,CAAC,MAAM,EACnB,OAAO;;AAET,QAAI,GAAG,CAAC;;AAGR,QAAI,OAAO,CAAC,IAAI,KAAK,gBAAgB,EAAE;AACrC,UAAI;AACF,2BAAmB,CAAC,QAAQ,EAAE;AAC5B,iBAAO,EAAE,OAAO,CAAC,OAAO;AACxB,oBAAU,EAAE,OAAO,CAAC,UAAU;SAC/B,CAAC,CAAC,QAAQ,CAAC,CAAC;AACb,2BAAmB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;OACvC,CAAC,OAAO,GAAG,EAAE;AACZ,yBAAiB,CAAC,MAAM,CAAC,CAAC;OAC3B;AACD,aAAO;KACR,MAAM,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;;;;AAIpC,yBAAmB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KACvC,MAAM;;AAEL,uBAAiB,CAAC,MAAM,CAAC,CAAC;AAC1B,aAAO;KACR;GACF,CAAC,CAAC;CACJ,CAAC;;AAEF,IAAI,oBAAoB,GAAG,UAAU,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE;AACjE,MAAI,WAAW,GAAG,MAAM,CAAC,WAAW,EAAE,GAAG,aAAa,GAChD,WAAW,CAAC,SAAS,CAAC;AACpB,SAAK,EAAE,KAAK;AACZ,iBAAa,EAAE,MAAM;AACrB,aAAS,EAAE,QAAQ;AACnB,gBAAY,EAAE,WAAW;GAC1B,CAAC,CAAC;;;;;;AAMT,MAAI,UAAU,GAAG,WAAW,CAAC,OAAO,CAAC;AACnC,OAAG,EAAE,WAAW;AAChB,UAAM,EAAE,MAAM;AACd,aAAS,EAAE,IAAI;AACf,iBAAa,EAAE,IAAI;GACpB,CAAC,CAAC;;AAEH,MAAI,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;AACnC,MAAI,QAAQ,CAAC,UAAU,KAAK,GAAG,IAAI,CAAE,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE;AAC9D,UAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;GAClC;;AAED,MAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,KAC7C,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE;;;;;AAKnC,UAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;GAClC;;AAED,SAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;CAChD,CAAC;;;;;;;;;;;;;;AAcF,IAAI,SAAS,GAAG,UAAU,IAAI,EAAE,OAAO,EAAE;AACvC,MAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,MAAI,eAAe,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;AAE7D,MAAI,eAAe,GAAG,oBAAoB,CACxC,OAAO,CAAC,QAAQ,EAChB,OAAO,CAAC,WAAW,EACnB,eAAe,CAChB,CAAC;;;;;;AAMF,MAAI,cAAc,GAAG,WAAW,CAAC,OAAO,CAAC;AACvC,OAAG,EAAE,eAAe,CAAC,QAAQ,GAAG,oCAAoC;AACpE,UAAM,EAAE,KAAK;AACb,aAAS,EAAE,IAAI;GAChB,CAAC,CAAC;;AAEH,MAAI,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC;;;;AAIvC,MAAI,QAAQ,CAAC,UAAU,KAAK,GAAG,EAAE;AAC/B,UAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;GAClC;;;AAGD,MAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AACrC,SAAK,EAAE;AACL,qBAAe,EAAE,eAAe;AAChC,sBAAgB,EAAE,QAAQ,CAAC,IAAI;KAChC;GACF,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;;AAEpB,MAAI,WAAW,CAAC,KAAK,IAAI,WAAW,CAAC,EAAE,EAAE;AACvC,QAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,QAAI,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AAC/C,qBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;AAChD,WAAO,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;AAClC,oBAAgB,CAAC,IAAI,CAAC,CAAC;AACvB,WAAO,IAAI,CAAC;GACb,MAAM;AACL,UAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;GACjC;CACF,CAAC;;;;;;;;;;;;;AAaF,IAAI,0BAA0B,GAAG,UAAU,OAAO,EAAE;AAClD,MAAI,SAAS,GAAG,EAAE,CAAC;;AAEnB,MAAI,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,EAC5B,SAAS,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,KACnC,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,EAC9B,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,KAEhC,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;;AAE5C,MAAI,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE;AAC9B,aAAS,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;GACvC;;AAED,MAAI,WAAW,GAAG,YAAY;AAC5B,QAAI,CAAE,OAAO,CAAC,oBAAoB,EAAE;AAClC,aAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;KAChC;GACF,CAAC;;AAEF,MAAI,IAAI,GAAG,OAAO,CAAC,UAAU,IAAI,sBAAsB,EAAE,CAAC;;AAE1D,MAAI,oBAAoB,GAAG,YAAY;AACrC,QAAI,CAAE,OAAO,CAAC,UAAU,EACtB,IAAI,CAAC,KAAK,EAAE,CAAC;GAChB,CAAC;;AAEF,SAAO,IAAI,EAAE;AACX,QAAI,CAAE,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE;AAClC,eAAS,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACpC,YAAI,EAAE,KAAK;AACX,cAAM,EAAE,YAAY;AACpB,cAAM,EAAE,OAAO,CAAC,MAAM;OACvB,CAAC,CAAC;KACJ;;AAED,QAAI;AACF,UAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AAC9B,eAAO,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC;AACtD,+BAAuB,EAAE,SAAS;AAClC,kBAAU,EAAE,KAAK,CAAC,YAAY,EAAE;OACjC,CAAC,CAAC;KACJ,CAAC,OAAO,GAAG,EAAE,EACb;AACD,QAAI,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE;AAC1B,YAAM;KACP,MAAM;AACL,iBAAW,EAAE,CAAC;AACd,UAAI,OAAO,CAAC,KAAK,EAAE;AACjB,eAAO,CAAC,KAAK,EAAE,CAAC;AAChB,iBAAS;OACV,MAAM;AACL,4BAAoB,EAAE,CAAC;AACvB,eAAO,KAAK,CAAC;OACd;KACF;GACF;;AAED,MAAI,MAAM,CAAC,OAAO,EAAE;AAClB,QAAI,CAAC,YAAY,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;GAC/D;;AAED,MAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,mBAAiB,CAAC,IAAI,CAAC,CAAC;AACxB,MAAI,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC3D,mBAAiB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;AAC7C,SAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AACnC,SAAO,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC;AAC3B,SAAO,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAC7B,SAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AACjC,kBAAgB,CAAC,IAAI,CAAC,CAAC;AACvB,sBAAoB,EAAE,CAAC;AACvB,SAAO,IAAI,CAAC;CACb,CAAC;;;;AAIF,OAAO,CAAC,uBAAuB,GAAG,UAAU,OAAO,EAAE;AACnD,MAAI,QAAQ,CAAC;;AAEb,KAAG;AACD,YAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AAC1B,YAAM,EAAE,YAAY;AACpB,YAAM,EAAE,OAAO,CAAC,MAAM;KACvB,CAAC,CAAC,IAAI,EAAE,CAAC;GACX,QAAQ,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;;AAEhC,SAAO,0BAA0B,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE;AACtD,YAAQ,EAAE,QAAQ;GACnB,CAAC,CAAC,CAAC;CACL,CAAC;;AAEF,OAAO,CAAC,0BAA0B,GAAG,0BAA0B,CAAC;;AAEhE,OAAO,CAAC,YAAY,GAAG,sBAAsB,CAAC,UAAU,OAAO,EACP,UAAU,EAAE;AAClE,QAAM,CAAC,mBAAmB,EAAE,CAAC;;AAE7B,MAAI,IAAI,GAAG,eAAe,EAAE,CAAC;;AAE7B,MAAI,CAAE,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,KAAK,IACnD,OAAO,CAAC,sBAAsB,EAAE;AACnC,QAAI,YAAY,GAAG,EAAE,CAAC;;AAEtB,QAAI,OAAO,CAAC,KAAK,EAAE;AACjB,kBAAY,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC;AACpC,cAAM,EAAE,SAAS;AACjB,cAAM,EAAE,OAAO,CAAC,MAAM;OACvB,CAAC,CAAC;KACJ,MAAM;AACL,kBAAY,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACvC,cAAM,EAAE,YAAY;AACpB,cAAM,EAAE,OAAO,CAAC,MAAM;OACvB,CAAC,CAAC;KACJ;;AAED,gBAAY,CAAC,UAAU,GAAG,UAAU,CAAC;;AAErC,QAAI,CAAE,0BAA0B,CAAC,YAAY,CAAC,EAAE;AAC9C,aAAO,CAAC,CAAC;KACV;GACF;;AAED,oBAAkB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;;AAE/D,MAAI,GAAG,eAAe,EAAE,CAAC;AACzB,SAAO,CAAC,KAAK,EAAE,CAAC;AAChB,SAAO,CAAC,KAAK,CAAC,WAAW,IACV,eAAe,CAAC,IAAI,CAAC,GAAG,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,CAAA,AAAC,GAC7D,wCAAwC,CAAC,CAAC;AACxD,SAAO,CAAC,CAAC;CACV,CAAC,CAAC;;AAEH,OAAO,CAAC,aAAa,GAAG,UAAU,OAAO,EAAE;AACzC,QAAM,CAAC,mBAAmB,EAAE,CAAC;;AAE7B,MAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,MAAI,WAAW,GAAG,CAAC,CAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;AACpC,mBAAiB,CAAC,IAAI,CAAC,CAAC;AACxB,kBAAgB,CAAC,IAAI,CAAC,CAAC;;AAEvB,oBAAkB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;;AAEvC,MAAI,WAAW,EACb,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;;;AAI7B,WAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;CACnC,CAAC;;;;;;;;;;;AAWF,IAAI,4BAA4B,GAAG,KAAK,CAAC;AACzC,OAAO,CAAC,6BAA6B,GAAG,UAAU,OAAO,EAAE;AACzD,MAAI,4BAA4B,EAC9B,OAAO;AACT,8BAA4B,GAAG,IAAI,CAAC;;AAEpC,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;AAExB,MAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,MAAI,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC3D,MAAI,OAAO,CAAC,QAAQ,IAAI,CAAE,OAAO,CAAC,KAAK,EACrC,OAAO;;;;AAIT,MAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,MAAI,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;AACvB,MAAI,UAAU,GAAG,0BAA0B,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;AAE3D,MAAI,CAAE,UAAU,EAAE;;;;;AAKhB,QAAI,CAAE,OAAO,CAAC,QAAQ,EAAE;AACtB,mBAAa,CAAC,OAAO,CAAC,CAAC;AACvB,sBAAgB,CAAC,IAAI,CAAC,CAAC;KACxB;AACD,WAAO;GACR;;AAED,YAAU,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE;AACpD,QAAI,GAAG,CAAC,UAAU,EAAE,EAClB,OAAO;;AAET,QAAI,GAAG,EAAE;;;AAGP,SAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;AACpB,aAAO;KACR;AACD,OAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;GACvB,CAAC,CAAC;;AAEH,MAAI,KAAK,GAAG,UAAU,CAAC,YAAY,CAAC,eAAe,CAAC,YAAY;AAC9D,QAAI,CAAE,GAAG,CAAC,UAAU,EAAE,EAAE;AACtB,SAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;KACrB;GACF,CAAC,EAAE,IAAI,CAAC,CAAC;;AAEV,UAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;AACtB,YAAU,CAAC,KAAK,EAAE,CAAC;AACnB,cAAY,CAAC,KAAK,CAAC,CAAC;AACpB,MAAI,QAAQ,EAAE;AACZ,+BAA2B,CAAC,QAAQ,CAAC,CAAC;GACvC;CACF,CAAC;;AAEF,OAAO,CAAC,eAAe,GAAG,YAAY;AACpC,MAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,MAAI,GAAG,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,eAAe,CAAC;AACvE,SAAO,GAAG,CAAC;CACZ,CAAC;;AAEF,OAAO,CAAC,aAAa,GAAG,UAAU,OAAO,EAAE;AACzC,QAAM,CAAC,mBAAmB,EAAE,CAAC;AAC7B,MAAI,CAAC,6BAA6B,EAAE,CAAC;;AAErC,MAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,MAAI,CAAE,QAAQ,CAAC,IAAI,CAAC,EAAE;AACpB,WAAO,CAAC,KAAK,CACX,iBAAiB,GAAG,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,aAAa,CAAC,CAAC;AACzE,WAAO,CAAC,CAAC;GACV;;AAED,MAAI,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;AACrC,MAAI,QAAQ,EAAE;AACZ,WAAO,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;AACjC,WAAO,CAAC,CAAC;GACV;;AAED,MAAI,GAAG,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC,eAAe,CAAC;AACvE,MAAI,GAAG,EAAE;AACP,WAAO,CAAC,KAAK,CAAC,4DAA4D,CAAC,CAAC;AAC5E,WAAO,CAAC,KAAK,EAAE,CAAC;AAChB,WAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;GACjC,MAAM;;AAEL,WAAO,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAC;GACxD;;AAED,SAAO,CAAC,CAAC;CACV,CAAC;;;;;;;AAOF,OAAO,CAAC,eAAe,GAAG,sBAAsB,CAAC,UAAU,UAAU,EAAE;AACrE,MAAI,MAAM,CAAC;;AAEX,SAAO,IAAI,EAAE;AACX,QAAI,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC;AAC3B,YAAM,EAAE,SAAS;AACjB,YAAM,EAAE,OAAO,CAAC,MAAM;KACvB,CAAC,CAAC;;;AAGH,QAAI;AACF,UAAI,YAAY,GAAG,mBAAmB,CACpC,aAAa,EACb,EAAE,UAAU,EAAE,UAAU,EAAE,CAC3B,CAAC;AACF,YAAM,GAAG,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;AACnD,YAAM;KACP,CAAC,OAAO,GAAG,EAAE;AACZ,UAAI,GAAG,CAAC,KAAK,KAAK,GAAG,IAAI,CAAE,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;AAClD,YAAI,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE;AACvB,iBAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;AACnD,iBAAO,CAAC,KAAK,EAAE,CAAC;SACjB;OACF,MAAM;AACL,eAAO,CAAC,KAAK,CAAC,gCAAgC,GACzB,iCAAiC,CAAC,CAAC;AACxD,eAAO,KAAK,CAAC;OACd;KACF;GACF;;AAED,MAAI,WAAW,CAAC;;AAEhB,MAAI,CAAE,MAAM,CAAC,cAAc,EAAE;AAC3B,QAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,qBAAiB,CAAC,IAAI,CAAC,CAAC;AACxB,QAAI,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC3D,qBAAiB,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;AAC7C,WAAO,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAC7B,WAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AACjC,WAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,WAAO,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;AACjD,oBAAgB,CAAC,IAAI,CAAC,CAAC;AACvB,WAAO,IAAI,CAAC;GACb,MAAM,IAAI,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,qBAAqB,EAAE;AAChE,WAAO,CAAC,KAAK,EAAE,CAAC;AAChB,WAAO,CAAC,KAAK,CACX,sEAAsE,EACtE,8CAA8C,CAAC,CAAC;AAClD,WAAO,CAAC,KAAK,EAAE,CAAC;;AAEhB,QAAI,cAAc,GAAG,CAAC,CAAC;AACvB,QAAI,eAAe,GAAG,EAAE,CAAC;AACzB,QAAI,KAAK,GAAG,WAAW,CAAC,YAAY;AAClC,UAAI,OAAO,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACpC,qBAAe,GAAG,4CAA4C,GAC5D,OAAO,CAAC,cAAc,CAAC,CAAC;AAC1B,aAAO,CAAC,QAAQ,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC5D,oBAAc,GAAG,CAAC,cAAc,GAAG,CAAC,CAAA,GAAI,OAAO,CAAC,MAAM,CAAC;KACxD,EAAE,GAAG,CAAC,CAAC;AACR,QAAI,WAAW,GAAG,YAAY;AAC5B,aAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAC/C,OAAO,CAAC,eAAe,CAAC,CAAC;AAC1C,mBAAa,CAAC,KAAK,CAAC,CAAC;KACtB,CAAC;;AAEF,QAAI;AACF,UAAI,yBAAyB,GAAG,UAAU,CAAC,IAAI,CAC7C,qBAAqB,EACrB,KAAK,CACN,CAAC;KACH,CAAC,OAAO,CAAC,EAAE;AACV,iBAAW,EAAE,CAAC;AACd,UAAI,CAAC,CAAC,SAAS,KAAK,cAAc,EAChC,MAAM,CAAC,CAAC;AACV,aAAO,CAAC,KAAK,CACX,wCAAwC,GACxC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,aAAa,CAAC,CAAC;AACrD,aAAO,KAAK,CAAC;KACd;;AAED,eAAW,EAAE,CAAC;AACd,WAAO,CAAC,KAAK,CAAC,YAAY,GAAG,yBAAyB,CAAC,QAAQ,CAAC,CAAC;AACjE,eAAW,GAAG,0BAA0B,CAAC;AACvC,cAAQ,EAAE,yBAAyB,CAAC,QAAQ;AAC5C,WAAK,EAAE,IAAI;AACX,gBAAU,EAAE,UAAU;KACvB,CAAC,CAAC;AACH,WAAO,WAAW,CAAC;GACpB,MAAM,IAAI,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnD,WAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;;AAE3E,eAAW,GAAG,0BAA0B,CAAC;AACvC,cAAQ,EAAE,MAAM,CAAC,QAAQ;AACzB,WAAK,EAAE,IAAI;AACX,gBAAU,EAAE,UAAU;KACvB,CAAC,CAAC;AACH,WAAO,WAAW,CAAC;GACpB,MAAM;;AAEL,WAAO,CAAC,KAAK,CACX,4CAA4C,GAC5C,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC;AAC3C,WAAO,KAAK,CAAC;GACd;CACF,CAAC,CAAC;;;;AAIH,OAAO,CAAC,0BAA0B,GAAG,UAAU,OAAO,EAAE;AACtD,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;AAExB,MAAI,CAAC,6BAA6B,EAAE,CAAC;;AAErC,MAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,MAAI,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC,CAAC;;AAE3D,MAAI,OAAO,CAAC,MAAM,IAAI,CAAE,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,eAAe,EAAE;AACnE,QAAI,OAAO,CAAC,cAAc,EACxB,OAAO,CAAC,KAAK,EAAE,CAAC;AAClB,QAAI,OAAO,CAAC,qBAAqB,EAAE;;;AAGjC,aAAO,CAAC,KAAK,CACX,gEAAgE,EAChE,oEAAoE,EACpE,OAAO,CAAC,eAAe,CAAC,CAAC;AAC3B,aAAO,CAAC,KAAK,EAAE,CAAC;KACjB,MAAM,IAAI,CAAE,OAAO,CAAC,SAAS,EAAE;;;;;AAK9B,aAAO,CAAC,KAAK,CACX,6DAA6D,EAC7D,6BAA6B,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC;AAC1D,aAAO,CAAC,KAAK,EAAE,CAAC;KACjB,MAAM;AACL,aAAO,CAAC,KAAK,CACX,6DAA6D,EAC7D,aAAa,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC;AAC1C,aAAO,CAAC,KAAK,EAAE,CAAC;KACjB;AACD,WAAO,IAAI,CAAC;GACb;AACD,SAAO,KAAK,CAAC;CACd,CAAC;;AAEF,OAAO,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;;AAEhD,OAAO,CAAC,YAAY,GAAG,UAAU,MAAM,EAAE,WAAW,EAAE;AACpD,aAAW,GAAG,WAAW,IAAI,eAAe,EAAE,CAAC;AAC/C,SAAO,UAAU,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC;CAChD,CAAC;;AAEF,OAAO,CAAC,YAAY,GAAG,UAAU,MAAM,EAAE,SAAS,EAAE;AAClD,MAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,YAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,OAAO,GAAG,SAAS,CAAC;AAC7C,kBAAgB,CAAC,IAAI,CAAC,CAAC;CACxB,CAAC;;AAEF,OAAO,CAAC,eAAe,GAAG,UAAU,MAAM,EAAE;AAC1C,SAAO,UAAU,CAAC,eAAe,EAAE,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC;CACpD,CAAC;;AAEF,OAAO,CAAC,UAAU,GAAG,YAAY;AAC/B,SAAO,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAC;CACpC,CAAC;;;;;AAKF,OAAO,CAAC,gBAAgB,GAAG,YAAY;AACrC,MAAI,IAAI,GAAG,eAAe,EAAE,CAAC;AAC7B,SAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;CACvD,CAAC;;AAEF,OAAO,CAAC,wBAAwB,GAAG,UAAU,IAAI,EAAE;;;AAGjD,MAAI,qBAAqB,GAAG,IAAI,CAAC;;;;;AAKjC,MAAI,CAAC,UAAU,CAAC,aAAa,CAAC,2CAA2C,EAAE;AACzE,UAAM,EAAE,UAAU,GAAG,EAAE;AACrB,UAAI,GAAG,CAAC,GAAG,KAAK,OAAO,IAAI,GAAG,CAAC,MAAM,IACjC,GAAG,CAAC,MAAM,CAAC,OAAO,KAAK,kBAAkB,EAAE;;;AAG7C,6BAAqB,GAAG,GAAG,CAAC,MAAM,CAAC;OACpC;KACF;GACF,CAAC,CAAC;;AAEH,MAAI,wBAAwB,GAAG,IAAI,CAAC,gBAAgB,CAClD,kCAAkC,CAAC,CAAC;AACtC,MAAI,CAAE,qBAAqB,IAAI,CAAE,qBAAqB,CAAC,QAAQ,EAAE;AAC/D,UAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;GAC9C;;AAED,SAAO,qBAAqB,CAAC;CAC9B,CAAC;;;;;AAKF,OAAO,CAAC,qBAAqB,GAAG,UAAU,IAAI,EAAE,qBAAqB,EAC3B,GAAG,EAAE,MAAM,EAAE,WAAW,EAAE;AAClE,MAAI,gBAAgB,GAAG,YAAY;AACjC,QAAI,CAAC,WAAW,GAAG,YAAY;AAC7B,UAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AACnB,cAAM,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;OACrC,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,YAAY,EAAG,CAAC,CAAC;KACtC,CAAC;GACH,CAAC;;AAEF,MAAI,QAAQ,GAAG,qBAAqB,CAAC,QAAQ,CAAC;AAC9C,MAAI,WAAW,CAAC;;;AAGhB,MAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AACjD,MAAI,aAAa,EAAE;AACjB,QAAI;AACF,iBAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AACjC,cAAM,EAAE,aAAa;OACtB,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;KACrB,CAAC,OAAO,GAAG,EAAE;;;;AAIZ,UAAI,GAAG,CAAC,SAAS,KAAK,cAAc,EAAE;AACpC,cAAM,GAAG,CAAC;OACX;KACF;;AAED,QAAI,WAAW,IAAI,WAAW,CAAC,KAAK,IAAI,WAAW,CAAC,EAAE,EAAE;;AAEtD,sBAAgB,EAAE,CAAC;AACnB,aAAO;KACR;GACF;;;;AAID,MAAI,WAAW,GAAG,GAAG,GAAG,0BAA0B,CAAC;;;;;;;;;;;AAWnD,MAAI,CAAE,qBAAqB,CAAC,UAAU,EAAE;AACtC,eAAW,GAAG,WAAW,GAAG,QAAQ,CAAC;GACtC;AACD,aAAW,GAAG,SAAS,CAAC,IAAI,EAAE;AAC5B,YAAQ,EAAE,QAAQ;AAClB,eAAW,EAAE,WAAW;AACxB,UAAM,EAAE,MAAM;AACd,eAAW,EAAE,WAAW;GACzB,CAAC,CAAC;;AAEH,kBAAgB,EAAE,CAAC;CACpB,CAAC;;AAEF,OAAO,CAAC,0BAA0B,GAAG,0BAA0B,CAAC;AAChE,OAAO,CAAC,sBAAsB,GAAG,sBAAsB,CAAC","file":"tools/meteor-services/auth.js.map","sourcesContent":["var _ = require('underscore');\nvar utils = require('../utils/utils.js');\nvar files = require('../fs/files.js');\nvar config = require('./config.js');\nvar httpHelpers = require('../utils/http-helpers.js');\nvar fiberHelpers = require('../utils/fiber-helpers.js');\nvar querystring = require('querystring');\nvar url = require('url');\nvar Future = require('fibers/future');\nvar isopackets = require('../tool-env/isopackets.js');\nvar Console = require('../console/console.js').Console;\n\nvar auth = exports;\n\nvar getLoadedPackages = function () {\n  return isopackets.load('ddp');\n};\n\n// Opens and returns a DDP connection to the accounts server. Remember\n// to close it when you're done with it!\nvar openAccountsConnection = function () {\n  var DDP = getLoadedPackages()['ddp-client'].DDP;\n  return DDP.connect(config.getAuthDDPUrl(), {\n    headers: { 'User-Agent': httpHelpers.getUserAgent() }\n  });\n};\n\n// Returns a function that runs `f`, appending an additional argument\n// that is a connection to the accounts server, which gets closed when\n// `f` returns or throws.\nvar withAccountsConnection = function (f) {\n  return function (...args) {\n    var self = this;\n    var conn = openAccountsConnection();\n    args.push(conn);\n    try {\n      var result = f.apply(self, args);\n    } finally {\n      conn.close();\n    }\n    return result;\n  };\n};\n\n// Open a DDP connection to the accounts server and log in using the\n// provided token. Returns the connection, or null if login fails.\n//\n// XXX if we reconnect we won't reauthenticate. Fix that before using\n// this for long-lived connections.\nvar loggedInAccountsConnection = function (token) {\n  var connection = getLoadedPackages()['ddp-client'].DDP.connect(\n    config.getAuthDDPUrl()\n  );\n\n  var fut = new Future;\n  connection.apply(\n    'login',\n    [{ resume: token }],\n    { wait: true },\n    function (err, result) {\n      fut['return']({ err: err, result: result });\n    }\n  );\n  var outcome = fut.wait();\n\n  if (outcome.err) {\n    connection.close();\n\n    if (outcome.err.error === 403) {\n      // This is not an ideal value for the error code, but it means\n      // \"server rejected our access token\". For example, it expired\n      // or we revoked it from the web.\n      return null;\n    }\n\n    // Something else went wrong\n    throw outcome.err;\n  }\n\n  return connection;\n};\n\n// The accounts server has some wrapped methods that take and return\n// session identifiers. To call these methods, we add our current\n// session identifier (or null, if we don't have one) as the last\n// argument to the method. The accounts server returns an object with\n// keys 'result' (the actual method result) and 'session' (the new\n// session identifier we should use, if it created a new session for\n// us).\n// options can include:\n//  - timeout: a timeout after which an exception will be thrown if the\n//    method hasn't returned yet\n//  - connection: an open connection to the accounts server. If not\n//    provided, one will be opened and then closed before returning.\nvar sessionMethodCaller = function (methodName, options) {\n  options = options || {};\n  return function (...args) {\n    args.push({\n      session: auth.getSessionId(config.getAccountsDomain()) || null\n    });\n    var fut = new Future();\n    var conn = options.connection || openAccountsConnection();\n    conn.apply(methodName, args, fiberHelpers.firstTimeResolver(fut));\n    if (options.timeout !== undefined) {\n      var timer = setTimeout(fiberHelpers.bindEnvironment(function () {\n        if (!fut.isResolved())\n          fut.throw(new Error('Method call timed out'));\n      }), options.timeout);\n    }\n    try {\n      var result = fut.wait();\n    } finally {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      if (! options.connection)\n        conn.close();\n    }\n    if (result && result.session) {\n      auth.setSessionId(config.getAccountsDomain(), result.session);\n    }\n    return result && result.result;\n  };\n};\n\nvar readSessionData = function () {\n  var sessionPath = config.getSessionFilePath();\n  if (! files.exists(sessionPath))\n    return {};\n  return JSON.parse(files.readFile(sessionPath, { encoding: 'utf8' }));\n};\n\nvar writeSessionData = function (data) {\n  var sessionPath = config.getSessionFilePath();\n\n  var tries = 0;\n  while (true) {\n    if (tries++ > 10)\n      throw new Error(\"can't find a unique name for temporary file?\");\n\n    // Create a temporary file in the same directory where we\n    // ultimately want to write the session file. Use the exclusive\n    // flag to atomically ensure that the file doesn't exist, create\n    // it, and make it readable and writable only by the current\n    // user (mode 0600).\n    var tempPath =\n          files.pathJoin(files.pathDirname(sessionPath), '.meteorsession.' +\n                    Math.floor(Math.random() * 999999));\n    try {\n      var fd = files.open(tempPath, 'wx', 0o600);\n    } catch (e) {\n      continue;\n    }\n\n    try {\n      // Write `data` to the file.\n      var buf = new Buffer(JSON.stringify(data, undefined, 2), 'utf8');\n      files.write(fd, buf, 0, buf.length, 0);\n    } finally {\n      files.close(fd);\n    }\n\n    // Atomically remove the old file (if any) and replace it with\n    // the temporary file we just created.\n    files.rename(tempPath, sessionPath);\n    return;\n  }\n};\n\nvar getSession = function (sessionData, domain) {\n  if (typeof (sessionData.sessions) !== \"object\")\n    sessionData.sessions = {};\n  if (typeof (sessionData.sessions[domain]) !== \"object\")\n    sessionData.sessions[domain] = {};\n  return sessionData.sessions[domain];\n};\n\n// types:\n// - \"meteor-account\": a login to your Meteor Account\n// We previously used:\n// - \"galaxy\": a login to a legacy Galaxy prototype server\nvar ensureSessionType = function (session, type) {\n  if (! _.has(session, 'type'))\n    session.type = type;\n  else if (session.type !== type) {\n    // Blow away whatever was there. We lose pendingRevokes but that's\n    // OK since this should never happen in normal operation. (It\n    // would happen if the Meteor Accounts server mode somewhere else\n    // and a Galaxy was deployed at its old address, for example).\n    _.each(_.keys(session), function (key) {\n      delete session[key];\n    });\n    session.type = type;\n  }\n};\n\nvar writeMeteorAccountsUsername = function (username) {\n  var data = readSessionData();\n  var session = getSession(data, config.getAccountsDomain());\n  session.username = username;\n  writeSessionData(data);\n};\n\n// Given an object 'data' in the format returned by readSessionData,\n// modify it to make the user logged out.\nvar logOutAllSessions = function (data) {\n  _.each(data.sessions, function (session, domain) {\n    logOutSession(session);\n  });\n};\n\n// As logOutAllSessions, but for a session on a particular domain\n// rather than all sessions.\nvar logOutSession = function (session) {\n  var crypto = require('crypto');\n\n  delete session.username;\n  delete session.userId;\n  delete session.registrationUrl;\n\n  if (_.has(session, 'token')) {\n    if (! (session.pendingRevoke instanceof Array))\n      session.pendingRevoke = [];\n\n    // Delete the auth token itself, but save the tokenId, which is\n    // useless for authentication. The next time we're online, we'll\n    // send the tokenId to the server to revoke the token on the\n    // server side too.\n    if (typeof session.tokenId === \"string\")\n      session.pendingRevoke.push(session.tokenId);\n    delete session.token;\n    delete session.tokenId;\n  }\n};\n\n// Given an object 'data' in the format returned by readSessionData,\n// return true if logged in, else false.\nvar loggedIn = function (data) {\n  return !! getSession(data, config.getAccountsDomain()).userId;\n};\n\n// Given an object 'data' in the format returned by readSessionData,\n// return the currently logged in user, or null if not logged in or if\n// the logged in user doesn't have a username.\nvar currentUsername = function (data) {\n  var sessionData = getSession(data, config.getAccountsDomain());\n  return sessionData.username || null;\n};\n\nvar removePendingRevoke = function (domain, tokenIds) {\n  var data = readSessionData();\n  var session = getSession(data, domain);\n  session.pendingRevoke = _.difference(session.pendingRevoke, tokenIds);\n  if (! session.pendingRevoke.length)\n    delete session.pendingRevoke;\n  writeSessionData(data);\n};\n\n// If there are any logged out (pendingRevoke) tokens that haven't\n// been sent to the server for revocation yet, try to send\n// them. Reads the session file and then writes it back out to\n// disk. If the server can't be contacted, fail silently (and leave\n// the pending invalidations in the session file for next time).\n//\n// options:\n//  - timeout: request timeout in milliseconds\n//  - firstTry: cosmetic. set to true if we recently logged out a\n//    session. just changes the error message.\n//  - connection: an open connection to the accounts server. If not\n//    provided, this function will open one itself.\nvar tryRevokeOldTokens = function (options) {\n  options = _.extend({\n    timeout: 5000\n  }, options || {});\n\n  var warned = false;\n  var domainsWithRevokedTokens = [];\n  _.each(readSessionData().sessions || {}, function (session, domain) {\n    if (session.pendingRevoke &&\n        session.pendingRevoke.length)\n      domainsWithRevokedTokens.push(domain);\n  });\n\n  var logoutFailWarning = function (domain) {\n    if (! warned) {\n      // This isn't ideal but is probably better that saying nothing at all\n      Console.error(\"warning: \" +\n                    (options.firstTry ?\n                    \"couldn't\" : \"still trying to\") +\n                     \" confirm logout with \" + domain);\n      warned = true;\n    }\n  };\n\n  _.each(domainsWithRevokedTokens, function (domain) {\n    var data = readSessionData();\n    var session = data.sessions[domain] || {};\n    var tokenIds = session.pendingRevoke || [];\n    if (! tokenIds.length)\n      return;\n\n    var url;\n\n\n    if (session.type === \"meteor-account\") {\n      try {\n        sessionMethodCaller('revoke', {\n          timeout: options.timeout,\n          connection: options.connection\n        })(tokenIds);\n        removePendingRevoke(domain, tokenIds);\n      } catch (err) {\n        logoutFailWarning(domain);\n      }\n      return;\n    } else if (session.type === \"galaxy\") {\n      // These are tokens from a legacy Galaxy prototype, which cannot be\n      // revoked (because the prototype no longer exists), but we can at least\n      // remove them from the file.\n      removePendingRevoke(domain, tokenIds);\n    } else {\n      // don't know how to revoke tokens of this type\n      logoutFailWarning(domain);\n      return;\n    }\n  });\n};\n\nvar sendAuthorizeRequest = function (clientId, redirectUri, state) {\n  var authCodeUrl = config.getOauthUrl() + \"/authorize?\" +\n        querystring.stringify({\n          state: state,\n          response_type: \"code\",\n          client_id: clientId,\n          redirect_uri: redirectUri\n        });\n\n  // It's very important that we don't have request follow the\n  // redirect for us, but instead issue the second request ourselves,\n  // since request would pass our credentials along to the redirected\n  // URL. See comments in http-helpers.js.\n  var codeResult = httpHelpers.request({\n    url: authCodeUrl,\n    method: 'POST',\n    strictSSL: true,\n    useAuthHeader: true\n  });\n\n  var response = codeResult.response;\n  if (response.statusCode !== 302 || ! response.headers.location) {\n    throw new Error('access-denied');\n  }\n\n  if (url.parse(response.headers.location).hostname !==\n      url.parse(redirectUri).hostname) {\n    // If we didn't get an immediate redirect to the redirectUri then\n    // presumably the oauth server is trying to interact with us (make\n    // us log in, authorize the client, or something like that). We're\n    // not a web browser so we can't participate in such things.\n    throw new Error('access-denied');\n  }\n\n  return { location: response.headers.location };\n};\n\n// Do an OAuth flow with the Meteor developer accounts server to log in\n// to an OAuth client. `conn` is expected to be a DDP connection to the\n// OAuth client app. Options are:\n//  - clientId: OAuth client id parameter\n//  - redirectUri: OAuth redirect_uri parameter\n//  - domain: the domain for saving the received login token on success\n//    in the Meteor session file\n//  - sessionType: the value of the 'type' field for the session saved\n//    in the Meteor session file on success\n// All options are required.\n//\n// Throws an error if the login is not successful.\nvar oauthFlow = function (conn, options) {\n  var crypto = require('crypto');\n  var credentialToken = crypto.randomBytes(16).toString('hex');\n\n  var authorizeResult = sendAuthorizeRequest(\n    options.clientId,\n    options.redirectUri,\n    credentialToken\n  );\n\n  // XXX We're using a test-only flag here to just get the raw\n  // credential secret (instead of a bunch of code that communicates the\n  // credential secret somewhere else); this should be temporary until\n  // we give this a nicer name and make it not just test only.\n  var redirectResult = httpHelpers.request({\n    url: authorizeResult.location + '&only_credential_secret_for_test=1',\n    method: 'GET',\n    strictSSL: true\n  });\n\n  var response = redirectResult.response;\n  // 'access-denied' isn't exactly right because it's possible that the server\n  // went down since our last request, but close enough.\n\n  if (response.statusCode !== 200) {\n    throw new Error('access-denied');\n  }\n\n  // XXX tokenId???\n  var loginResult = conn.apply('login', [{\n    oauth: {\n      credentialToken: credentialToken,\n      credentialSecret: response.body\n    }\n  }], { wait: true });\n\n  if (loginResult.token && loginResult.id) {\n    var data = readSessionData();\n    var session = getSession(data, options.domain);\n    ensureSessionType(session, options.sessionType);\n    session.token = loginResult.token;\n    writeSessionData(data);\n    return true;\n  } else {\n    throw new Error('login-failed');\n  }\n};\n\n// Prompt the user for a password, and then log in. Returns true if a\n// successful login was accomplished, else false.\n//\n// Options should include either 'email' or 'username', and may also\n// include:\n// - retry: if true, then if the user gets the password wrong,\n//   reprompt.\n// - suppressErrorMessage: true if the function should not print an\n//   error message to stderr if the login fails\n// - connection: an open connection to the accounts server. If not\n//   provided, this function will open its own connection.\nvar doInteractivePasswordLogin = function (options) {\n  var loginData = {};\n\n  if (_.has(options, 'username'))\n    loginData.username = options.username;\n  else if (_.has(options, 'email'))\n    loginData.email = options.email;\n  else\n    throw new Error(\"Need username or email\");\n\n  if (_.has(options, 'password')) {\n    loginData.password = options.password;\n  }\n\n  var loginFailed = function () {\n    if (! options.suppressErrorMessage) {\n      Console.error(\"Login failed.\");\n    }\n  };\n\n  var conn = options.connection || openAccountsConnection();\n\n  var maybeCloseConnection = function () {\n    if (! options.connection)\n      conn.close();\n  };\n\n  while (true) {\n    if (! _.has(loginData, 'password')) {\n      loginData.password = Console.readLine({\n        echo: false,\n        prompt: \"Password: \",\n        stream: process.stderr\n      });\n    }\n\n    try {\n      var result = conn.call('login', {\n        session: auth.getSessionId(config.getAccountsDomain()),\n        meteorAccountsLoginInfo: loginData,\n        clientInfo: utils.getAgentInfo()\n      });\n    } catch (err) {\n    }\n    if (result && result.token) {\n      break;\n    } else {\n      loginFailed();\n      if (options.retry) {\n        Console.error();\n        continue;\n      } else {\n        maybeCloseConnection();\n        return false;\n      }\n    }\n  }\n\n  if (result.session) {\n    auth.setSessionId(config.getAccountsDomain(), result.session);\n  }\n\n  var data = readSessionData();\n  logOutAllSessions(data);\n  var session = getSession(data, config.getAccountsDomain());\n  ensureSessionType(session, \"meteor-account\");\n  session.username = result.username;\n  session.userId = result.id;\n  session.token = result.token;\n  session.tokenId = result.tokenId;\n  writeSessionData(data);\n  maybeCloseConnection();\n  return true;\n};\n\n// options are the same as for doInteractivePasswordLogin, except without\n// username and email.\nexports.doUsernamePasswordLogin = function (options) {\n  var username;\n\n  do {\n    username = Console.readLine({\n      prompt: \"Username: \",\n      stream: process.stderr\n    }).trim();\n  } while (username.length === 0);\n\n  return doInteractivePasswordLogin(_.extend({}, options, {\n    username: username\n  }));\n};\n\nexports.doInteractivePasswordLogin = doInteractivePasswordLogin;\n\nexports.loginCommand = withAccountsConnection(function (options,\n                                                        connection) {\n  config.printUniverseBanner();\n\n  var data = readSessionData();\n\n  if (! getSession(data, config.getAccountsDomain()).token ||\n       options.overwriteExistingToken) {\n    var loginOptions = {};\n\n    if (options.email) {\n      loginOptions.email = Console.readLine({\n        prompt: \"Email: \",\n        stream: process.stderr\n      });\n    } else {\n      loginOptions.username = Console.readLine({\n        prompt: \"Username: \",\n        stream: process.stderr\n      });\n    }\n\n    loginOptions.connection = connection;\n\n    if (! doInteractivePasswordLogin(loginOptions)) {\n      return 1;\n    }\n  }\n\n  tryRevokeOldTokens({ firstTry: true, connection: connection });\n\n  data = readSessionData();\n  Console.error();\n  Console.error(\"Logged in\" +\n                (currentUsername(data) ? \" as \" + currentUsername(data) : \"\") +\n                \". Thanks for being a Meteor developer!\");\n  return 0;\n});\n\nexports.logoutCommand = function (options) {\n  config.printUniverseBanner();\n\n  var data = readSessionData();\n  var wasLoggedIn = !! loggedIn(data);\n  logOutAllSessions(data);\n  writeSessionData(data);\n\n  tryRevokeOldTokens({ firstTry: true });\n\n  if (wasLoggedIn)\n    Console.error(\"Logged out.\");\n  else\n    // We called logOutAllSessions/writeSessionData anyway, out of an\n    // abundance of caution.\n    Console.error(\"Not logged in.\");\n};\n\n// If this is fully set up account (with a username and password), or\n// if not logged in, do nothing. If it is an account without a\n// username, contact the server and see if the user finished setting\n// it up, and if so grab and save the username. But contact the server\n// only once per run of the program. Options:\n//  - noLogout: boolean. Set to true if you don't want this function to\n//    log out the session if wehave an invalid credential (for example,\n//    if a caller wants to do its own error handling for invalid\n//    credentials). Defaults to false.\nvar alreadyPolledForRegistration = false;\nexports.pollForRegistrationCompletion = function (options) {\n  if (alreadyPolledForRegistration)\n    return;\n  alreadyPolledForRegistration = true;\n\n  options = options || {};\n\n  var data = readSessionData();\n  var session = getSession(data, config.getAccountsDomain());\n  if (session.username || ! session.token)\n    return;\n\n  // We are logged in but we don't yet have a username. Ask the server\n  // if a username was chosen since we last checked.\n  var username = null;\n  var fut = new Future();\n  var connection = loggedInAccountsConnection(session.token);\n\n  if (! connection) {\n    // Server says our credential isn't any good anymore! Get rid of\n    // it. Note that, out of an abundance of caution, this also will\n    // enqueue the credential for invalidation (on a future run, we\n    // will try to explicitly revoke the credential ourselves).\n    if (! options.noLogout) {\n      logOutSession(session);\n      writeSessionData(data);\n    }\n    return;\n  }\n\n  connection.call('getUsername', function (err, result) {\n    if (fut.isResolved())\n      return;\n\n    if (err) {\n      // If anything went wrong, return null just as we would have if\n      // we hadn't bothered to ask the server.\n      fut['return'](null);\n      return;\n    }\n    fut['return'](result);\n  });\n\n  var timer = setTimeout(fiberHelpers.bindEnvironment(function () {\n    if (! fut.isResolved()) {\n      fut['return'](null);\n    }\n  }), 5000);\n\n  username = fut.wait();\n  connection.close();\n  clearTimeout(timer);\n  if (username) {\n    writeMeteorAccountsUsername(username);\n  }\n};\n\nexports.registrationUrl = function () {\n  var data = readSessionData();\n  var url = getSession(data, config.getAccountsDomain()).registrationUrl;\n  return url;\n};\n\nexports.whoAmICommand = function (options) {\n  config.printUniverseBanner();\n  auth.pollForRegistrationCompletion();\n\n  var data = readSessionData();\n  if (! loggedIn(data)) {\n    Console.error(\n      \"Not logged in. \" + Console.command(\"'meteor login'\") + \" to log in.\");\n    return 1;\n  }\n\n  var username = currentUsername(data);\n  if (username) {\n    Console.rawInfo(username + \"\\n\");\n    return 0;\n  }\n\n  var url = getSession(data, config.getAccountsDomain()).registrationUrl;\n  if (url) {\n    Console.error(\"You haven't chosen your username yet. To pick it, go here:\");\n    Console.error();\n    Console.error(Console.url(url));\n  } else {\n    // Won't happen in normal operation\n    Console.error(\"You haven't chosen your username yet.\");\n  }\n\n  return 1;\n};\n\n// Prompt for an email address. If it doesn't belong to a user, create\n// a new deferred registration account and log in as it. If it does,\n// try to log the user into it. Returns true on success (user is now\n// logged in) or false on failure (user gave up, can't talk to\n// network..)\nexports.registerOrLogIn = withAccountsConnection(function (connection) {\n  var result;\n  // Get their email\n  while (true) {\n    var email = Console.readLine({\n      prompt: \"Email: \",\n      stream: process.stderr\n    });\n\n    // Try to register\n    try {\n      var methodCaller = sessionMethodCaller(\n        'tryRegister',\n        { connection: connection }\n      );\n      result = methodCaller(email, utils.getAgentInfo());\n      break;\n    } catch (err) {\n      if (err.error === 400 && ! utils.validEmail(email)) {\n        if (email.trim().length) {\n          Console.error(\"Please double-check that address.\");\n          Console.error();\n        }\n      } else {\n        Console.error(\"\\nCouldn't connect to server. \" +\n                             \"Check your internet connection.\");\n        return false;\n      }\n    }\n  }\n\n  var loginResult;\n\n  if (! result.alreadyExisted) {\n    var data = readSessionData();\n    logOutAllSessions(data);\n    var session = getSession(data, config.getAccountsDomain());\n    ensureSessionType(session, \"meteor-account\");\n    session.token = result.token;\n    session.tokenId = result.tokenId;\n    session.userId = result.userId;\n    session.registrationUrl = result.registrationUrl;\n    writeSessionData(data);\n    return true;\n  } else if (result.alreadyExisted && result.sentRegistrationEmail) {\n    Console.error();\n    Console.error(\n      \"You need to pick a password for your account so that you can log in.\",\n      \"An email has been sent to you with the link.\");\n    Console.error();\n\n    var animationFrame = 0;\n    var lastLinePrinted = \"\";\n    var timer = setInterval(function () {\n      var spinner = ['-', '\\\\', '|', '/'];\n      lastLinePrinted = \"Waiting for you to register on the web... \" +\n        spinner[animationFrame];\n      Console.rawError(lastLinePrinted + Console.CARRIAGE_RETURN);\n      animationFrame = (animationFrame + 1) % spinner.length;\n    }, 200);\n    var stopSpinner = function () {\n      Console.rawError(new Array(lastLinePrinted.length + 1).join(' ') +\n                       Console.CARRIAGE_RETURN);\n      clearInterval(timer);\n    };\n\n    try {\n      var waitForRegistrationResult = connection.call(\n        'waitForRegistration',\n        email\n      );\n    } catch (e) {\n      stopSpinner();\n      if (e.errorType !== \"Meteor.Error\")\n        throw e;\n      Console.error(\n        \"When you've picked your password, run \" +\n        Console.command(\"'meteor login'\") + \" to log in.\");\n      return false;\n    }\n\n    stopSpinner();\n    Console.error(\"Username: \" + waitForRegistrationResult.username);\n    loginResult = doInteractivePasswordLogin({\n      username: waitForRegistrationResult.username,\n      retry: true,\n      connection: connection\n    });\n    return loginResult;\n  } else if (result.alreadyExisted && result.username) {\n    Console.error(\"\\nLogging in as \" + Console.command(result.username) + \".\");\n\n    loginResult = doInteractivePasswordLogin({\n      username: result.username,\n      retry: true,\n      connection: connection\n    });\n    return loginResult;\n  } else {\n    // Hmm, got an email we don't understand.\n    Console.error(\n      \"\\nThere was a problem. Please log in with \" +\n      Console.command(\"'meteor login'\") + \".\");\n    return false;\n  }\n});\n\n// options: firstTime, leadingNewline\n// returns true if it printed something\nexports.maybePrintRegistrationLink = function (options) {\n  options = options || {};\n\n  auth.pollForRegistrationCompletion();\n\n  var data = readSessionData();\n  var session = getSession(data, config.getAccountsDomain());\n\n  if (session.userId && ! session.username && session.registrationUrl) {\n    if (options.leadingNewline)\n      Console.error();\n    if (options.onlyAllowIfRegistered) {\n      // A stronger message: we're going to not allow whatever they were trying\n      // to do!\n      Console.error(\n        \"You need to claim a username and set a password on your Meteor\",\n        \"developer account to run this command. It takes about a minute at:\",\n        session.registrationUrl);\n      Console.error();\n    } else if (! options.firstTime) {\n      // If they've already been prompted to set a password then this\n      // is more of a friendly reminder, so we word it slightly\n      // differently than the first time they're being shown a\n      // registration url.\n      Console.error(\n        \"You should set a password on your Meteor developer account.\",\n        \"It takes about a minute at:\", session.registrationUrl);\n      Console.error();\n    } else {\n      Console.error(\n        \"You can set a password on your account or change your email\",\n        \"address at:\", session.registrationUrl);\n      Console.error();\n    }\n    return true;\n  }\n  return false;\n};\n\nexports.tryRevokeOldTokens = tryRevokeOldTokens;\n\nexports.getSessionId = function (domain, sessionData) {\n  sessionData = sessionData || readSessionData();\n  return getSession(sessionData, domain).session;\n};\n\nexports.setSessionId = function (domain, sessionId) {\n  var data = readSessionData();\n  getSession(data, domain).session = sessionId;\n  writeSessionData(data);\n};\n\nexports.getSessionToken = function (domain) {\n  return getSession(readSessionData(), domain).token;\n};\n\nexports.isLoggedIn = function () {\n  return loggedIn(readSessionData());\n};\n\n// Return the username of the currently logged in user, or false if\n// not logged in, or null if the logged in user doesn't have a\n// username.\nexports.loggedInUsername = function () {\n  var data = readSessionData();\n  return loggedIn(data) ? currentUsername(data) : false;\n};\n\nexports.getAccountsConfiguration = function (conn) {\n  // Subscribe to the package server's service configurations so that we\n  // can get the OAuth client ID to kick off the OAuth flow.\n  var accountsConfiguration = null;\n\n  // We avoid the overhead of creating a 'ddp-and-mongo' isopacket (or\n  // always loading mongo whenever we load ddp) by just using the low-level\n  // DDP client API here.\n  conn.connection.registerStore('meteor_accounts_loginServiceConfiguration', {\n    update: function (msg) {\n      if (msg.msg === 'added' && msg.fields &&\n          msg.fields.service === 'meteor-developer') {\n        // Note that this doesn't include the _id (which we'd have to parse),\n        // but that's OK.\n        accountsConfiguration = msg.fields;\n      }\n    }\n  });\n\n  var serviceConfigurationsSub = conn.subscribeAndWait(\n    'meteor.loginServiceConfiguration');\n  if (! accountsConfiguration || ! accountsConfiguration.clientId) {\n    throw new Error('no-accounts-configuration');\n  }\n\n  return accountsConfiguration;\n};\n\n// Given a ServiceConnection, log in with OAuth using Meteor developer\n// accounts. Assumes the user is already logged in to the developer\n// accounts server.\nexports.loginWithTokenOrOAuth = function (conn, accountsConfiguration,\n                                          url, domain, sessionType) {\n  var setUpOnReconnect = function () {\n    conn.onReconnect = function () {\n      conn.apply('login', [{\n        resume: auth.getSessionToken(domain)\n      }], { wait: true }, function () { });\n    };\n  };\n\n  var clientId = accountsConfiguration.clientId;\n  var loginResult;\n\n  // Try to log in with an existing login token, if we have one.\n  var existingToken = auth.getSessionToken(domain);\n  if (existingToken) {\n    try {\n      loginResult = conn.apply('login', [{\n        resume: existingToken\n      }], { wait: true });\n    } catch (err) {\n      // If we get a Meteor.Error, then we swallow it and go on to\n      // attempt an OAuth flow and get a new token. If it's not a\n      // Meteor.Error, then we leave it to the caller to handle.\n      if (err.errorType !== \"Meteor.Error\") {\n        throw err;\n      }\n    }\n\n    if (loginResult && loginResult.token && loginResult.id) {\n      // Success!\n      setUpOnReconnect();\n      return;\n    }\n  }\n\n  // Either we didn't have an existing token, or it didn't work. Do an\n  // OAuth flow to log in.\n  var redirectUri = url + '/_oauth/meteor-developer';\n\n  // Duplicate code from packages/oauth/oauth_common.js. In Meteor 0.9.1, we\n  // switched to a new URL style for Oauth that no longer has the \"?close\"\n  // parameter at the end. However, we need all of our backend services to be\n  // compatible with old Meteor tools which were written before 0.9.1. These old\n  // meteor tools only know how to deal with oauth URLs that have the \"?close\"\n  // query parameter, so our services (packages.meteor.com, etc) have to use the\n  // old-style URL. This means that all new Meteor tools also need to use the\n  // old-style URL to be compatible with the new servers which are backwards-\n  // compatible with the old tool.\n  if (! accountsConfiguration.loginStyle) {\n    redirectUri = redirectUri + \"?close\";\n  }\n  loginResult = oauthFlow(conn, {\n    clientId: clientId,\n    redirectUri: redirectUri,\n    domain: domain,\n    sessionType: sessionType\n  });\n\n  setUpOnReconnect();\n};\n\nexports.loggedInAccountsConnection = loggedInAccountsConnection;\nexports.withAccountsConnection = withAccountsConnection;\n"]}