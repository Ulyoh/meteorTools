{"version":3,"sources":["/tools/meteor-services/deploy.js"],"names":[],"mappings":"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","file":"tools/meteor-services/deploy.js.map","sourcesContent":["// URL parsing and validation\n// RPC to server (endpoint, arguments)\n// see if RPC requires password\n// prompt for password\n// send RPC with or without password as required\n\nvar files = require('../fs/files.js');\nvar httpHelpers = require('../utils/http-helpers.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar config = require('./config.js');\nvar auth = require('./auth.js');\nvar _ = require('underscore');\nvar stats = require('./stats.js');\nvar Console = require('../console/console.js').Console;\n\n// Make a synchronous RPC to the \"classic\" MDG deploy API. The deploy\n// API has the following contract:\n//\n// - Parameters are always sent in the query string.\n// - A tarball can be sent in the body (when deploying an app).\n// - On success, all calls return HTTP 200. Those that return a value\n//   either return a JSON payload or a plaintext payload and the\n//   Content-Type header is set appropriately.\n// - On failure, calls return some non-200 HTTP status code and\n//   provide a human-readable error message in the body.\n// - URLs are of the form \"/[operation]/[site]\".\n// - Body encodings are always utf8.\n// - Meteor Accounts auth is possible using first-party MDG cookies\n//   (rather than OAuth).\n//\n// Options include:\n// - method: GET, POST, or DELETE. default GET\n// - operation: \"info\", \"logs\", \"mongo\", \"deploy\", \"authorized-apps\"\n// - site: site name\n// - expectPayload: an array of key names. if present, then we expect\n//   the server to return JSON content on success and to return an\n//   object with all of these key names.\n// - expectMessage: if true, then we expect the server to return text\n//   content on success.\n// - bodyStream: if provided, a stream to use as the request body\n// - any other parameters accepted by the node 'request' module, for example\n//   'qs' to set query string parameters\n//\n// Waits until server responds, then returns an object with the\n// following keys:\n//\n// - statusCode: HTTP status code, or null if the server couldn't be\n//   contacted\n// - payload: if successful, and the server returned a JSON body, the\n//   parsed JSON body\n// - message: if successful, and the server returned a text body, the\n//   body as a string\n// - errorMessage: if unsuccessful, a human-readable error message,\n//   derived from either a transport-level exception, the response\n//   body, or a generic 'try again later' message, as appropriate\n\nvar deployRpc = function (options) {\n  var genericError = \"Server error (please try again later)\";\n\n  options = _.clone(options);\n  options.headers = _.clone(options.headers || {});\n  if (options.headers.cookie)\n    throw new Error(\"sorry, can't combine cookie headers yet\");\n\n  // XXX: Reintroduce progress for upload\n  try {\n    var result = httpHelpers.request(_.extend(options, {\n      url: config.getDeployUrl() + '/' + options.operation +\n        (options.site ? ('/' + options.site) : ''),\n      method: options.method || 'GET',\n      bodyStream: options.bodyStream,\n      useAuthHeader: true,\n      encoding: 'utf8' // Hack, but good enough for the deploy server..\n    }));\n  } catch (e) {\n    return {\n      statusCode: null,\n      errorMessage: \"Connection error (\" + e.message + \")\"\n    };\n  }\n\n  var response = result.response;\n  var body = result.body;\n  var ret = { statusCode: response.statusCode };\n\n  if (response.statusCode !== 200) {\n    ret.errorMessage = body.length > 0 ? body : genericError;\n    return ret;\n  }\n\n  var contentType = response.headers[\"content-type\"] || '';\n  if (contentType === \"application/json; charset=utf-8\") {\n    try {\n      ret.payload = JSON.parse(body);\n    } catch (e) {\n      ret.errorMessage = genericError;\n      return ret;\n    }\n  } else if (contentType === \"text/plain; charset=utf-8\") {\n    ret.message = body;\n  }\n\n  var hasAllExpectedKeys = _.all(_.map(\n    options.expectPayload || [], function (key) {\n      return ret.payload && _.has(ret.payload, key);\n    }));\n\n  if ((options.expectPayload && ! _.has(ret, 'payload')) ||\n      (options.expectMessage && ! _.has(ret, 'message')) ||\n      ! hasAllExpectedKeys) {\n    delete ret.payload;\n    delete ret.message;\n\n    ret.errorMessage = genericError;\n  }\n\n  return ret;\n};\n\n// Just like deployRpc, but also presents authentication. It will\n// prompt the user for a password, or use a Meteor Accounts\n// credential, as necessary.\n//\n// Additional options (beyond deployRpc):\n//\n// - preflight: if true, do everything but the actual RPC. The only\n//   other necessary option is 'site'. On failure, returns an object\n//   with errorMessage (just like deployRpc). On success, returns an\n//   object without an errorMessage key and with possible keys\n//   'protection' (value either 'password' or 'account') and\n//   'authorized' (true if the current user is an authorized user on\n//   this app).\n// - promptIfAuthFails: if true, then we think we are logged in with the\n//   accounts server but our authentication actually fails, then prompt\n//   the user to log in with a username and password and then resend the\n//   RPC.\nvar authedRpc = function (options) {\n  var rpcOptions = _.clone(options);\n  var preflight = rpcOptions.preflight;\n  delete rpcOptions.preflight;\n\n  // Fetch auth info\n  var infoResult = deployRpc({\n    operation: 'info',\n    site: rpcOptions.site,\n    expectPayload: []\n  });\n\n  if (infoResult.statusCode === 401 && rpcOptions.promptIfAuthFails) {\n    // Our authentication didn't validate, so prompt the user to log in\n    // again, and resend the RPC if the login succeeds.\n    var username = Console.readLine({\n      prompt: \"Username: \",\n      stream: process.stderr\n    });\n    var loginOptions = {\n      username: username,\n      suppressErrorMessage: true\n    };\n    if (auth.doInteractivePasswordLogin(loginOptions)) {\n      return authedRpc(options);\n    } else {\n      return {\n        statusCode: 403,\n        errorMessage: \"login failed.\"\n      };\n    }\n  }\n\n  if (infoResult.statusCode === 404) {\n    // Doesn't exist, therefore not protected.\n    return preflight ? { } : deployRpc(rpcOptions);\n  }\n\n  if (infoResult.errorMessage)\n    return infoResult;\n  var info = infoResult.payload;\n\n  if (! _.has(info, 'protection')) {\n    // Not protected.\n    //\n    // XXX should prompt the user to claim the app (only if deploying?)\n    return preflight ? { } : deployRpc(rpcOptions);\n  }\n\n  if (info.protection === \"password\") {\n    if (preflight) {\n      return { protection: info.protection };\n    }\n    // Password protected. Read a password, hash it, and include the\n    // hashed password as a query parameter when doing the RPC.\n    var password;\n    password = Console.readLine({\n      echo: false,\n      prompt: \"Password: \",\n      stream: process.stderr\n    });\n\n    // Hash the password so we never send plaintext over the\n    // wire. Doesn't actually make us more secure, but it means we\n    // won't leak a user's password, which they might use on other\n    // sites too.\n    var crypto = require('crypto');\n    var hash = crypto.createHash('sha1');\n    hash.update('S3krit Salt!');\n    hash.update(password);\n    password = hash.digest('hex');\n\n    rpcOptions = _.clone(rpcOptions);\n    rpcOptions.qs = _.clone(rpcOptions.qs || {});\n    rpcOptions.qs.password = password;\n\n    return deployRpc(rpcOptions);\n  }\n\n  if (info.protection === \"account\") {\n    if (! _.has(info, 'authorized')) {\n      // Absence of this implies that we are not an authorized user on\n      // this app\n      if (preflight) {\n        return { protection: info.protection };\n      } else {\n        return {\n          statusCode: null,\n          errorMessage: auth.isLoggedIn() ?\n            // XXX better error message (probably need to break out of\n            // the 'errorMessage printed with brief prefix' pattern)\n            \"Not an authorized user on this site\" :\n            \"Not logged in\"\n        };\n      }\n    }\n\n    // Sweet, we're an authorized user.\n    if (preflight) {\n      return {\n        protection: info.protection,\n        authorized: info.authorized\n      };\n    } else {\n      return deployRpc(rpcOptions);\n    }\n  }\n\n  return {\n    statusCode: null,\n    errorMessage: \"You need a newer version of Meteor to work with this site\"\n  };\n};\n\n// When the user is trying to do something with a legacy\n// password-protected app, instruct them to claim it with 'meteor\n// claim'.\nvar printLegacyPasswordMessage = function (site) {\n  Console.error(\n    \"\\nThis site was deployed with an old version of Meteor that used \" +\n    \"site passwords instead of user accounts. Now we have a much better \" +\n    \"system, Meteor developer accounts.\");\n  Console.error();\n  Console.error(\"If this is your site, please claim it into your account with\");\n  Console.error(\n    Console.command(\"meteor claim \" + site),\n    Console.options({ indent: 2 }));\n};\n\n// When the user is trying to do something with an app that they are not\n// authorized for, instruct them to get added via 'meteor authorized\n// --add' or switch accounts.\nvar printUnauthorizedMessage = function () {\n  var username = auth.loggedInUsername();\n  Console.error(\"Sorry, that site belongs to a different user.\");\n  if (username) {\n    Console.error(\"You are currently logged in as \" + username + \".\");\n  }\n  Console.error();\n  Console.error(\n    \"Either have the site owner use \" +\n    Console.command(\"'meteor authorized --add'\") + \" to add you as an \" +\n    \"authorized developer for the site, or switch to an authorized account \" +\n    \"with \" + Console.command(\"'meteor login'\") + \".\");\n};\n\n// Take a proposed sitename for deploying to. If it looks\n// syntactically good, canonicalize it (this essentially means\n// stripping 'http://' or a trailing '/' if present) and return it. If\n// not, print an error message to stderr and return null.\nvar canonicalizeSite = function (site) {\n  // There are actually two different bugs here. One is that the meteor deploy\n  // server does not support apps whose total site length is greater than 63\n  // (because of how it generates Mongo database names); that can be fixed on\n  // the server. After that, this check will be too strong, but we still will\n  // want to check that each *component* of the hostname is at most 63\n  // characters (url.parse will do something very strange if a component is\n  // larger than 63, which is the maximum legal length).\n  if (site.length > 63) {\n    Console.error(\n      \"The maximum hostname length currently supported is 63 characters: \" +\n      site + \" is too long. \" +\n      \"Please try again with a shorter URL for your site.\");\n    return false;\n  }\n\n  var url = site;\n  if (!url.match(':\\/\\/'))\n    url = 'http://' + url;\n\n  var parsed = require('url').parse(url);\n\n  if (! parsed.hostname) {\n    Console.info(\n      \"Please specify a domain to connect to, such as www.example.com or \" +\n      \"http://www.example.com/\");\n    return false;\n  }\n\n  if (parsed.pathname != '/' || parsed.hash || parsed.query) {\n    Console.info(\n      \"Sorry, Meteor does not yet support specific path URLs, such as \" +\n      Console.url(\"http://www.example.com/blog\") + \" .  Please specify the root of a domain.\");\n    return false;\n  }\n\n  return parsed.hostname;\n};\n\n// Run the bundler and deploy the result. Print progress\n// messages. Return a command exit code.\n//\n// Options:\n// - projectContext: the ProjectContext for the app\n// - site: site to deploy as\n// - settingsFile: file from which to read deploy settings (undefined\n//   to leave unchanged from previous deploy of the app, if any)\n// - recordPackageUsage: (defaults to true) if set to false, don't\n//   send information about packages used by this app to the package\n//   stats server.\n// - buildOptions: the 'buildOptions' argument to the bundler\nvar bundleAndDeploy = function (options) {\n  if (options.recordPackageUsage === undefined)\n    options.recordPackageUsage = true;\n\n  var site = canonicalizeSite(options.site);\n  if (! site)\n    return 1;\n\n  // We should give a username/password prompt if the user was logged in\n  // but the credentials are expired, unless the user is logged in but\n  // doesn't have a username (in which case they should hit the email\n  // prompt -- a user without a username shouldn't be given a username\n  // prompt). There's an edge case where things happen in the following\n  // order: user creates account, user sets username, credential expires\n  // or is revoked, user comes back to deploy again. In that case,\n  // they'll get an email prompt instead of a username prompt because\n  // the command-line tool didn't have time to learn about their\n  // username before the credential was expired.\n  auth.pollForRegistrationCompletion({\n    noLogout: true\n  });\n  var promptIfAuthFails = (auth.loggedInUsername() !== null);\n\n  // Check auth up front, rather than after the (potentially lengthy)\n  // bundling process.\n  var preflight = authedRpc({\n    site: site,\n    preflight: true,\n    promptIfAuthFails: promptIfAuthFails\n  });\n\n  if (preflight.errorMessage) {\n    Console.error(\"Error deploying application: \" + preflight.errorMessage);\n    return 1;\n  }\n\n  if (preflight.protection === \"password\") {\n    printLegacyPasswordMessage(site);\n    Console.error(\"If it's not your site, please try a different name!\");\n    return 1;\n\n  } else if (preflight.protection === \"account\" &&\n             ! preflight.authorized) {\n    printUnauthorizedMessage();\n    return 1;\n  }\n\n  var buildDir = files.mkdtemp('build_tar');\n  var bundlePath = files.pathJoin(buildDir, 'bundle');\n\n  Console.info('Deploying to ' + site + '.');\n\n  var settings = null;\n  var messages = buildmessage.capture({\n    title: \"preparing to deploy\",\n    rootPath: process.cwd()\n  }, function () {\n    if (options.settingsFile)\n      settings = files.getSettings(options.settingsFile);\n  });\n\n  if (! messages.hasMessages()) {\n    var bundler = require('../isobuild/bundler.js');\n\n    var bundleResult = bundler.bundle({\n      projectContext: options.projectContext,\n      outputPath: bundlePath,\n      buildOptions: options.buildOptions,\n      providePackageJSONForUnavailableBinaryDeps: !!process.env.METEOR_BINARY_DEP_WORKAROUND,\n    });\n\n    if (bundleResult.errors)\n      messages = bundleResult.errors;\n  }\n\n  if (messages.hasMessages()) {\n    Console.info(\"\\nErrors prevented deploying:\");\n    Console.info(messages.formatMessages());\n    return 1;\n  }\n\n  if (options.recordPackageUsage) {\n    stats.recordPackages({\n      what: \"sdk.deploy\",\n      projectContext: options.projectContext,\n      site: site\n    });\n  }\n\n  var result = buildmessage.enterJob({ title: \"uploading\" }, function () {\n    return authedRpc({\n      method: 'POST',\n      operation: 'deploy',\n      site: site,\n      qs: settings !== null ? {settings: settings} : {},\n      bodyStream: files.createTarGzStream(files.pathJoin(buildDir, 'bundle')),\n      expectPayload: ['url'],\n      preflightPassword: preflight.preflightPassword\n    });\n  });\n\n\n  if (result.errorMessage) {\n    Console.error(\"\\nError deploying application: \" + result.errorMessage);\n    return 1;\n  }\n\n  var deployedAt = require('url').parse(result.payload.url);\n  var hostname = deployedAt.hostname;\n\n  Console.info('Now serving at http://' + hostname);\n\n  if (! hostname.match(/meteor\\.com$/)) {\n    var dns = require('dns');\n    dns.resolve(hostname, 'CNAME', function (err, cnames) {\n      if (err || cnames[0] !== 'origin.meteor.com') {\n        dns.resolve(hostname, 'A', function (err, addresses) {\n          if (err || addresses[0] !== '107.22.210.133') {\n            Console.info('-------------');\n            Console.info(\n              \"You've deployed to a custom domain.\",\n              \"Please be sure to CNAME your hostname\",\n              \"to origin.meteor.com, or set an A record to 107.22.210.133.\");\n            Console.info('-------------');\n          }\n        });\n      }\n    });\n  }\n\n  return 0;\n};\n\nvar deleteApp = function (site) {\n  site = canonicalizeSite(site);\n  if (! site)\n    return 1;\n\n  var result = authedRpc({\n    method: 'DELETE',\n    operation: 'deploy',\n    site: site,\n    promptIfAuthFails: true\n  });\n\n  if (result.errorMessage) {\n    Console.error(\"Couldn't delete application: \" + result.errorMessage);\n    return 1;\n  }\n\n  Console.info(\"Deleted.\");\n  return 0;\n};\n\n// Helper that does a preflight request to check auth, and prints the\n// appropriate error message if auth fails or if this is a legacy\n// password-protected app. If auth succeeds, then it runs the actual\n// RPC. 'site' and 'operation' are the site and operation for the\n// RPC. 'what' is a string describing the operation, for use in error\n// messages.  Returns the result of the RPC if successful, or null\n// otherwise (including if auth failed or if the user is not authorized\n// for this site).\nvar checkAuthThenSendRpc = function (site, operation, what) {\n  var preflight = authedRpc({\n    operation: operation,\n    site: site,\n    preflight: true,\n    promptIfAuthFails: true\n  });\n\n  if (preflight.errorMessage) {\n    Console.error(\"Couldn't \" + what + \": \" + preflight.errorMessage);\n    return null;\n  }\n\n  if (preflight.protection === \"password\") {\n    printLegacyPasswordMessage(site);\n    return null;\n  } else if (preflight.protection === \"account\" &&\n             ! preflight.authorized) {\n    if (! auth.isLoggedIn()) {\n      // Maybe the user is authorized for this app but not logged in\n      // yet, so give them a login prompt.\n      var loginResult = auth.doUsernamePasswordLogin({ retry: true });\n      if (loginResult) {\n        // Once we've logged in, retry the whole operation. We need to\n        // do the preflight request again instead of immediately moving\n        // on to the real RPC because we don't yet know if the newly\n        // logged-in user is authorized for this app, and if they\n        // aren't, then we want to print the nice unauthorized error\n        // message.\n        return checkAuthThenSendRpc(site, operation, what);\n      } else {\n        // Shouldn't ever get here because we set the retry flag on the\n        // login, but just in case.\n        Console.error(\n          \"\\nYou must be logged in to \" + what + \" for this app. Use \" +\n           Console.command(\"'meteor login'\") + \"to log in.\");\n        Console.error();\n        Console.error(\n          \"If you don't have a Meteor developer account yet, you can quickly \" +\n          \"create one at www.meteor.com.\");\n        return null;\n      }\n    } else { // User is logged in but not authorized for this app\n      Console.error();\n      printUnauthorizedMessage();\n      return null;\n    }\n  }\n\n  // User is authorized for the app; go ahead and do the actual RPC.\n\n  var result = authedRpc({\n    operation: operation,\n    site: site,\n    expectMessage: true,\n    promptIfAuthFails: true\n  });\n\n  if (result.errorMessage) {\n    Console.error(\"Couldn't \" + what + \": \" + result.errorMessage);\n    return null;\n  }\n\n  return result;\n};\n\n// On failure, prints a message to stderr and returns null. Otherwise,\n// returns a temporary authenticated Mongo URL allowing access to this\n// site's database.\nvar temporaryMongoUrl = function (site) {\n  site = canonicalizeSite(site);\n  if (! site)\n    // canonicalizeSite printed an error\n    return null;\n\n  var result = checkAuthThenSendRpc(site, 'mongo', 'open a mongo connection');\n\n  if (result !== null) {\n    return result.message;\n  } else {\n    return null;\n  }\n};\n\nvar logs = function (site) {\n  site = canonicalizeSite(site);\n  if (! site)\n    return 1;\n\n  var result = checkAuthThenSendRpc(site, 'logs', 'view logs');\n\n  if (result === null) {\n    return 1;\n  } else {\n    Console.info(result.message);\n    auth.maybePrintRegistrationLink({ leadingNewline: true });\n    return 0;\n  }\n};\n\nvar listAuthorized = function (site) {\n  site = canonicalizeSite(site);\n  if (! site)\n    return 1;\n\n  var result = deployRpc({\n    operation: 'info',\n    site: site,\n    expectPayload: []\n  });\n  if (result.errorMessage) {\n    Console.error(\"Couldn't get authorized users list: \" + result.errorMessage);\n    return 1;\n  }\n  var info = result.payload;\n\n  if (! _.has(info, 'protection')) {\n    Console.info(\"<anyone>\");\n    return 0;\n  }\n\n  if (info.protection === \"password\") {\n    Console.info(\"<password>\");\n    return 0;\n  }\n\n  if (info.protection === \"account\") {\n    if (! _.has(info, 'authorized')) {\n      Console.error(\"Couldn't get authorized users list: \" +\n                    \"You are not authorized\");\n      return 1;\n    }\n\n    Console.info((auth.loggedInUsername() || \"<you>\"));\n    _.each(info.authorized, function (username) {\n      if (username)\n        // Current username rules don't let you register anything that we might\n        // want to split over multiple lines (ex: containing a space), but we\n        // don't want confusion if we ever change some implementation detail.\n        Console.rawInfo(username + \"\\n\");\n    });\n    return 0;\n  }\n};\n\n// action is \"add\" or \"remove\"\nvar changeAuthorized = function (site, action, username) {\n  site = canonicalizeSite(site);\n  if (! site)\n    // canonicalizeSite will have already printed an error\n    return 1;\n\n  var result = authedRpc({\n    method: 'POST',\n    operation: 'authorized',\n    site: site,\n    qs: action === \"add\" ? { add: username } : { remove: username },\n    promptIfAuthFails: true\n  });\n\n  if (result.errorMessage) {\n    Console.error(\"Couldn't change authorized users: \" + result.errorMessage);\n    return 1;\n  }\n\n  Console.info(site + \": \" +\n               (action === \"add\" ? \"added \" : \"removed \")\n                + username);\n  return 0;\n};\n\nvar claim = function (site) {\n  site = canonicalizeSite(site);\n  if (! site)\n    // canonicalizeSite will have already printed an error\n    return 1;\n\n  // Check to see if it's even a claimable site, so that we can print\n  // a more appropriate message than we'd get if we called authedRpc\n  // straight away (at a cost of an extra REST call)\n  var infoResult = deployRpc({\n    operation: 'info',\n    site: site\n  });\n  if (infoResult.statusCode === 404) {\n    Console.error(\n      \"There isn't a site deployed at that address. Use \" +\n      Console.command(\"'meteor deploy'\") + \" \" +\n      \"if you'd like to deploy your app here.\");\n    return 1;\n  }\n\n  if (infoResult.payload && infoResult.payload.protection === \"account\") {\n    if (infoResult.payload.authorized)\n      Console.error(\"That site already belongs to you.\\n\");\n    else\n      Console.error(\"Sorry, that site belongs to someone else.\\n\");\n    return 1;\n  }\n\n  if (infoResult.payload &&\n      infoResult.payload.protection === \"password\") {\n    Console.info(\n      \"To claim this site and transfer it to your account, enter the\",\n      \"site password one last time.\");\n    Console.info();\n  }\n\n  var result = authedRpc({\n    method: 'POST',\n    operation: 'claim',\n    site: site,\n    promptIfAuthFails: true\n  });\n\n  if (result.errorMessage) {\n    auth.pollForRegistrationCompletion();\n    if (! auth.loggedInUsername() &&\n        auth.registrationUrl()) {\n      Console.error(\n        \"You need to set a password on your Meteor developer account before\",\n        \"you can claim sites. You can do that here in under a minute:\");\n      Console.error(Console.url(auth.registrationUrl()));\n      Console.error();\n    } else {\n      Console.error(\"Couldn't claim site: \" + result.errorMessage);\n    }\n    return 1;\n  }\n\n  Console.info(site + \": \" + \"successfully transferred to your account.\");\n  Console.info();\n  Console.info(\"Show authorized users with:\");\n  Console.info(\n    Console.command(\"meteor authorized \" + site),\n    Console.options({ indent: 2 }));\n  Console.info();\n  Console.info(\"Add authorized users with:\");\n  Console.info(\n    Console.command(\"meteor authorized \" + site + \" --add <username>\"),\n    Console.options({ indent: 2 }));\n  Console.info();\n  Console.info(\"Remove authorized users with:\");\n  Console.info(\n    Console.command(\"meteor authorized \" + site + \" --remove <username>\"),\n    Console.options({ indent: 2 }));\n  Console.info();\n  return 0;\n};\n\nvar listSites = function () {\n  var result = deployRpc({\n    method: \"GET\",\n    operation: \"authorized-apps\",\n    promptIfAuthFails: true,\n    expectPayload: [\"sites\"]\n  });\n\n  if (result.errorMessage) {\n    Console.error(\"Couldn't list sites: \" + result.errorMessage);\n    return 1;\n  }\n\n  if (! result.payload ||\n      ! result.payload.sites ||\n      ! result.payload.sites.length) {\n    Console.info(\"You don't have any sites yet.\");\n  } else {\n    result.payload.sites.sort();\n    _.each(result.payload.sites, function (site) {\n      Console.info(site);\n    });\n  }\n  return 0;\n};\n\n\nexports.bundleAndDeploy = bundleAndDeploy;\nexports.deleteApp = deleteApp;\nexports.temporaryMongoUrl = temporaryMongoUrl;\nexports.logs = logs;\nexports.listAuthorized = listAuthorized;\nexports.changeAuthorized = changeAuthorized;\nexports.claim = claim;\nexports.listSites = listSites;\n"]}