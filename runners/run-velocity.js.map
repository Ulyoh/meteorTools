{"version":3,"sources":["/tools/runners/run-velocity.js"],"names":[],"mappings":"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","file":"tools/runners/run-velocity.js.map","sourcesContent":["var Console = require('../console/console.js').Console;\nvar isopackets = require('../tool-env/isopackets.js');\n\nvar phantomjs = require('phantomjs');\nvar child_process = require('child_process');\nvar _ = require('underscore');\n\n// XXX this could really use a self-test!\n\n// XXX would be nice be nice if this didn't have to be in core. Perhaps\n// at some point we'll have an API for packages to register commands in\n// the tool.\n\n// 1. Establish a DDP connection to Meteor\n// 2. Subscribe to the Velocity subscriptions that tell us\n//    which tests pass/fail and when all tests have completed.\n// 3. Open the app server with PhantomJS to run client side tests.\n// 4. Print the results and exit with the appropriate exit code.\nvar runVelocity = function (url) {\n  var unipackages = isopackets.load('ddp');\n  var DDP = unipackages['ddp-client'].DDP;\n\n  // XXX maybe a startup message so users know the tests are running.\n\n  // All running browser processes that visit the mirror pages\n  var browserProcesses = [];\n  // Maps mirror id to url\n  var mirrorUrls = {};\n  var ddpConnection = DDP.connect(url);\n\n  var killBrowserProcesses = function () {\n    browserProcesses.forEach(function (browserProcess) {\n      browserProcess.kill('SIGINT');\n    });\n    browserProcesses = [];\n  };\n\n  var interval = setInterval(function () {\n    if (ddpConnection.status().status === \"connected\") {\n      clearInterval(interval);\n\n      ddpConnection.subscribe(\"VelocityTestReports\", {\n        onError: function () {\n          Console.error(\"failed to subscribe to VelocityTestReports \" +\n                        \"subscription\");\n          // XXX tell user to add velocity:core\n          // XXX these also fire if the user turns on autopublish\n        }, onReady: function () {\n          this.connection.registerStore(\"velocityTestReports\", {\n            update: function (msg) {\n              if (msg.msg === \"added\") {\n                var testDesc = msg.fields.framework + \" : \" +\n                      msg.fields.ancestors.join(\":\") + \" => \" + msg.fields.name;\n                if (msg.fields.result === \"passed\") {\n                  console.log(\"PASSED\", testDesc);\n                } else if (msg.fields.result === \"failed\") {\n                  console.error(\"FAILED\", testDesc);\n                  console.log(msg.fields.failureStackTrace);\n                }\n              }\n            }\n          });\n        }\n      });\n\n      var reports = {};\n      function updateReport(msg) {\n        var report = reports[msg.id];\n        if (! report) {\n          reports[msg.id] = msg.fields;\n        } else {\n          _.extend(report, msg.fields);\n        }\n      }\n      var aggregateResult = null;\n      var isFinished = false;\n      ddpConnection.subscribe(\"VelocityAggregateReports\", {\n        onError: function () {\n          Console.error(\"failed to subscribe to \" +\n                        \"VelocityAggregateReports subscription\");\n        }, onReady: function () {\n          this.connection.registerStore(\"velocityAggregateReports\", {\n            update: function (msg) {\n              if (msg.msg === \"added\" || msg.msg === \"changed\") {\n                updateReport(msg);\n                var report = reports[msg.id];\n\n                if (report.name === \"aggregateResult\") {\n                  aggregateResult = report.result;\n                }\n\n                if (report.name === \"aggregateComplete\" &&\n                    report.result === \"completed\") {\n                  setTimeout(function () {\n                    killBrowserProcesses();\n                    if (aggregateResult === \"passed\") {\n                      console.log(\"TESTS RAN SUCCESSFULLY\");\n                      // XXX XXX this is not great. We shouldn't be\n                      // exiting from deep within code like this. Better\n                      // would be to integrate with run --once, and\n                      // signal the inner process to exit cleanly on\n                      // test completion.\n                      process.exit(0);\n                    }\n                    if (aggregateResult === \"failed\") {\n                      console.log(\"FAILURE\");\n                      process.exit(1);\n                    }\n                  }, 2000);\n                }\n              }\n            }\n          });\n        }\n      });\n\n      function visitWithPhantom (url) {\n        var phantomScript = \"require('webpage').create().open('\" + url + \"');\";\n        var browserProcess = child_process.execFile(\n          '/bin/bash',\n          ['-c',\n           (\"exec \" + phantomjs.path + \" /dev/stdin <<'END'\\n\" +\n            phantomScript + \"END\\n\")]);\n        browserProcesses.push(browserProcess);\n      }\n\n      ddpConnection.subscribe(\"VelocityMirrors\", {\n        onError: function (err) {\n          Console.error(\"failed to subscribe to VelocityMirrors \" +\n                        \"subscription\", err);\n        }, onReady: function () {\n          this.connection.registerStore(\"velocityMirrors\", {\n            update: function (msg) {\n              if (isMirrorUrlMessage(msg)) {\n                mirrorUrls[msg.id] = generateMirrorUrl(\n                  msg.fields.rootUrl,\n                  msg.fields.rootUrlPath\n                );\n              }\n              if (isMirrorReadyMessage(msg)) {\n                var mirrorUrl = mirrorUrls[msg.id];\n                if (mirrorUrl) {\n                  visitWithPhantom(mirrorUrl);\n                } else {\n                  Console.error(\n                    \"Could not find URL of mirror \" +\n                    \"with the MongoDB ID \" + msg.id\n                  );\n                }\n              }\n            }\n          });\n        }\n      });\n\n      function isUpdateMessage(msg) {\n        return msg.msg === \"added\" || msg.msg === \"changed\";\n      }\n\n      function isMirrorUrlMessage(msg) {\n        return isUpdateMessage(msg) && msg.fields.rootUrl;\n      }\n\n      function isMirrorReadyMessage(msg) {\n        return isUpdateMessage(msg) && msg.fields.state === \"ready\";\n      }\n\n      function generateMirrorUrl(rootUrl, rootUrlPath) {\n        var mirrorUrl = rootUrl;\n        // Handle the breaking change in velocity:core 0.5\n        // See: https://github.com/meteor-velocity/velocity/issues/260\n        if (rootUrlPath && mirrorUrl.indexOf(rootUrlPath) === -1) {\n          mirrorUrl += rootUrlPath;\n        }\n\n        return mirrorUrl;\n      }\n    }\n  }, 2000);\n};\n\nexports.runVelocity = runVelocity;\n"]}