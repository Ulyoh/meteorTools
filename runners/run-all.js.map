{"version":3,"sources":["/tools/runners/run-all.js"],"names":[],"mappings":"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","file":"tools/runners/run-all.js.map","sourcesContent":["const _ = require('underscore');\nconst Fiber = require('fibers');\nconst Future = require('fibers/future');\n\nconst files = require('../fs/files.js');\nconst buildmessage = require('../utils/buildmessage.js');\nconst runLog = require('./run-log.js');\nconst release = require('../packaging/release.js');\n\nconst Console = require('../console/console.js').Console;\n\nconst Proxy = require('./run-proxy.js').Proxy;\nconst Selenium = require('./run-selenium.js').Selenium;\nconst AppRunner = require('./run-app.js').AppRunner;\nconst MongoRunner = require('./run-mongo.js').MongoRunner;\nconst Updater = require('./run-updater.js').Updater;\n\nclass Runner {\n  constructor({\n    appHost,\n    appPort,\n    banner,\n    disableOplog,\n    cordovaRunner,\n    mongoUrl,\n    onFailure,\n    oplogUrl,\n    projectContext,\n    proxyHost,\n    proxyPort,\n    quiet,\n    rootUrl,\n    selenium,\n    seleniumBrowser,\n    ...optionsForAppRunner\n  }) {\n    const self = this;\n    self.projectContext = projectContext;\n\n    if (typeof proxyPort === 'undefined') {\n      throw new Error('no proxyPort?');\n    }\n\n    const listenPort = proxyPort;\n    const mongoPort = parseInt(listenPort, 10) + 1;\n    self.specifiedAppPort = appPort;\n    self.regenerateAppPort();\n\n    self.stopped = false;\n    self.quiet = quiet;\n    self.banner = banner || files.convertToOSPath(\n      files.prettyPath(self.projectContext.projectDir)\n    );\n\n    if (rootUrl) {\n      self.rootUrl = rootUrl;\n    } else if (proxyHost) {\n      self.rootUrl = 'http://' + proxyHost + ':' + listenPort + '/';\n    } else {\n      self.rootUrl = 'http://localhost:' + listenPort + '/';\n    }\n\n    self.proxy = new Proxy({\n      listenPort,\n      listenHost: proxyHost,\n      proxyToPort: self.appPort,\n      proxyToHost: appHost,\n      onFailure\n    });\n\n    self.mongoRunner = null;\n    if (mongoUrl) {\n      oplogUrl = disableOplog ? null : oplogUrl;\n    } else {\n      self.mongoRunner = new MongoRunner({\n        appDir: self.projectContext.projectDir,\n        port: mongoPort,\n        onFailure,\n        // For testing mongod failover, run with 3 mongod if the env var is\n        // set. Note that data is not preserved from one run to the next.\n        multiple: !!process.env.METEOR_TEST_MULTIPLE_MONGOD_REPLSET\n      });\n\n      mongoUrl = self.mongoRunner.mongoUrl();\n      oplogUrl = disableOplog ? null : self.mongoRunner.oplogUrl();\n    }\n\n    self.updater = new Updater();\n\n    self.appRunner = new AppRunner({\n      ...optionsForAppRunner,\n      projectContext: self.projectContext,\n      port: self.appPort,\n      listenHost: appHost,\n      mongoUrl,\n      oplogUrl,\n      rootUrl: self.rootUrl,\n      proxy: self.proxy,\n      noRestartBanner: self.quiet,\n      cordovaRunner: cordovaRunner\n    });\n\n    self.selenium = null;\n    if (selenium) {\n      self.selenium = new Selenium({\n        runner: self,\n        browser: seleniumBrowser\n      });\n    }\n  }\n\n  // XXX leave a pidfile and check if we are already running\n  start() {\n    const self = this;\n\n    self.proxy.start();\n\n    // print the banner only once we've successfully bound the port\n    if (! self.quiet && ! self.stopped) {\n      runLog.log(\"[[[[[ \" + self.banner + \" ]]]]]\\n\");\n      runLog.log(\"Started proxy.\",  { arrow: true });\n    }\n\n    self._startMongoAsync();\n\n    if (! self.stopped) {\n      self.updater.start();\n    }\n\n    if (! self.stopped) {\n      buildmessage.enterJob({ title: \"starting your app\" }, function () {\n        self.appRunner.start();\n      });\n      if (! self.quiet && ! self.stopped)\n        runLog.log(\"Started your app.\",  { arrow: true });\n    }\n\n    if (! self.stopped && ! self.quiet) {\n      runLog.log(\"\");\n      runLog.log(\"App running at: \" + self.rootUrl,  { arrow: true });\n\n      if (process.platform === \"win32\") {\n        runLog.log(\"   Type Control-C twice to stop.\");\n        runLog.log(\"\");\n      }\n    }\n\n    if (self.selenium && ! self.stopped) {\n      buildmessage.enterJob({ title: \"starting Selenium\" }, function () {\n        self.selenium.start();\n      });\n      if (! self.quiet && ! self.stopped)\n        runLog.log(\"Started Selenium.\", { arrow: true });\n    }\n\n    // XXX It'd be nice to (cosmetically) handle failure better. Right\n    // now we overwrite the \"starting foo...\" message with the\n    // error. It'd be better to overwrite it with \"failed to start\n    // foo\" and then print the error.\n  }\n\n  _startMongoAsync() {\n    const self = this;\n    if (! self.stopped && self.mongoRunner) {\n      const future = new Future;\n      self.appRunner.awaitFutureBeforeStart(future);\n      Fiber(function () {\n        self.mongoRunner.start();\n        if (! self.stopped && ! self.quiet) {\n          runLog.log(\"Started MongoDB.\",  { arrow: true });\n        }\n        // This future might also get resolved by appRunner.stop, so we need\n        // this check here (which is why we can't use f.future(), which does not\n        // have this check).\n        future.isResolved() || future.return();\n      }).run();\n    }\n  }\n\n  // Idempotent\n  stop() {\n    const self = this;\n    if (self.stopped)\n      return;\n\n    self.stopped = true;\n    self.proxy.stop();\n    self.updater.stop();\n    self.mongoRunner && self.mongoRunner.stop();\n    self.appRunner.stop();\n    self.selenium && self.selenium.stop();\n    // XXX does calling this 'finish' still make sense now that runLog is a\n    // singleton?\n    runLog.finish();\n  }\n\n  // Call this whenever you want to regenerate the app's port (if it is not\n  // explicitly specified by the user).\n  //\n  // Rationale: if we randomly chose a port that's in use and the app failed to\n  // listen on it, we should try a different port when we restart the app!\n  regenerateAppPort() {\n    const self = this;\n    if (self.specifiedAppPort) {\n      self.appPort = self.specifiedAppPort;\n    } else {\n      self.appPort = require('../utils/utils.js').randomPort();\n    }\n    if (self.proxy)\n      self.proxy.proxyToPort = self.appPort;\n    if (self.appRunner)\n      self.appRunner.port = self.appPort;\n  }\n}\n\n// Run the app and all of its associated processes. Runs (and does not\n// return) until an unrecoverable failure happens. Logs to\n// stdout. Returns a suggested exit code.\n//\n// If 'once' is set, run the app process exactly once and pass through\n// its exit code. Return an exit code of 255 if the app process was\n// killed by a signal and 254 if the app process could not start\n// (build failure, invalid program name, database couldn't start, and\n// so on).\n//\n// If the 'once' option is not set, the default, restart the app\n// process if it crashes or if source files change. (Non-app\n// processes, such as the database, are always restarted as\n// necessary.) The function will only return if there is an\n// unrecoverable error, which generally means an error that could not\n// be fixed by source code changes (such as the database refusing to\n// run), but also currently includes Meteor version mismatches. So the\n// exit code will always be 254 because in all other cases we'll\n// persevere.\n//\n// Options:\n//\n// - proxyPort: the port to connect to to access the application (we will\n//   run a proxy here that proxies to the actual app process). required\n// - buildOptions: 'buildOptions' argument to bundler.bundle()\n// - settingsFile: path to file containing deploy-time settings\n// - once: see above\n// - banner: replace the application path that is normally printed on\n//   startup with an arbitrary string (eg, 'Tests')\n// - rootUrl: tell the app that traffic at this URL will be routed to\n//   it at '/' (used by the app to construct absolute URLs)\n// - disableOplog: don't use oplog tailing\n// - mongoUrl: don't start a mongo process; instead use the mongo at\n//   this mongo URL\n// - oplogUrl: URL of the mongo oplog to use. if mongoUrl isn't\n//   set (we're starting a mongo) a default will be provided, but can\n//   be overridden. if mongoUrl is set, you must set this or you don't\n//   get oplog tailing.\n// - recordPackageUsage: (default true) if set to false, don't send\n//   information about packages used by this app to the package stats\n//   server.\nexports.run = function (options) {\n  var runOptions = _.clone(options);\n  var once = runOptions.once;\n  delete runOptions.once;\n\n  var fut = new Future;\n\n  _.extend(runOptions, {\n    onFailure: function () {\n      // Ensure that runner stops now. You might think this is unnecessary\n      // because the runner is stopped immediately after `fut.wait()`, but if\n      // the failure happens while runner.start() is still running, we want the\n      // rest of start to stop, and it's not like fut['return'] magically makes\n      // us jump to a fut.wait() that hasn't happened yet!.\n      runner.stop();\n      fut.isResolved() || fut['return']({ outcome: 'failure' });\n    },\n    onRunEnd: function (result) {\n      if (once ||\n          result.outcome === \"conflicting-versions\" ||\n          result.outcome === \"wrong-release\" ||\n          result.outcome === \"outdated-cordova-platforms\" ||\n          result.outcome === \"outdated-cordova-plugins\" ||\n          (result.outcome === \"terminated\" &&\n           result.signal === undefined && result.code === undefined)) {\n        // Allow run() to continue (and call runner.stop()) only once the\n        // AppRunner has processed our \"return false\"; otherwise we deadlock.\n        process.nextTick(function () {\n          fut.isResolved() || fut['return'](result);\n        });\n        return false;  // stop restarting\n      }\n      runner.regenerateAppPort();\n      return true;  // restart it\n    },\n    watchForChanges: ! once,\n    quiet: once\n  });\n\n  var runner = new Runner(runOptions);\n  runner.start();\n  var result = fut.wait();\n  runner.stop();\n\n  if (result.outcome === \"conflicting-versions\") {\n    Console.error(\n      \"The constraint solver could not find a set of package versions to\",\n      \"use that would satisfy the constraints of .meteor/versions and\",\n      \".meteor/packages. This could be caused by conflicts in\",\n      \".meteor/versions, conflicts in .meteor/packages, and/or\",\n      \"inconsistent changes to the dependencies in local packages.\");\n    return 254;\n  }\n\n  if (result.outcome === \"outdated-cordova-plugins\") {\n    Console.error(\"Your app's Cordova plugins have changed.\");\n    Console.error(\"Restart meteor to use the new set of plugins.\");\n    return 254;\n  }\n\n  if (result.outcome === \"outdated-cordova-platforms\") {\n    Console.error(\"Your app's platforms have changed.\");\n    Console.error(\"Restart meteor to use the new set of platforms.\");\n    return 254;\n  }\n\n  if (result.outcome === \"wrong-release\") {\n    if (once)\n      // We lost a race where the user ran 'meteor update' and 'meteor\n      // run --once' simultaneously.\n      throw new Error(\"wrong release?\");\n\n    // If the user did not specify a --release on the command line,\n    // and simultaneously runs `meteor update` during this run, just\n    // exit and let them restart the run. (We can do something fancy\n    // like allowing this to work if the tools version didn't change,\n    // or even springboarding if the tools version does change, but\n    // this (which prevents weird errors) is a start.)\n    var from = release.current.getDisplayName();\n    var to = result.displayReleaseNeeded;\n    Console.error(\n      \"Your app has been updated to \" + to + \" from \" + from + \".\",\n      \"Restart meteor to use the new release.\");\n    return 254;\n  }\n\n  if (result.outcome === \"failure\" ||\n      (result.outcome === \"terminated\" &&\n       result.signal === undefined && result.code === undefined)) {\n    // Fatal problem with something other than the app process. An\n    // explanation should already have been logged.\n    return 254;\n  }\n\n  if (once && result.outcome === \"bundle-fail\") {\n    Console.arrowError(\"Build failed:\\n\\n\" +\n                       result.errors.formatMessages());\n    return 254;\n  }\n\n  if (once && result.outcome === \"terminated\") {\n    if (result.signal) {\n      Console.error(\"Killed (\" + result.signal + \")\");\n      return 255;\n    } else if (typeof result.code === \"number\") {\n      // We used to print 'Your application is exiting' here, but that\n      // seems unnecessarily chatty? once mode is otherwise silent\n      return result.code;\n    } else {\n      // If there is neither a code nor a signal, it means that we\n      // failed to start the process. We logged the reason. Probably a\n      // bad program name.\n      return 254;\n    }\n  }\n\n  throw new Error(\"unexpected outcome \" + result.outcome);\n};\n"]}