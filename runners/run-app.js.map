{"version":3,"sources":["/tools/runners/run-app.js"],"names":[],"mappings":"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","file":"tools/runners/run-app.js.map","sourcesContent":["var _ = require('underscore');\nvar Future = require('fibers/future');\nvar Fiber = require('fibers');\nvar fiberHelpers = require('../utils/fiber-helpers.js');\nvar files = require('../fs/files.js');\nvar watch = require('../fs/watch.js');\nvar bundler = require('../isobuild/bundler.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar runLog = require('./run-log.js');\nvar stats = require('../meteor-services/stats.js');\nvar Console = require('../console/console.js').Console;\nvar catalog = require('../packaging/catalog/catalog.js');\nvar Profile = require('../tool-env/profile.js').Profile;\nvar release = require('../packaging/release.js');\nimport * as cordova from '../cordova';\nimport { CordovaBuilder } from '../cordova/builder.js';\n\n// Parse out s as if it were a bash command line.\nvar bashParse = function (s) {\n  if (s.search(\"\\\"\") !== -1 || s.search(\"'\") !== -1) {\n    throw new Error(\"Meteor cannot currently handle quoted NODE_OPTIONS\");\n  }\n  return _.without(s.split(/\\s+/), '');\n};\n\nvar getNodeOptionsFromEnvironment = function () {\n  return bashParse(process.env.NODE_OPTIONS || \"\");\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// AppProcess\n///////////////////////////////////////////////////////////////////////////////\n\n// Given a bundle, run a program in the bundle. Report when it dies.\n//\n// Call start() to start the process. You will then eventually receive\n// a call to onExit(code, signal): code is the numeric exit code of a\n// normal exit, signal is the string signal name if killed, and if\n// both are undefined it means something went wrong in invoking the\n// program and it was logged.\n//\n// If the app successfully starts up, you will also receive onListen()\n// once the app says it's ready to receive connections.\n//\n// Call stop() at any time after start() returns to terminate the\n// process if it is running. You will get an onExit callback if this\n// resulted in the process dying. stop() is idempotent.\n//\n// Required options: bundlePath, port, rootUrl, mongoUrl, oplogUrl\n// Optional options: onExit, onListen, nodeOptions, settings\n\nvar AppProcess = function (options) {\n  var self = this;\n\n  self.projectContext = options.projectContext;\n  self.bundlePath = options.bundlePath;\n  self.port = options.port;\n  self.listenHost = options.listenHost;\n  self.rootUrl = options.rootUrl;\n  self.mongoUrl = options.mongoUrl;\n  self.oplogUrl = options.oplogUrl;\n  self.mobileServerUrl = options.mobileServerUrl;\n\n  self.onExit = options.onExit;\n  self.onListen = options.onListen;\n  self.nodeOptions = options.nodeOptions || [];\n  self.nodePath = options.nodePath || [];\n  self.debugPort = options.debugPort;\n  self.settings = options.settings;\n\n  self.proc = null;\n  self.madeExitCallback = false;\n  self.ipcPipe = options.ipcPipe;\n};\n\n_.extend(AppProcess.prototype, {\n  // Call to start the process.\n  start: function () {\n    var self = this;\n\n    if (self.proc)\n      throw new Error(\"already started?\");\n\n    // Start the app!\n    self.proc = self._spawn();\n\n    // Send stdout and stderr to the runLog\n    var eachline = require('eachline');\n    eachline(self.proc.stdout, 'utf8', fiberHelpers.inBareFiber(function (line) {\n      if (line.match(/^LISTENING\\s*$/)) {\n        // This is the child process telling us that it's ready to receive\n        // connections.  (It does this because we told it to with\n        // $METEOR_PRINT_ON_LISTEN.)\n        self.onListen && self.onListen();\n\n      } else {\n        runLog.logAppOutput(line);\n      }\n    }));\n\n    eachline(self.proc.stderr, 'utf8', fiberHelpers.inBareFiber(function (line) {\n      if (self.debugPort &&\n          line.indexOf(\"debugger listening on port \") >= 0) {\n        Console.enableProgressDisplay(false);\n        return;\n      }\n\n      runLog.logAppOutput(line, true);\n    }));\n\n    // Watch for exit and for stdio to be fully closed (so that we don't miss\n    // log lines).\n    self.proc.on('close', fiberHelpers.inBareFiber(function (code, signal) {\n      self._maybeCallOnExit(code, signal);\n    }));\n\n    self.proc.on('error', fiberHelpers.inBareFiber(function (err) {\n      // if the error is the result of .send command over ipc pipe, ignore it\n      if (self._refreshing) {\n        return;\n      }\n\n      runLog.log(\"Couldn't spawn process: \" + err.message,  { arrow: true });\n\n      // node docs say that it might make both an 'error' and a\n      // 'close' callback, so we use a guard to make sure we only call\n      // onExit once.\n      self._maybeCallOnExit();\n    }));\n\n    // This happens sometimes when we write a keepalive after the app\n    // is dead. If we don't register a handler, we get a top level\n    // exception and the whole app dies.\n    // http://stackoverflow.com/questions/2893458/uncatchable-errors-in-node-js\n    self.proc.stdin.on('error', function () {});\n\n    // When the parent process exits (i.e. the server is shutting down and\n    // not merely restarting), make sure to disconnect any still-connected\n    // shell clients.\n    require('../tool-env/cleanup.js').onExit(function() {\n      require('../static-assets/server/shell-server.js').disable(\n        self.projectContext.getMeteorShellDirectory()\n      );\n    });\n  },\n\n  _maybeCallOnExit: function (code, signal) {\n    var self = this;\n    if (self.madeExitCallback)\n      return;\n    self.madeExitCallback = true;\n    self.onExit && self.onExit(code, signal);\n  },\n\n  // Idempotent. Once stop() returns it is guaranteed that you will\n  // receive no more callbacks from this AppProcess.\n  stop: function () {\n    var self = this;\n\n    if (self.proc && self.proc.pid) {\n      self.proc.removeAllListeners('close');\n      self.proc.removeAllListeners('error');\n      self.proc.kill();\n    }\n    self.proc = null;\n\n    self.onListen = null;\n    self.onExit = null;\n  },\n\n  _computeEnvironment: function () {\n    var self = this;\n    var env = _.extend({}, process.env);\n\n    env.PORT = self.port;\n    env.ROOT_URL = self.rootUrl;\n    env.MONGO_URL = self.mongoUrl;\n    if (self.mobileServerUrl) {\n      env.MOBILE_DDP_URL = self.mobileServerUrl;\n      env.MOBILE_ROOT_URL = self.mobileServerUrl;\n    }\n\n    if (self.oplogUrl) {\n      env.MONGO_OPLOG_URL = self.oplogUrl;\n    }\n    if (self.settings) {\n      env.METEOR_SETTINGS = self.settings;\n    } else {\n      delete env.METEOR_SETTINGS;\n    }\n    if (self.listenHost) {\n      env.BIND_IP = self.listenHost;\n    } else {\n      delete env.BIND_IP;\n    }\n    env.APP_ID = self.projectContext.appIdentifier;\n\n    // Display errors from (eg) the NPM connect module over the network.\n    env.NODE_ENV = 'development';\n    // We run the server behind our own proxy, so we need to increment\n    // the HTTP forwarded count.\n    env.HTTP_FORWARDED_COUNT =\n      \"\" + ((parseInt(process.env['HTTP_FORWARDED_COUNT']) || 0) + 1);\n\n    var shellDir = self.projectContext.getMeteorShellDirectory();\n    files.mkdir_p(shellDir);\n\n    // We need to convert to OS path here because the running app doesn't\n    // have access to path translation functions\n    env.METEOR_SHELL_DIR = files.convertToOSPath(shellDir);\n\n    env.METEOR_PARENT_PID =\n      process.env.METEOR_BAD_PARENT_PID_FOR_TEST ? \"foobar\" : process.pid;\n\n    env.METEOR_PRINT_ON_LISTEN = 'true';\n\n    // use node's path module and not 'files.js' because NODE_PATH is an\n    // environment variable passed to an external process and needs to be\n    // constructed in the OS-style.\n    var path = require('path');\n    env.NODE_PATH =\n      self.nodePath.join(path.delimiter);\n\n    return env;\n  },\n\n  // Spawn the server process and return the handle from child_process.spawn.\n  _spawn: function () {\n    var self = this;\n\n    // Path conversions\n    var nodePath = process.execPath; // This path is an OS path already\n    var entryPoint = files.convertToOSPath(\n      files.pathJoin(self.bundlePath, 'main.js'));\n\n    // Setting options\n    var opts = _.clone(self.nodeOptions);\n\n    var attach;\n    if (self.debugPort) {\n      attach = require('../inspector.js').start(self.debugPort, entryPoint);\n\n      // If you do opts.push(\"--debug-brk\", port) it doesn't work on Windows\n      // for some reason\n      opts.push(\"--debug-brk=\" + attach.suggestedDebugBrkPort);\n    }\n\n    opts.push(entryPoint);\n\n    // Call node\n    var child_process = require('child_process');\n    // setup the 'ipc' pipe if further communication between app and proxy is\n    // expected\n    var ioOptions = self.ipcPipe ? ['pipe', 'pipe', 'pipe', 'ipc'] : 'pipe';\n    var child = child_process.spawn(nodePath, opts, {\n      env: self._computeEnvironment(),\n      stdio: ioOptions\n    });\n\n    // Attach inspector\n    if (attach) {\n      attach(child);\n    }\n\n    return child;\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// AppRunner\n///////////////////////////////////////////////////////////////////////////////\n\n// Given an app, bundle and run the app. If the app's source changes,\n// kill, rebundle, and rerun it. If the app dies, restart it, unless\n// it dies repeatedly immediately after being started, in which case\n// wait for source changes to restart.\n//\n// Communicates with a Proxy to tell it when the app is up,\n// temporarily down, or crashing.\n//\n// Options include:\n//\n// - onRunEnd(result): If provided, called after each run of the program (or\n//   attempted run, if, say, bundling fails). Blocks restarting until it\n//   returns. See below for the format of 'result'. Return truthy to continue;\n//   return falsey to give up (without logging any more status messages). Do not\n//   call stop() from onRunEnd as that would necessarily deadlock.\n//\n// - watchForChanges: If true, the default, then (a) the program will\n//   be killed and restarted if its source files change; (b) if\n//   something goes really wrong (bundling fails, the program crashes\n//   constantly) such that we give up, we will start trying again if\n//   the source files change. If false, then we don't do (a) and if\n//   (b) happens we just give up permanently.\n//\n// - noRestartBanner: Set to true to skip the banner that is normally\n//   printed after each restart of the app once it is ready to listen\n//   for connections.\n//\n// - Other options: port, mongoUrl, oplogUrl, buildOptions, rootUrl,\n//   settingsFile, program, proxy, recordPackageUsage\n//\n// To use, construct an instance of AppRunner, and then call start() to start it\n// running. To stop it, either return false from onRunEnd, or call stop().  (But\n// don't call stop() from inside onRunEnd: that causes a deadlock.)\n//\n// The 'result' argument to onRunEnd is an object with keys:\n//\n// - outcome: the reason the run ended. One of:\n//\n//   - 'terminated': the process exited. Additionally, a 'code'\n//     attribute will be set of the process exited on its own accord,\n//     a 'signal' attribute will be set if the process was killed on a\n//     signal, or neither will be set if the process could not be\n//     spawned (spawn call failed, or no such program in bundle) -- in\n//     this last case an explanation will have been written to the run\n//     log, and you may assume that it will take more than source code\n//     changes to fix the problem.\n//\n//   - 'bundle-fail': bundling failed.\n//\n//   - 'changed': watchForChanges was true and a source file changed.\n//\n//   - 'wrong-release': the release that this app targets does not\n//     match the currently running version of Meteor (eg, the user\n//     typed 'meteor update' in another window). An 'displayReleaseNeeded'\n//     attribute will be present giving the app's release name.\n//\n//   - 'conflicting-versions': the constraint solver could not find a set of\n//     package versions to use that would satisfy the constraints of\n//     .meteor/versions and .meteor/packages. This could be caused by conflicts\n//     in .meteor/versions, conflicts in .meteor/packages, and/or inconsistent\n//     changes to the dependencies in local packages.\n//\n//   - 'stopped': stop() was called while a run was in progress.\n//\n// - errors: for 'bundle-fail', the buildmessage messages object corresponding\n//      to the error\n//\n// - watchSet: for runs in which there's a reason to wait for file changes\n//      ('bundle-fail' and 'terminated'), the WatchSet to wait on.\nvar AppRunner = function (options) {\n  var self = this;\n\n  self.projectContext = options.projectContext;\n\n  // note: run-all.js updates port directly\n  self.port = options.port;\n  self.listenHost = options.listenHost;\n  self.mongoUrl = options.mongoUrl;\n  self.oplogUrl = options.oplogUrl;\n  self.buildOptions = options.buildOptions;\n  self.rootUrl = options.rootUrl;\n  self.mobileServerUrl = options.mobileServerUrl;\n  self.cordovaRunner = options.cordovaRunner;\n  self.settingsFile = options.settingsFile;\n  self.debugPort = options.debugPort;\n  self.proxy = options.proxy;\n  self.watchForChanges =\n    options.watchForChanges === undefined ? true : options.watchForChanges;\n  self.onRunEnd = options.onRunEnd;\n  self.noRestartBanner = options.noRestartBanner;\n  self.recordPackageUsage =\n    options.recordPackageUsage === undefined ? true : options.recordPackageUsage;\n  self.omitPackageMapDeltaDisplayOnFirstRun =\n    options.omitPackageMapDeltaDisplayOnFirstRun;\n\n  self.fiber = null;\n  self.startFuture = null;\n  self.runFuture = null;\n  self.exitFuture = null;\n  self.watchFuture = null;\n\n  // If this future is set with self.awaitFutureBeforeStart, then for the first\n  // run, we will wait on it just before self.appProcess.start() is called.\n  self._beforeStartFuture = null;\n  // A hacky state variable that indicates that the proxy process (this process)\n  // is communicating to the app process over ipc. If an error in communication\n  // occurs, we can distinguish it in a callback handling the 'error' event.\n  self._refreshing = false;\n};\n\n_.extend(AppRunner.prototype, {\n  // Start the app running, and restart it as necessary. Returns\n  // immediately.\n  start: function () {\n    var self = this;\n\n    if (self.fiber)\n      throw new Error(\"already started?\");\n\n    self.startFuture = new Future;\n    // XXX I think it's correct to not try to use bindEnvironment here:\n    //     the extra fiber should be independent of this one.\n    self.fiber = Fiber(function () {\n      self._fiber();\n    });\n    self.fiber.run();\n    self.startFuture.wait();\n    self.startFuture = null;\n  },\n\n  // Shut down the app. stop() will block until the app is shut\n  // down. This may involve waiting for bundling to\n  // finish. Idempotent, however only one thread may be in stop() at a\n  // time.\n  stop: function () {\n    var self = this;\n\n    if (! self.fiber)\n      return; // nothing to do\n\n    if (self.exitFuture)\n      throw new Error(\"another fiber already stopping?\");\n\n    // The existence of this future makes the fiber break out of its loop.\n    self.exitFuture = new Future;\n\n    self._runFutureReturn({ outcome: 'stopped' });\n    self._watchFutureReturn();\n    if (self._beforeStartFuture && ! self._beforeStartFuture.isResolved()) {\n      // If we stopped before mongod started (eg, due to mongod startup\n      // failure), unblock the runner fiber from waiting for mongod to start.\n      self._beforeStartFuture.return(true);\n    }\n    self.exitFuture.wait();\n    self.exitFuture = null;\n  },\n\n  awaitFutureBeforeStart: function(future) {\n    var self = this;\n    if (self._beforeStartFuture) {\n      throw new Error(\"awaitFutureBeforeStart called twice?\");\n    } else if (future instanceof Future) {\n      self._beforeStartFuture = future;\n    } else {\n      throw new Error(\"non-Future passed to awaitFutureBeforeStart\");\n    }\n  },\n\n  // Run the program once, wait for it to exit, and then return. The\n  // return value is same as onRunEnd.\n  _runOnce: function (options) {\n    var self = this;\n    options = options || {};\n    var firstRun = options.firstRun;\n\n    Console.enableProgressDisplay(true);\n\n    runLog.clearLog();\n    self.proxy.setMode(\"hold\");\n\n    // Bundle up the app\n    var bundlePath = self.projectContext.getProjectLocalDirectory('build');\n\n    // Cache the server target because the server will not change inside\n    // a single invocation of _runOnce().\n    var cachedServerWatchSet;\n\n    // Builders saved from previous iterations\n    var builders = {};\n\n    var bundleApp = function () {\n      if (! firstRun) {\n        // If the build fails in a way that could be fixed by a refresh, allow\n        // it even if we refreshed previously, since that might have been a\n        // little while ago.\n        catalog.triedToRefreshRecently = false;\n\n        // If this isn't the first time we've run, we need to reset the project\n        // context since everything we have cached may have changed.\n        // XXX We can try to be a little less conservative here:\n        // - Don't re-build the whole local catalog if we know which local\n        //   packages have changed.  (This one might be a little trickier due\n        //   to how the WatchSets are laid out.  Might be possible to avoid\n        //   re-building the local catalog at all if packages didn't change\n        //   at all, though.)\n        self.projectContext.reset({}, {\n          // Don't forget all Isopack objects; just make sure to check that they\n          // are up to date.\n          softRefreshIsopacks: true,\n          // Don't forget the package map we calculated last time, even if we\n          // didn't write it to disk (because, eg, we're not running with a\n          // release that matches the app's release).  While we will still check\n          // our constraints, we will use the map we calculated last time as the\n          // previous solution (not what's on disk). Package deltas should be\n          // shown from the previous solution.\n          preservePackageMap: true\n        });\n        var messages = buildmessage.capture(function () {\n          self.projectContext.readProjectMetadata();\n        });\n        if (messages.hasMessages()) {\n          return {\n            runResult: {\n              outcome: 'bundle-fail',\n              errors: messages,\n              watchSet: self.projectContext.getProjectAndLocalPackagesWatchSet()\n            }\n          };\n        }\n      }\n\n      // Check to make sure we're running the right version of Meteor.\n      var wrongRelease = ! release.usingRightReleaseForApp(self.projectContext);\n      if (wrongRelease) {\n        return {\n          runResult: {\n            outcome: 'wrong-release',\n            displayReleaseNeeded:\n              self.projectContext.releaseFile.displayReleaseName\n          }\n        };\n      }\n\n      messages = buildmessage.capture(function () {\n        self.projectContext.prepareProjectForBuild();\n      });\n      if (messages.hasMessages()) {\n        return {\n          runResult: {\n            outcome: 'bundle-fail',\n            errors: messages,\n            watchSet: self.projectContext.getProjectAndLocalPackagesWatchSet()\n          }\n        };\n      }\n\n      // Show package changes... unless it's the first time in test-packages.\n      if (!(self.omitPackageMapDeltaDisplayOnFirstRun && firstRun)) {\n        self.projectContext.packageMapDelta.displayOnConsole();\n      }\n\n      if (self.recordPackageUsage) {\n        stats.recordPackages({\n          what: \"sdk.run\",\n          projectContext: self.projectContext\n        });\n      }\n\n      var bundleResult = Profile.run(\"Rebuild App\", function () {\n        var includeNodeModules = 'symlink';\n\n        // On Windows we cannot symlink node_modules. Copying them is too slow.\n        // Instead receive the NODE_PATH env that we need to set and set it\n        // later on running.\n        if (process.platform === 'win32') {\n          includeNodeModules = 'reference-directly';\n        }\n\n        var bundleResult = bundler.bundle({\n          projectContext: self.projectContext,\n          outputPath: bundlePath,\n          includeNodeModules: includeNodeModules,\n          buildOptions: self.buildOptions,\n          hasCachedBundle: !! cachedServerWatchSet,\n          previousBuilders: builders\n        });\n\n        // save new builders with their caches\n        ({builders} = bundleResult);\n\n        return bundleResult;\n      });\n\n      // Keep the server watch set from the initial bundle, because subsequent\n      // bundles will not contain a server target.\n      if (cachedServerWatchSet) {\n        bundleResult.serverWatchSet = cachedServerWatchSet;\n      } else {\n        cachedServerWatchSet = bundleResult.serverWatchSet;\n      }\n\n      if (bundleResult.errors) {\n        return {\n          runResult: {\n            outcome: 'bundle-fail',\n            errors: bundleResult.errors,\n            watchSet: combinedWatchSetForBundleResult(bundleResult)\n          }\n        };\n      } else {\n        return { bundleResult: bundleResult };\n      }\n    };\n\n    var combinedWatchSetForBundleResult = function (br) {\n      var watchSet = br.serverWatchSet.clone();\n      watchSet.merge(br.clientWatchSet);\n      return watchSet;\n    };\n\n    var bundleResult;\n    var bundleResultOrRunResult = bundleApp();\n    if (bundleResultOrRunResult.runResult)\n      return bundleResultOrRunResult.runResult;\n    bundleResult = bundleResultOrRunResult.bundleResult;\n\n    firstRun = false;\n\n    // Read the settings file, if any\n    var settings = null;\n    var settingsWatchSet = new watch.WatchSet;\n    var settingsMessages = buildmessage.capture({\n      title: \"preparing to run\",\n      rootPath: process.cwd()\n    }, function () {\n      if (self.settingsFile)\n        settings = files.getSettings(self.settingsFile, settingsWatchSet);\n    });\n    if (settingsMessages.hasMessages()) {\n      return {\n        outcome: 'bundle-fail',\n        errors: settingsMessages,\n        watchSet: settingsWatchSet\n      };\n    }\n\n    var serverWatchSet = bundleResult.serverWatchSet;\n    serverWatchSet.merge(settingsWatchSet);\n\n    // We only can refresh the client without restarting the server if the\n    // client contains the 'autoupdate' package.\n    var canRefreshClient = self.projectContext.packageMap &&\n          self.projectContext.packageMap.getInfo('autoupdate');\n\n    if (! canRefreshClient) {\n      // Restart server on client changes if we can't refresh the client.\n      serverWatchSet = combinedWatchSetForBundleResult(bundleResult);\n    }\n\n    const cordovaRunner = self.cordovaRunner;\n    if (cordovaRunner) {\n      const pluginVersions =\n        cordova.pluginVersionsFromStarManifest(bundleResult.starManifest);\n\n      if (!cordovaRunner.started) {\n        const { settingsFile, mobileServerUrl } = self;\n        const messages = buildmessage.capture(() => {\n          cordovaRunner.prepareProject(bundlePath, pluginVersions,\n            { settingsFile, mobileServerUrl });\n        });\n\n        if (messages.hasMessages()) {\n          return {\n            outcome: 'bundle-fail',\n            errors: messages,\n            watchSet: combinedWatchSetForBundleResult(bundleResult)\n          };\n        }\n        cordovaRunner.printWarningsIfNeeded();\n      } else {\n        // If the set of Cordova platforms or plugins changes from one run\n        // to the next, we just exit, because we don't yet have a way to,\n        // for example, get the new plugins to the mobile clients or stop a\n        // running client on a platform that has been removed.\n\n        if (cordovaRunner.havePlatformsChangedSinceLastRun()) {\n          return { outcome: 'outdated-cordova-platforms' };\n        }\n\n        if (cordovaRunner.havePluginsChangedSinceLastRun(pluginVersions)) {\n          return { outcome: 'outdated-cordova-plugins' };\n        }\n      }\n    }\n\n    // Atomically (1) see if we've been stop()'d, (2) if not, create a\n    // future that can be used to stop() us once we start running.\n    if (self.exitFuture)\n      return { outcome: 'stopped' };\n    if (self.runFuture)\n      throw new Error(\"already have future?\");\n    var runFuture = self.runFuture = new Future;\n\n    // Run the program\n    options.beforeRun && options.beforeRun();\n    var appProcess = new AppProcess({\n      projectContext: self.projectContext,\n      bundlePath: bundlePath,\n      port: self.port,\n      listenHost: self.listenHost,\n      rootUrl: self.rootUrl,\n      mongoUrl: self.mongoUrl,\n      oplogUrl: self.oplogUrl,\n      mobileServerUrl: self.mobileServerUrl,\n      onExit: function (code, signal) {\n        self._runFutureReturn({\n          outcome: 'terminated',\n          code: code,\n          signal: signal,\n          watchSet: combinedWatchSetForBundleResult(bundleResult)\n        });\n      },\n      debugPort: self.debugPort,\n      onListen: function () {\n        self.proxy.setMode(\"proxy\");\n        options.onListen && options.onListen();\n        if (self.startFuture)\n          self.startFuture['return']();\n      },\n      nodeOptions: getNodeOptionsFromEnvironment(),\n      nodePath: _.map(bundleResult.nodePath, files.convertToOSPath),\n      settings: settings,\n      ipcPipe: self.watchForChanges\n    });\n\n    // Empty self._beforeStartFutures and await its elements.\n    if (firstRun && self._beforeStartFuture) {\n      var stopped = self._beforeStartFuture.wait();\n      if (stopped) {\n        return true;\n      }\n    }\n\n    appProcess.start();\n    function maybePrintLintWarnings(bundleResult) {\n      if (! (self.projectContext.lintAppAndLocalPackages &&\n             bundleResult.warnings)) {\n        return;\n      }\n      if (bundleResult.warnings.hasMessages()) {\n        const formattedMessages = bundleResult.warnings.formatMessages();\n        runLog.log(\n          `Linted your app.\\n\\n${ formattedMessages }`,\n          { arrow: true });\n      } else {\n        runLog.log('Linted your app. No linting errors.',\n                   { arrow: true });\n      }\n    }\n    maybePrintLintWarnings(bundleResult);\n\n    if (cordovaRunner && !cordovaRunner.started) {\n      cordovaRunner.startRunTargets();\n    }\n\n    // Start watching for changes for files if requested. There's no\n    // hurry to do this, since clientWatchSet contains a snapshot of the\n    // state of the world at the time of bundling, in the form of\n    // hashes and lists of matching files in each directory.\n    var serverWatcher;\n    var clientWatcher;\n\n    if (self.watchForChanges) {\n      serverWatcher = new watch.Watcher({\n        watchSet: serverWatchSet,\n        onChange: function () {\n          self._runFutureReturn({\n            outcome: 'changed'\n          });\n        }\n      });\n    }\n\n    var setupClientWatcher = function () {\n      clientWatcher && clientWatcher.stop();\n      clientWatcher = new watch.Watcher({\n         watchSet: bundleResult.clientWatchSet,\n         onChange: function () {\n          var outcome = watch.isUpToDate(serverWatchSet)\n                      ? 'changed-refreshable' // only a client asset has changed\n                      : 'changed'; // both a client and server asset changed\n          self._runFutureReturn({ outcome: outcome });\n         }\n      });\n    };\n    if (self.watchForChanges && canRefreshClient) {\n      setupClientWatcher();\n    }\n\n    Console.enableProgressDisplay(false);\n\n    // Wait for either the process to exit, or (if watchForChanges) a\n    // source file to change. Or, for stop() to be called.\n    var ret = runFuture.wait();\n\n    try {\n      while (ret.outcome === 'changed-refreshable') {\n        if (! canRefreshClient)\n          throw Error(\"Can't refresh client?\");\n\n        // We stay in this loop as long as only refreshable assets have changed.\n        // When ret.refreshable becomes false, we restart the server.\n        bundleResultOrRunResult = bundleApp();\n        if (bundleResultOrRunResult.runResult)\n          return bundleResultOrRunResult.runResult;\n        bundleResult = bundleResultOrRunResult.bundleResult;\n\n        maybePrintLintWarnings(bundleResult);\n\n        var oldFuture = self.runFuture = new Future;\n\n        // Notify the server that new client assets have been added to the\n        // build.\n        self._refreshing = true;\n        appProcess.proc.send({ refresh: 'client' });\n        self._refreshing = false;\n\n        // Establish a watcher on the new files.\n        setupClientWatcher();\n\n        runLog.logClientRestart();\n\n        // Wait until another file changes.\n        ret = oldFuture.wait();\n      }\n    } finally {\n      self.runFuture = null;\n\n      if (ret.outcome === 'changed') {\n        runLog.logTemporary(\"=> Server modified -- restarting...\");\n      }\n\n      self.proxy.setMode(\"hold\");\n      appProcess.stop();\n\n      serverWatcher && serverWatcher.stop();\n      clientWatcher && clientWatcher.stop();\n    }\n\n    return ret;\n  },\n\n  _runFutureReturn: function (value) {\n    var self = this;\n    if (!self.runFuture)\n      return;\n    var runFuture = self.runFuture;\n    self.runFuture = null;\n    runFuture['return'](value);\n  },\n\n  _watchFutureReturn: function () {\n    var self = this;\n    if (!self.watchFuture)\n      return;\n    var watchFuture = self.watchFuture;\n    self.watchFuture = null;\n    watchFuture.return();\n  },\n\n  _fiber: function () {\n    var self = this;\n\n    var crashCount = 0;\n    var crashTimer = null;\n    var firstRun = true;\n\n    while (true) {\n\n      var resetCrashCount = function () {\n        crashTimer = setTimeout(function () {\n          crashCount = 0;\n        }, 3000);\n      };\n\n      var runResult = self._runOnce({\n        onListen: function () {\n          if (! self.noRestartBanner && ! firstRun)\n            runLog.logRestart();\n        },\n        beforeRun: resetCrashCount,\n        firstRun: firstRun\n      });\n      firstRun = false;\n\n      clearTimeout(crashTimer);\n      if (runResult.outcome !== \"terminated\")\n        crashCount = 0;\n\n      var wantExit = self.onRunEnd ? !self.onRunEnd(runResult) : false;\n      if (wantExit || self.exitFuture || runResult.outcome === \"stopped\")\n        break;\n\n      if (runResult.outcome === \"wrong-release\" ||\n          runResult.outcome === \"conflicting-versions\") {\n        // Since the only implementation of onRunEnd sets wantExit on these\n        // outcomes, we will never get here currently. Moreover, it's not\n        // actually possible for us to handle these cases correctly, because our\n        // contract says that we should wait for changes, but runResult doesn't\n        // actually contain a watchset. Oops. Just throw an exception for now.\n        throw new Error(\"can't handle outcome \" + runResult.outcome);\n      }\n\n      else if (runResult.outcome === \"bundle-fail\") {\n        runLog.log(\"Errors prevented startup:\\n\\n\" +\n                        runResult.errors.formatMessages(),  { arrow: true });\n        if (self.watchForChanges) {\n          runLog.log(\"Your application has errors. \" +\n                     \"Waiting for file change.\",  { arrow: true });\n          Console.enableProgressDisplay(false);\n        }\n      }\n\n      else if (runResult.outcome === \"changed\")\n        continue;\n\n      else if (runResult.outcome === \"terminated\") {\n        if (runResult.signal) {\n          runLog.log('Exited from signal: ' + runResult.signal, { arrow: true });\n        } else if (runResult.code !== undefined) {\n          runLog.log('Exited with code: ' + runResult.code, { arrow: true });\n        } else {\n          // explanation should already have been logged\n        }\n\n        crashCount ++;\n        if (crashCount < 3)\n          continue;\n\n        if (self.watchForChanges) {\n          runLog.log(\"Your application is crashing. \" +\n                     \"Waiting for file change.\",\n                     { arrow: true });\n          Console.enableProgressDisplay(false);\n        }\n      }\n\n      else {\n        throw new Error(\"unknown run outcome?\");\n      }\n\n      if (self.watchForChanges) {\n        self.watchFuture = new Future;\n\n        if (!runResult.watchSet)\n          throw Error(\"watching for changes with no watchSet?\");\n        // XXX reference to watcher is lost later?\n        var watcher = new watch.Watcher({\n          watchSet: runResult.watchSet,\n          onChange: function () {\n            self._watchFutureReturn();\n          }\n        });\n        self.proxy.setMode(\"errorpage\");\n        // If onChange wasn't called synchronously (clearing watchFuture), wait\n        // on it.\n        self.watchFuture && self.watchFuture.wait();\n        // While we were waiting, did somebody stop() us?\n        if (self.exitFuture)\n          break;\n        runLog.log(\"Modified -- restarting.\",  { arrow: true });\n        Console.enableProgressDisplay(true);\n        continue;\n      }\n\n      break;\n    }\n\n    // Giving up for good.\n    if (self.exitFuture)\n      self.exitFuture['return']();\n    if (self.startFuture)\n      self.startFuture['return']();\n\n    self.fiber = null;\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n\nexports.AppRunner = AppRunner;\n"]}