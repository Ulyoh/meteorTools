{"version":3,"sources":["/tools/tool-env/install-babel.js"],"names":[],"mappings":";;;AAGA,SAAS,aAAa,GAAG;AACvB,MAAI,WAAW,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC1C,MAAI,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;;;;;AAKjD,WAAS,CAAC;AACR,gBAAY,EAAE,WAAW,CAAC,iBAAiB,CACzC,OAAO,CAAC,qBAAqB,CAAC,CAC/B;GACF,CAAC,CAAC;;;;AAIH,MAAI,KAAK,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACtC,MAAI,WAAW,GAAG,KAAK,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;AACzD,MAAI,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AAC/C,MAAI,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;;AAE9C,WAAS,CAAC;AACR,qBAAiB,EAAE,UAAU;GAC9B,CAAC,CAAC;CACJ;;;;AAMD,OAAO,CAAC,2BAA2B,CAAC,CAAC;;;;AAIrC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;;AAG3C,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;;;AAIzC,OAAO,CAAC,cAAc,CAAC,CAAC,cAAc,EAAE,CAAC;;;;AAIzC,OAAO,CAAC,iCAAiC,CAAC,CAAC","file":"tools/tool-env/install-babel.js.map","sourcesContent":["// This file exists because it is the file in the tool that is not automatically\n// transpiled by Babel\n\nfunction babelRegister() {\n  var meteorBabel = require('meteor-babel');\n  var configure = require('meteor-babel/register');\n\n  // It's potentially important that this call to configure comes before\n  // we require fs/files.js, just in case the features enabled here are\n  // used by fs/files.js.\n  configure({\n    babelOptions: meteorBabel.getDefaultOptions(\n      require('./babel-features.js')\n    )\n  });\n\n  // This require must come after the require(\"meteor-babel/register\")\n  // call above so that fs/files.js will be transpiled by meteor-babel.\n  var files = require(\"../fs/files.js\");\n  var toolEnvPath = files.convertToStandardPath(__dirname);\n  var toolsPath = files.pathDirname(toolEnvPath);\n  var meteorPath = files.pathDirname(toolsPath);\n\n  configure({\n    sourceMapRootPath: meteorPath\n  });\n}\n\n\n\n// Install ES2015-complaint polyfills for Object, Array, String, Function,\n// Symbol, Map, and Set, patching the native implementations if available.\nrequire(\"meteor-ecmascript-runtime\");\n\n// Install a global ES2015-compliant Promise constructor that knows how to\n// run all its callbacks in Fibers.\nglobal.Promise = require('meteor-promise');\n\n// Allow all Promise callbacks to be run in a Fiber.\nglobal.Promise.Fiber = require('fibers');\n\n// Include helpers from NPM so that the compiler doesn't need to add boilerplate\n// at the top of every file\nrequire('meteor-babel').installRuntime();\n\n// Installs source map support with a hook to add functions to look for source\n// maps in custom places\nrequire('./source-map-retriever-stack.js');\n"]}