{"version":3,"sources":["/tools/tool-env/profile.js"],"names":[],"mappings":"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","file":"tools/tool-env/profile.js.map","sourcesContent":["// Tiny profiler\n//\n// Enable by setting the environment variable `METEOR_PROFILE`.\n//\n// The main entry point is `Profile`, which wraps an existing function\n// and returns a new function which, when called, calls the original\n// function and profiles it.\n//\n// before:\n//\n//     foo: function (a) {\n//       return a + this.b;\n//     },\n//\n// after:\n//\n//     foo: Profile(\"foo\", function (a) {\n//       return a + this.b;\n//     }),\n//\n// The advantage of this form is that it doesn't change the\n// indentation of the wrapped code, which makes merging changes from\n// other code branches easier.\n//\n// If profiling is disabled (if `METEOR_PROFILE` isn't set), `Profile`\n// simply returns the original function.\n//\n// To run a profiling session and print the report, call `Profile.run`:\n//\n//     var createBundle = function () {\n//       Profile.run(\"bundle\", function () {\n//         ...code to create the bundle which includes calls to `Profile`.\n//       });\n//     };\n//\n// Code is not profiled when called outside of a `Profile.run`, so the\n// times in the report only include the time spent inside of the call\n// to `Profile.run`.\n//\n// Sometimes you'll want to use a name for the profile bucket which\n// depends on the arguments passed to the function or the value of\n// `this`.  In this case you can pass a function for the bucket\n// argument, which will be called to get the bucket name.\n//\n// before:\n//     build: function (target) {\n//       ... build target ...\n//     },\n//\n// after:\n//     build: Profile(\n//       function (target) { return \"build \" + target; },\n//       function (target) {\n//         ... build target ...\n//       }),\n//\n// But if it's easier, you can use `Profile.time` instead, which\n// immediately calls the passed function with no arguments and\n// profiles it, and returns what the function returns.\n//\n//     foo: function (a) {\n//       var self = this;\n//       return Profile.time(\"foo\", function () {\n//         return a + self.b;\n//       });\n//     },\n//\n//     build: function (target) {\n//       var self = this;\n//       self.doSomeSetup();\n//       Profile.time(\"build \" + target, function () {\n//         ... build target ...\n//       });\n//       self.doSomeCleanup();\n//     },\n//\n// The disadvantage is that you end up changing the indentation of the\n// profiled code, which makes merging branches more painful.  But you\n// can profile anywhere in the code; you don't have to just profile at\n// function boundaries.\n//\n// Note profiling code will itself add a bit of execution time.\n// If you profile in a tight loop and your total execution time is\n// going up, you're probably starting to profile how long it takes to\n// profile things :).\n//\n// If another profile (such as \"compile js\") is called while the first\n// function is currently being profiled, this creates an entry like\n// this:\n//\n//    build client : compile js\n//\n// which can continue to be nested, e.g.,\n//\n//    build client : compile js : read source files\n//\n// The total time reported for a bucket such as \"build client\" doesn't\n// change regardless of whether it has child entries or not.  However,\n// if an entry has child entries, it automatically gets an \"other\"\n// entry:\n//\n//     build client: 400.0\n//       compile js: 300.0\n//         read source files: 20.0\n//         other compile js: 280.0\n//       other build client: 100.0\n//\n// The \"other\" entry reports how much time was spent in the \"build\n// client\" entry not spent in the other child entries.\n//\n// The are two reports displayed: the hierarchical report and the\n// leaf time report.  The hierarchical report looks like the example\n// above and shows how much time was spent in each entry within its\n// parent entry.\n//\n// The primary purpose of the hierarchical report is to be able to see\n// where times are unaccounted for.  If you see a lot of time being\n// spent in an \"other\" bucket, and you don't know what it is, you can\n// add more profiling to dig deeper.\n//\n// The leaf time report shows the total time spent within leaf\n// buckets.  For example, if if multiple steps have \"read source\n// files\", the leaf time reports shows the total amount of time spent\n// in \"read source files\" across all calls.\n//\n// Once you see in the hierarchical report that you have a good handle\n// on accounting for most of the time, the leaf report shows you which\n// buckets are the most expensive.\n//\n// By only including leaf buckets, the times in the leaf report are\n// non-overlapping.  (The total of the times equals the elapsed time\n// being profiled).\n//\n// For example, suppose \"A\" is profiled for a total time of 200ms, and\n// that includes a call to \"B\" of 150ms:\n//\n//     B: 150\n//     A (without B): 50\n//\n// and suppose there's another call to \"A\" which *doesn't* include a\n// call to \"B\":\n//\n//     A: 300\n//\n// and there's a call to \"B\" directly:\n//\n//     B: 100\n//\n// All for a total time of 600ms.  In the hierarchical report, this\n// looks like:\n//\n//     A: 500.0\n//       B: 150.0\n//       other A: 350.0\n//     B: 100.0\n//\n// and in the leaf time report:\n//\n//     other A: 350.0\n//     B: 250.0\n//\n// In both reports the grand total is 600ms.\n\nvar _ = require('underscore');\nvar Fiber = require('fibers');\n\nvar enabled = !! process.env['METEOR_PROFILE'];\nvar filter = ~~process.env['METEOR_PROFILE'] || 100; // ms\n\nvar bucketTimes = {};\n\nvar spaces = function (x) {\n  var s = '';\n  for (var i = 0;  i < x;  ++i)\n    s += '  ';\n  return s;\n};\n\nvar globalEntry = [];\n\nvar running = false;\n\nvar start = function () {\n  bucketTimes = {};\n  running = true;\n};\n\nvar Profile = function (bucketName, f) {\n  if (! enabled)\n    return f;\n\n  return function (...args) {\n    if (! running)\n      return f.apply(this, args);\n\n    var name;\n    if (_.isFunction(bucketName))\n      name = bucketName.apply(this, args);\n    else\n      name = bucketName;\n\n    var currentEntry;\n    if (Fiber.current) {\n      currentEntry =\n        Fiber.current.profilerEntry || (Fiber.current.profilerEntry = []);\n    } else {\n      currentEntry = globalEntry;\n    }\n\n    currentEntry.push(name);\n    var key = JSON.stringify(currentEntry);\n    var start = process.hrtime();\n    var err = null;\n    try {\n      return f.apply(this, args);\n    }\n    catch (e) {\n      err = e;\n    }\n    finally {\n      var elapsed = process.hrtime(start);\n      bucketTimes[key] = (bucketTimes[key] || 0) +\n        (elapsed[0] * 1000 + elapsed[1] / 1000000);\n      currentEntry.pop();\n    }\n\n    if (err) throw err;\n  };\n};\n\nvar time = function (bucket, f) {\n  return Profile(bucket, f)();\n};\n\nvar entries = null;\n\nvar prefix = \"| \";\n\nvar entryName = function (entry) {\n  return _.last(entry);\n};\n\nvar entryTime = function (entry) {\n  return bucketTimes[JSON.stringify(entry)];\n};\n\nvar isTopLevelEntry = function (entry) {\n  return entry.length === 1;\n};\n\nvar topLevelEntries = function () {\n  return _.filter(entries, isTopLevelEntry);\n};\n\nvar print = function (indent, text) {\n  console.log(prefix + spaces(indent * 2) + text);\n};\n\nvar isChild = function (entry1, entry2) {\n  return (entry2.length === entry1.length + 1 &&\n          _.isEqual(entry1, entry2.slice(0, entry1.length)));\n};\n\nvar children = function (entry1) {\n  return _.filter(entries, function (entry2) {\n    return isChild(entry1, entry2);\n  });\n}\n\nvar hasChildren = function (entry) {\n  return children(entry).length !== 0;\n};\n\nvar isLeaf = function (entry) {\n  return ! hasChildren(entry);\n};\n\nvar reportOnLeaf = function (level, entry) {\n  if (entryTime(entry) < filter) return;\n  print(\n    level,\n    _.last(entry) + \": \" + entryTime(entry).toFixed(1));\n};\n\nvar otherTime = function (entry) {\n  var total = 0;\n  _.each(children(entry), function (child) {\n    total += bucketTimes[JSON.stringify(child)];\n  });\n  return entryTime(entry) - total;\n};\n\nvar injectOtherTime = function (entry) {\n  var name = \"other \" + entryName(entry);\n  var other = _.clone(entry);\n  other.push(name);\n  bucketTimes[JSON.stringify(other)] = otherTime(entry);\n  entries.push(other);\n};\n\nvar reportOnParent = function (level, entry) {\n  if (entryTime(entry) < filter) return;\n  print(level, entryName(entry) + \": \" + entryTime(entry).toFixed(1));\n  _.each(children(entry), function (child) {\n    reportOn(level + 1, child);\n  });\n};\n\nvar reportOn = function (level, entry) {\n  if (hasChildren(entry))\n    reportOnParent(level, entry);\n  else\n    reportOnLeaf(level, entry);\n};\n\nvar reportHierarchy = function () {\n  _.each(topLevelEntries(), function (entry) {\n    reportOn(0, entry);\n  });\n};\n\nvar allLeafs = function () {\n  return _.union(_.map(_.filter(entries, isLeaf), entryName));\n};\n\nvar leafTotal = function (leafName) {\n  var total = 0;\n  _.each(\n    _.filter(entries, function (entry) {\n      return isLeaf(entry) && entryName(entry) === leafName;\n    }),\n    function (leaf) {\n      total += entryTime(leaf);\n    }\n  );\n  return total;\n};\n\nvar reportTotals = function () {\n  var totals = [];\n  _.each(allLeafs(), function (leaf) {\n    totals.push({name: leaf, time: leafTotal(leaf)});\n  });\n  totals.sort(function (a, b) {\n    return a.time === b.time ? 0 : a.time > b.time ? -1 : 1;\n  });\n  var grandTotal = 0;\n  _.each(totals, function (total) {\n    if (total.time < filter) return;\n    print(0, total.name + \": \" + total.time.toFixed(1));\n    grandTotal += total.time;\n  });\n  print(0, \"Total: \" + grandTotal.toFixed(1));\n};\n\nvar setupReport = function () {\n  entries = _.map(_.keys(bucketTimes), JSON.parse);\n  _.each(_.filter(entries, hasChildren), function (parent) {\n    injectOtherTime(parent);\n  });\n};\n\nvar report = function () {\n  if (! enabled)\n    return;\n  running = false;\n  print(0, '');\n  setupReport();\n  reportHierarchy();\n  print(0, '');\n  reportTotals();\n};\n\nvar run = function (bucketName, f) {\n  start();\n  try {\n    return time(bucketName, f);\n  }\n  finally {\n    report();\n  }\n};\n\nProfile.time = time;\nProfile.run = run;\n\nexports.Profile = Profile;\n\n"]}