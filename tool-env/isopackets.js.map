{"version":3,"sources":["/tools/tool-env/isopackets.js"],"names":[],"mappings":"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","file":"tools/tool-env/isopackets.js.map","sourcesContent":["var _ = require('underscore');\n\nvar bundler = require('../isobuild/bundler.js');\nvar Builder = require('../isobuild/builder.js');\nvar compiler = require('../isobuild/compiler.js');\nvar isopackCacheModule = require('../isobuild/isopack-cache.js');\n\nvar buildmessage = require('../utils/buildmessage.js');\nvar files = require('../fs/files.js');\nvar config = require('../meteor-services/config.js');\nvar watch = require('../fs/watch.js');\nvar Console = require('../console/console.js').Console;\nvar fiberHelpers = require('../utils/fiber-helpers.js');\nvar packageMapModule = require('../packaging/package-map.js');\n\n// TL;DR: Isopacket is a set of isopacks. Isopackets are used only inside\n// meteor-tool.\n\n// An isopacket is a predefined set of isopackages which the meteor command-line\n// tool can load into its process. This is how we use the DDP client and many\n// other packages inside the tool. The isopackets are listed below in the\n// ISOPACKETS constant.\n//\n// All packages that are in isopackets and all of their transitive dependencies\n// must be part of the core Meteor git checkout (not loaded from troposphere).\n//\n// The requested packages will be loaded together with all of their\n// dependencies. If you request to load the same isopacket more than once, you\n// will efficiently get the same pre-loaded isopacket. On the other hand, two\n// different loaded isopackets contain distinct copies of all of their packages\n// copy of all of the packages. The return value is an object that maps package\n// name to package exports (that is, it is the Package object from inside the\n// sandbox created for the newly loaded packages).\n//\n// For built releases, all of the isopackets are pre-compiled (as JsImages,\n// similar to a plugin or a server program) into the tool.\n//\n// When run from a checkout, all isopackets are re-compiled early in the startup\n// process if any of their sources have changed.\n//\n// Example usage:\n//   var DDP = require('./isopackets.js').load('ddp')['ddp-client'].DDP;\n//   var reverse = DDP.connect('reverse.meteor.com');\n//   Console.info(reverse.call('reverse', 'hello world'));\n\n\n// All of the defined isopackets. Whenever they are being built, they will be\n// built in the order listed here.\nvar ISOPACKETS = {\n  'ddp': ['ddp-client'],\n  'mongo': ['npm-mongo'],\n  'ejson': ['ejson'],\n  'constraint-solver': ['constraint-solver'],\n  'cordova-support': ['boilerplate-generator', 'logging', 'webapp-hashing',\n                      'xmlbuilder'],\n  'logging': ['logging']\n};\n\n// Caches isopackets in memory (each isopacket only needs to be loaded\n// once).  This is a map from isopacket name to either:\n//\n//  - The 'Package' dictionary, if the isopacket has already been loaded\n//    into memory\n//  - null, if the isopacket hasn't been loaded into memory but its on-disk\n//    instance is known to be ready\n//\n// The subtlety here is that when running from a checkout, we don't want to\n// accidentally load an isopacket before ensuring that it doesn't need to be\n// rebuilt. We used to need to load a \"js-analyze\" isopacket as part\n// of building other isopackets in ensureIsopacketsLoadable which made this\n// more important, though we've simplified it now by moving that code into\n// the tool itself.\nvar loadedIsopackets = {};\n\n// The main entry point: loads and returns an isopacket from cache or from\n// disk. Does not do a build step: ensureIsopacketsLoadable must be called\n// first!\nvar load = function (isopacketName) {\n  return fiberHelpers.noYieldsAllowed(function () {\n    if (_.has(loadedIsopackets, isopacketName)) {\n      if (loadedIsopackets[isopacketName]) {\n        return loadedIsopackets[isopacketName];\n      }\n\n      // This is the case where the isopacket is up to date on disk but not\n      // loaded.\n      var isopacket = loadIsopacketFromDisk(isopacketName);\n      loadedIsopackets[isopacketName] = isopacket;\n      return isopacket;\n    }\n\n    if (_.has(ISOPACKETS, isopacketName)) {\n      throw Error(\"Can't load isopacket before it has been verified: \"\n                  + isopacketName);\n    }\n\n    throw Error(\"Unknown isopacket: \" + isopacketName);\n  });\n};\n\nvar isopacketPath = function (isopacketName) {\n  return files.pathJoin(config.getIsopacketRoot(), isopacketName);\n};\n\n// ensureIsopacketsLoadable is called at startup and ensures that all isopackets\n// exist on disk as up-to-date loadable programs.\nvar calledEnsure = false;\nvar ensureIsopacketsLoadable = function () {\n  if (calledEnsure) {\n    throw Error(\"can't ensureIsopacketsLoadable twice!\");\n  }\n  calledEnsure = true;\n\n  // If we're not running from checkout, then there's nothing to build and we\n  // can declare that all isopackets are loadable.\n  if (! files.inCheckout()) {\n    _.each(ISOPACKETS, function (packages, name) {\n      loadedIsopackets[name] = null;\n    });\n    return;\n  }\n\n  // We make this object lazily later.\n  var isopacketBuildContext = null;\n\n  var failedPackageBuild = false;\n  // Look at each isopacket. Check to see if it's on disk and up to date. If\n  // not, build it. We rebuild them in the order listed in ISOPACKETS.\n  var messages = Console.withProgressDisplayVisible(function () {\n    return buildmessage.capture(function () {\n      _.each(ISOPACKETS, function (packages, isopacketName) {\n        if (failedPackageBuild)\n          return;\n\n        var isopacketRoot = isopacketPath(isopacketName);\n        var existingBuildinfo = files.readJSONOrNull(\n          files.pathJoin(isopacketRoot, 'isopacket-buildinfo.json'));\n        var needRebuild = ! existingBuildinfo;\n        if (! needRebuild && existingBuildinfo.builtBy !== compiler.BUILT_BY) {\n          needRebuild = true;\n        }\n        if (! needRebuild) {\n          var watchSet = watch.WatchSet.fromJSON(existingBuildinfo.watchSet);\n          if (! watch.isUpToDate(watchSet)) {\n            needRebuild = true;\n          }\n        }\n        if (! needRebuild) {\n          // Great, it's loadable without a rebuild.\n          loadedIsopackets[isopacketName] = null;\n          return;\n        }\n\n        // We're going to need to build! Make a catalog and loader if we haven't\n        // yet.\n        if (! isopacketBuildContext) {\n          isopacketBuildContext = makeIsopacketBuildContext();\n        }\n\n        buildmessage.enterJob({\n          title: \"bundling \" + isopacketName + \" packages for the tool\"\n        }, function () {\n          // Build the packages into the in-memory IsopackCache.\n          isopacketBuildContext.isopackCache.buildLocalPackages(packages);\n          if (buildmessage.jobHasMessages())\n            return;\n\n          // Now bundle them into a program.\n          var built = bundler.buildJsImage({\n            name: \"isopacket-\" + isopacketName,\n            packageMap: isopacketBuildContext.packageMap,\n            isopackCache: isopacketBuildContext.isopackCache,\n            use: packages\n          });\n          if (buildmessage.jobHasMessages())\n            return;\n\n          var builder = new Builder({outputPath: isopacketRoot});\n          builder.writeJson('isopacket-buildinfo.json', {\n            builtBy: compiler.BUILT_BY,\n            watchSet: built.watchSet.toJSON()\n          });\n          built.image.write(builder);\n          builder.complete();\n          // It's loadable now.\n          loadedIsopackets[isopacketName] = null;\n        });\n      });\n    });\n  });\n\n  // This is a build step ... but it's one that only happens in development, so\n  // it can just crash the app instead of being handled nicely.\n  if (messages.hasMessages()) {\n    Console.error(\"Errors prevented isopacket build:\");\n    Console.printMessages(messages);\n    throw new Error(\"isopacket build failed?\");\n  }\n};\n\n// Returns a new all-local-packages catalog to be used for building isopackets.\nvar newIsopacketBuildingCatalog = function () {\n  if (! files.inCheckout())\n    throw Error(\"No need to build isopackets unless in checkout!\");\n\n  var catalogLocal = require('../packaging/catalog/catalog-local.js');\n  var isopacketCatalog = new catalogLocal.LocalCatalog;\n  var messages = buildmessage.capture(\n    { title: \"scanning local core packages\" },\n    function () {\n      // When running from a checkout, isopacket building does use local\n      // packages, but *ONLY THOSE FROM THE CHECKOUT*: not app packages or\n      // $PACKAGE_DIRS packages.  One side effect of this: we really really\n      // expect them to all build, and we're fine with dying if they don't\n      // (there's no worries about needing to springboard).\n      isopacketCatalog.initialize({\n        localPackageSearchDirs: [files.pathJoin(\n          files.getCurrentToolsDir(), 'packages')],\n        buildingIsopackets: true\n      });\n    });\n  if (messages.hasMessages()) {\n    Console.arrowError(\"Errors while scanning core packages:\");\n    Console.printMessages(messages);\n    throw new Error(\"isopacket scan failed?\");\n  }\n  return isopacketCatalog;\n};\n\nvar makeIsopacketBuildContext = function () {\n  var context = {};\n  var catalog = newIsopacketBuildingCatalog();\n  var versions = {};\n  _.each(catalog.getAllPackageNames(), function (packageName) {\n    versions[packageName] = catalog.getLatestVersion(packageName).version;\n  });\n  context.packageMap = new packageMapModule.PackageMap(versions, {\n    localCatalog: catalog\n  });\n  // Make an isopack cache that doesn't save isopacks to disk and has no\n  // access to versioned packages.\n  context.isopackCache = new isopackCacheModule.IsopackCache({\n    packageMap: context.packageMap,\n    includeCordovaUnibuild: false,\n    // When linking JS files, don't include the padding spaces and line number\n    // comments. Since isopackets are loaded as part of possibly very short\n    // 'meteor' tool command invocations, we care more about startup time than\n    // legibility, and the difference is actually observable (eg 25% speedup\n    // loading constraint-solver).\n    noLineNumbers: true\n  });\n  return context;\n};\n\n// Loads a built isopacket from disk. Always loads (the cache is in 'load', not\n// this function). Does not run a build process; it must already be built.\nvar loadIsopacketFromDisk = function (isopacketName) {\n  var image = bundler.readJsImage(\n    files.pathJoin(isopacketPath(isopacketName), 'program.json'));\n\n  // An incredibly minimalist version of the environment from\n  // tools/server/boot.js.  Kind of a hack.\n  var env = {\n    __meteor_bootstrap__: { startupHooks: [] },\n    __meteor_runtime_config__: { meteorRelease: \"ISOPACKET\" }\n  };\n\n  var ret;\n  var messages = buildmessage.capture({\n    title: \"loading isopacket `\" + isopacketName + \"`\"\n  }, function () {\n    ret = image.load(env);\n  });\n\n  // This is a build step ... but it's one that only happens in development, so\n  // it can just crash the app instead of being handled nicely.\n  if (messages.hasMessages()) {\n    Console.error(\"Errors prevented isopacket load:\");\n    Console.printMessages(messages);\n    throw new Error(\"isopacket load failed?\");\n  }\n\n  // Run any user startup hooks.\n  while (env.__meteor_bootstrap__.startupHooks.length) {\n    var hook = env.__meteor_bootstrap__.startupHooks.shift();\n    hook();\n  }\n  // Setting this to null tells Meteor.startup to call hooks immediately.\n  env.__meteor_bootstrap__.startupHooks = null;\n\n  return ret;\n};\n\nvar isopackets = exports;\n_.extend(exports, {\n  load: load,\n  ensureIsopacketsLoadable: ensureIsopacketsLoadable,\n  ISOPACKETS: ISOPACKETS,\n  makeIsopacketBuildContext: makeIsopacketBuildContext\n});\n"]}